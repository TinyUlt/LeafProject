// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Msg {

  /// <summary>Holder for reflection information generated from msg.proto</summary>
  public static partial class MsgReflection {

    #region Descriptor
    /// <summary>File descriptor for msg.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MsgReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cgltc2cucHJvdG8SA21zZyIOCgxHYW1lVXNlckRhdGEiFQoFSGVsbG8SDAoE",
            "bmFtZRgBIAEoCSI2ChBVc2VyTG9naW5SZXF1ZXN0EhAKCFVzZXJOYW1lGAEg",
            "ASgJEhAKCFBhc3N3b3JkGAIgASgJIj4KEVVzZXJMb2dpblJlc3BvbnNlEhIK",
            "ClJlc3VsdGNvZGUYASABKAUSFQoNTm90aWZ5TWVzc2FnZRgCIAEoCSITChFV",
            "c2VyTG9nb3V0UmVxdWVzdCI/ChJVc2VyTG9nb3V0UmVzcG9uc2USEgoKUmVz",
            "dWx0Y29kZRgBIAEoBRIVCg1Ob3RpZnlNZXNzYWdlGAIgASgJIjkKE1VzZXJS",
            "ZWdpc3RlclJlcXVlc3QSEAoIVXNlck5hbWUYASABKAkSEAoIUGFzc3dvcmQY",
            "AiABKAkiQQoUVXNlclJlZ2lzdGVyUmVzcG9uc2USEgoKUmVzdWx0Y29kZRgB",
            "IAEoBRIVCg1Ob3RpZnlNZXNzYWdlGAIgASgJIiYKFFVzZXJFbnRlclJvb21S",
            "ZXF1ZXN0Eg4KBlJvb21JZBgBIAEoBSJkChVVc2VyRW50ZXJSb29tUmVzcG9u",
            "c2USEgoKUmVzdWx0Y29kZRgBIAEoBRIVCg1Ob3RpZnlNZXNzYWdlGAIgASgJ",
            "Eg8KB1RhYmxlSWQYAyABKAUSDwoHQ2hhaXJJZBgEIAEoBSIWChRVc2VyT3V0",
            "T2ZSb29tUmVxdWVzdCJCChVVc2VyT3V0T2ZSb29tUmVzcG9uc2USEgoKUmVz",
            "dWx0Y29kZRgBIAEoBRIVCg1Ob3RpZnlNZXNzYWdlGAIgASgJIjUKEE90aGVy",
            "c0VudGVyVGFibGUSDwoHQ2hhaXJJZBgBIAEoBRIQCghOaWNrTmFtZRgCIAEo",
            "CSI1ChBPdGhlcnNMZWF2ZVRhYmxlEg8KB0NoYWlySWQYASABKAUSEAoITmlj",
            "a05hbWUYAiABKAkiHAoaVXNlckZpbmlzaGVzTG9hZGluZ1JlcXVlc3QiRQoY",
            "VXNlck1lc3NhZ2VFcnJvclJlc3BvbnNlEhIKClJlc3VsdGNvZGUYASABKAUS",
            "FQoNTm90aWZ5TWVzc2FnZRgCIAEoCSouCglNZXNzYWdlSWQSCgoGX0hlbGxv",
            "EAASFQoRX1VzZXJMb2dpblJlcXVlc3QQAWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Msg.MessageId), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.GameUserData), global::Msg.GameUserData.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.Hello), global::Msg.Hello.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.UserLoginRequest), global::Msg.UserLoginRequest.Parser, new[]{ "UserName", "Password" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.UserLoginResponse), global::Msg.UserLoginResponse.Parser, new[]{ "Resultcode", "NotifyMessage" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.UserLogoutRequest), global::Msg.UserLogoutRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.UserLogoutResponse), global::Msg.UserLogoutResponse.Parser, new[]{ "Resultcode", "NotifyMessage" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.UserRegisterRequest), global::Msg.UserRegisterRequest.Parser, new[]{ "UserName", "Password" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.UserRegisterResponse), global::Msg.UserRegisterResponse.Parser, new[]{ "Resultcode", "NotifyMessage" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.UserEnterRoomRequest), global::Msg.UserEnterRoomRequest.Parser, new[]{ "RoomId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.UserEnterRoomResponse), global::Msg.UserEnterRoomResponse.Parser, new[]{ "Resultcode", "NotifyMessage", "TableId", "ChairId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.UserOutOfRoomRequest), global::Msg.UserOutOfRoomRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.UserOutOfRoomResponse), global::Msg.UserOutOfRoomResponse.Parser, new[]{ "Resultcode", "NotifyMessage" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.OthersEnterTable), global::Msg.OthersEnterTable.Parser, new[]{ "ChairId", "NickName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.OthersLeaveTable), global::Msg.OthersLeaveTable.Parser, new[]{ "ChairId", "NickName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.UserFinishesLoadingRequest), global::Msg.UserFinishesLoadingRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.UserMessageErrorResponse), global::Msg.UserMessageErrorResponse.Parser, new[]{ "Resultcode", "NotifyMessage" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum MessageId {
    [pbr::OriginalName("_Hello")] Hello = 0,
    [pbr::OriginalName("_UserLoginRequest")] UserLoginRequest = 1,
  }

  #endregion

  #region Messages
  public sealed partial class GameUserData : pb::IMessage<GameUserData> {
    private static readonly pb::MessageParser<GameUserData> _parser = new pb::MessageParser<GameUserData>(() => new GameUserData());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameUserData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.MsgReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameUserData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameUserData(GameUserData other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameUserData Clone() {
      return new GameUserData(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameUserData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameUserData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameUserData other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  /// <summary>
  /// 0
  /// </summary>
  public sealed partial class Hello : pb::IMessage<Hello> {
    private static readonly pb::MessageParser<Hello> _parser = new pb::MessageParser<Hello>(() => new Hello());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Hello> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.MsgReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Hello() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Hello(Hello other) : this() {
      name_ = other.name_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Hello Clone() {
      return new Hello(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Hello);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Hello other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Hello other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 1登录请求
  /// </summary>
  public sealed partial class UserLoginRequest : pb::IMessage<UserLoginRequest> {
    private static readonly pb::MessageParser<UserLoginRequest> _parser = new pb::MessageParser<UserLoginRequest>(() => new UserLoginRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserLoginRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.MsgReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserLoginRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserLoginRequest(UserLoginRequest other) : this() {
      userName_ = other.userName_;
      password_ = other.password_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserLoginRequest Clone() {
      return new UserLoginRequest(this);
    }

    /// <summary>Field number for the "UserName" field.</summary>
    public const int UserNameFieldNumber = 1;
    private string userName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserLoginRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserLoginRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserName != other.UserName) return false;
      if (Password != other.Password) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserName);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserLoginRequest other) {
      if (other == null) {
        return;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            UserName = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 2登录回复
  /// </summary>
  public sealed partial class UserLoginResponse : pb::IMessage<UserLoginResponse> {
    private static readonly pb::MessageParser<UserLoginResponse> _parser = new pb::MessageParser<UserLoginResponse>(() => new UserLoginResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserLoginResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.MsgReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserLoginResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserLoginResponse(UserLoginResponse other) : this() {
      resultcode_ = other.resultcode_;
      notifyMessage_ = other.notifyMessage_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserLoginResponse Clone() {
      return new UserLoginResponse(this);
    }

    /// <summary>Field number for the "Resultcode" field.</summary>
    public const int ResultcodeFieldNumber = 1;
    private int resultcode_;
    /// <summary>
    /// 成功0, 失败1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Resultcode {
      get { return resultcode_; }
      set {
        resultcode_ = value;
      }
    }

    /// <summary>Field number for the "NotifyMessage" field.</summary>
    public const int NotifyMessageFieldNumber = 2;
    private string notifyMessage_ = "";
    /// <summary>
    /// 说明
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NotifyMessage {
      get { return notifyMessage_; }
      set {
        notifyMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserLoginResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserLoginResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Resultcode != other.Resultcode) return false;
      if (NotifyMessage != other.NotifyMessage) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Resultcode != 0) hash ^= Resultcode.GetHashCode();
      if (NotifyMessage.Length != 0) hash ^= NotifyMessage.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Resultcode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Resultcode);
      }
      if (NotifyMessage.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NotifyMessage);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Resultcode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Resultcode);
      }
      if (NotifyMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NotifyMessage);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserLoginResponse other) {
      if (other == null) {
        return;
      }
      if (other.Resultcode != 0) {
        Resultcode = other.Resultcode;
      }
      if (other.NotifyMessage.Length != 0) {
        NotifyMessage = other.NotifyMessage;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Resultcode = input.ReadInt32();
            break;
          }
          case 18: {
            NotifyMessage = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 3注销请求
  /// </summary>
  public sealed partial class UserLogoutRequest : pb::IMessage<UserLogoutRequest> {
    private static readonly pb::MessageParser<UserLogoutRequest> _parser = new pb::MessageParser<UserLogoutRequest>(() => new UserLogoutRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserLogoutRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.MsgReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserLogoutRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserLogoutRequest(UserLogoutRequest other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserLogoutRequest Clone() {
      return new UserLogoutRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserLogoutRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserLogoutRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserLogoutRequest other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  /// <summary>
  /// 4注销回复
  /// </summary>
  public sealed partial class UserLogoutResponse : pb::IMessage<UserLogoutResponse> {
    private static readonly pb::MessageParser<UserLogoutResponse> _parser = new pb::MessageParser<UserLogoutResponse>(() => new UserLogoutResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserLogoutResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.MsgReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserLogoutResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserLogoutResponse(UserLogoutResponse other) : this() {
      resultcode_ = other.resultcode_;
      notifyMessage_ = other.notifyMessage_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserLogoutResponse Clone() {
      return new UserLogoutResponse(this);
    }

    /// <summary>Field number for the "Resultcode" field.</summary>
    public const int ResultcodeFieldNumber = 1;
    private int resultcode_;
    /// <summary>
    /// 成功0, 失败1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Resultcode {
      get { return resultcode_; }
      set {
        resultcode_ = value;
      }
    }

    /// <summary>Field number for the "NotifyMessage" field.</summary>
    public const int NotifyMessageFieldNumber = 2;
    private string notifyMessage_ = "";
    /// <summary>
    /// 说明
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NotifyMessage {
      get { return notifyMessage_; }
      set {
        notifyMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserLogoutResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserLogoutResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Resultcode != other.Resultcode) return false;
      if (NotifyMessage != other.NotifyMessage) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Resultcode != 0) hash ^= Resultcode.GetHashCode();
      if (NotifyMessage.Length != 0) hash ^= NotifyMessage.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Resultcode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Resultcode);
      }
      if (NotifyMessage.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NotifyMessage);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Resultcode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Resultcode);
      }
      if (NotifyMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NotifyMessage);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserLogoutResponse other) {
      if (other == null) {
        return;
      }
      if (other.Resultcode != 0) {
        Resultcode = other.Resultcode;
      }
      if (other.NotifyMessage.Length != 0) {
        NotifyMessage = other.NotifyMessage;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Resultcode = input.ReadInt32();
            break;
          }
          case 18: {
            NotifyMessage = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 5
  /// </summary>
  public sealed partial class UserRegisterRequest : pb::IMessage<UserRegisterRequest> {
    private static readonly pb::MessageParser<UserRegisterRequest> _parser = new pb::MessageParser<UserRegisterRequest>(() => new UserRegisterRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserRegisterRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.MsgReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserRegisterRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserRegisterRequest(UserRegisterRequest other) : this() {
      userName_ = other.userName_;
      password_ = other.password_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserRegisterRequest Clone() {
      return new UserRegisterRequest(this);
    }

    /// <summary>Field number for the "UserName" field.</summary>
    public const int UserNameFieldNumber = 1;
    private string userName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserRegisterRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserRegisterRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserName != other.UserName) return false;
      if (Password != other.Password) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserName);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserRegisterRequest other) {
      if (other == null) {
        return;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            UserName = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UserRegisterResponse : pb::IMessage<UserRegisterResponse> {
    private static readonly pb::MessageParser<UserRegisterResponse> _parser = new pb::MessageParser<UserRegisterResponse>(() => new UserRegisterResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserRegisterResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.MsgReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserRegisterResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserRegisterResponse(UserRegisterResponse other) : this() {
      resultcode_ = other.resultcode_;
      notifyMessage_ = other.notifyMessage_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserRegisterResponse Clone() {
      return new UserRegisterResponse(this);
    }

    /// <summary>Field number for the "Resultcode" field.</summary>
    public const int ResultcodeFieldNumber = 1;
    private int resultcode_;
    /// <summary>
    /// 成功0, 失败1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Resultcode {
      get { return resultcode_; }
      set {
        resultcode_ = value;
      }
    }

    /// <summary>Field number for the "NotifyMessage" field.</summary>
    public const int NotifyMessageFieldNumber = 2;
    private string notifyMessage_ = "";
    /// <summary>
    /// 说明
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NotifyMessage {
      get { return notifyMessage_; }
      set {
        notifyMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserRegisterResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserRegisterResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Resultcode != other.Resultcode) return false;
      if (NotifyMessage != other.NotifyMessage) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Resultcode != 0) hash ^= Resultcode.GetHashCode();
      if (NotifyMessage.Length != 0) hash ^= NotifyMessage.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Resultcode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Resultcode);
      }
      if (NotifyMessage.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NotifyMessage);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Resultcode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Resultcode);
      }
      if (NotifyMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NotifyMessage);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserRegisterResponse other) {
      if (other == null) {
        return;
      }
      if (other.Resultcode != 0) {
        Resultcode = other.Resultcode;
      }
      if (other.NotifyMessage.Length != 0) {
        NotifyMessage = other.NotifyMessage;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Resultcode = input.ReadInt32();
            break;
          }
          case 18: {
            NotifyMessage = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 100进入房间请求
  /// </summary>
  public sealed partial class UserEnterRoomRequest : pb::IMessage<UserEnterRoomRequest> {
    private static readonly pb::MessageParser<UserEnterRoomRequest> _parser = new pb::MessageParser<UserEnterRoomRequest>(() => new UserEnterRoomRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserEnterRoomRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.MsgReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserEnterRoomRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserEnterRoomRequest(UserEnterRoomRequest other) : this() {
      roomId_ = other.roomId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserEnterRoomRequest Clone() {
      return new UserEnterRoomRequest(this);
    }

    /// <summary>Field number for the "RoomId" field.</summary>
    public const int RoomIdFieldNumber = 1;
    private int roomId_;
    /// <summary>
    /// 房间id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoomId {
      get { return roomId_; }
      set {
        roomId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserEnterRoomRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserEnterRoomRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomId != other.RoomId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomId != 0) hash ^= RoomId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RoomId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserEnterRoomRequest other) {
      if (other == null) {
        return;
      }
      if (other.RoomId != 0) {
        RoomId = other.RoomId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            RoomId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 101进入房间回复
  /// </summary>
  public sealed partial class UserEnterRoomResponse : pb::IMessage<UserEnterRoomResponse> {
    private static readonly pb::MessageParser<UserEnterRoomResponse> _parser = new pb::MessageParser<UserEnterRoomResponse>(() => new UserEnterRoomResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserEnterRoomResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.MsgReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserEnterRoomResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserEnterRoomResponse(UserEnterRoomResponse other) : this() {
      resultcode_ = other.resultcode_;
      notifyMessage_ = other.notifyMessage_;
      tableId_ = other.tableId_;
      chairId_ = other.chairId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserEnterRoomResponse Clone() {
      return new UserEnterRoomResponse(this);
    }

    /// <summary>Field number for the "Resultcode" field.</summary>
    public const int ResultcodeFieldNumber = 1;
    private int resultcode_;
    /// <summary>
    /// 成功0, 失败1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Resultcode {
      get { return resultcode_; }
      set {
        resultcode_ = value;
      }
    }

    /// <summary>Field number for the "NotifyMessage" field.</summary>
    public const int NotifyMessageFieldNumber = 2;
    private string notifyMessage_ = "";
    /// <summary>
    /// 说明
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NotifyMessage {
      get { return notifyMessage_; }
      set {
        notifyMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TableId" field.</summary>
    public const int TableIdFieldNumber = 3;
    private int tableId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TableId {
      get { return tableId_; }
      set {
        tableId_ = value;
      }
    }

    /// <summary>Field number for the "ChairId" field.</summary>
    public const int ChairIdFieldNumber = 4;
    private int chairId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairId {
      get { return chairId_; }
      set {
        chairId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserEnterRoomResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserEnterRoomResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Resultcode != other.Resultcode) return false;
      if (NotifyMessage != other.NotifyMessage) return false;
      if (TableId != other.TableId) return false;
      if (ChairId != other.ChairId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Resultcode != 0) hash ^= Resultcode.GetHashCode();
      if (NotifyMessage.Length != 0) hash ^= NotifyMessage.GetHashCode();
      if (TableId != 0) hash ^= TableId.GetHashCode();
      if (ChairId != 0) hash ^= ChairId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Resultcode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Resultcode);
      }
      if (NotifyMessage.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NotifyMessage);
      }
      if (TableId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(TableId);
      }
      if (ChairId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ChairId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Resultcode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Resultcode);
      }
      if (NotifyMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NotifyMessage);
      }
      if (TableId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TableId);
      }
      if (ChairId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserEnterRoomResponse other) {
      if (other == null) {
        return;
      }
      if (other.Resultcode != 0) {
        Resultcode = other.Resultcode;
      }
      if (other.NotifyMessage.Length != 0) {
        NotifyMessage = other.NotifyMessage;
      }
      if (other.TableId != 0) {
        TableId = other.TableId;
      }
      if (other.ChairId != 0) {
        ChairId = other.ChairId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Resultcode = input.ReadInt32();
            break;
          }
          case 18: {
            NotifyMessage = input.ReadString();
            break;
          }
          case 24: {
            TableId = input.ReadInt32();
            break;
          }
          case 32: {
            ChairId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 102退出房间请求
  /// </summary>
  public sealed partial class UserOutOfRoomRequest : pb::IMessage<UserOutOfRoomRequest> {
    private static readonly pb::MessageParser<UserOutOfRoomRequest> _parser = new pb::MessageParser<UserOutOfRoomRequest>(() => new UserOutOfRoomRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserOutOfRoomRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.MsgReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserOutOfRoomRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserOutOfRoomRequest(UserOutOfRoomRequest other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserOutOfRoomRequest Clone() {
      return new UserOutOfRoomRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserOutOfRoomRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserOutOfRoomRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserOutOfRoomRequest other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  /// <summary>
  /// 103退出房间回复
  /// </summary>
  public sealed partial class UserOutOfRoomResponse : pb::IMessage<UserOutOfRoomResponse> {
    private static readonly pb::MessageParser<UserOutOfRoomResponse> _parser = new pb::MessageParser<UserOutOfRoomResponse>(() => new UserOutOfRoomResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserOutOfRoomResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.MsgReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserOutOfRoomResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserOutOfRoomResponse(UserOutOfRoomResponse other) : this() {
      resultcode_ = other.resultcode_;
      notifyMessage_ = other.notifyMessage_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserOutOfRoomResponse Clone() {
      return new UserOutOfRoomResponse(this);
    }

    /// <summary>Field number for the "Resultcode" field.</summary>
    public const int ResultcodeFieldNumber = 1;
    private int resultcode_;
    /// <summary>
    /// 成功0, 失败1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Resultcode {
      get { return resultcode_; }
      set {
        resultcode_ = value;
      }
    }

    /// <summary>Field number for the "NotifyMessage" field.</summary>
    public const int NotifyMessageFieldNumber = 2;
    private string notifyMessage_ = "";
    /// <summary>
    /// 说明
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NotifyMessage {
      get { return notifyMessage_; }
      set {
        notifyMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserOutOfRoomResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserOutOfRoomResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Resultcode != other.Resultcode) return false;
      if (NotifyMessage != other.NotifyMessage) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Resultcode != 0) hash ^= Resultcode.GetHashCode();
      if (NotifyMessage.Length != 0) hash ^= NotifyMessage.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Resultcode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Resultcode);
      }
      if (NotifyMessage.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NotifyMessage);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Resultcode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Resultcode);
      }
      if (NotifyMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NotifyMessage);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserOutOfRoomResponse other) {
      if (other == null) {
        return;
      }
      if (other.Resultcode != 0) {
        Resultcode = other.Resultcode;
      }
      if (other.NotifyMessage.Length != 0) {
        NotifyMessage = other.NotifyMessage;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Resultcode = input.ReadInt32();
            break;
          }
          case 18: {
            NotifyMessage = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 104用户入座
  /// </summary>
  public sealed partial class OthersEnterTable : pb::IMessage<OthersEnterTable> {
    private static readonly pb::MessageParser<OthersEnterTable> _parser = new pb::MessageParser<OthersEnterTable>(() => new OthersEnterTable());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OthersEnterTable> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.MsgReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OthersEnterTable() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OthersEnterTable(OthersEnterTable other) : this() {
      chairId_ = other.chairId_;
      nickName_ = other.nickName_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OthersEnterTable Clone() {
      return new OthersEnterTable(this);
    }

    /// <summary>Field number for the "ChairId" field.</summary>
    public const int ChairIdFieldNumber = 1;
    private int chairId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairId {
      get { return chairId_; }
      set {
        chairId_ = value;
      }
    }

    /// <summary>Field number for the "NickName" field.</summary>
    public const int NickNameFieldNumber = 2;
    private string nickName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NickName {
      get { return nickName_; }
      set {
        nickName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OthersEnterTable);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OthersEnterTable other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChairId != other.ChairId) return false;
      if (NickName != other.NickName) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChairId != 0) hash ^= ChairId.GetHashCode();
      if (NickName.Length != 0) hash ^= NickName.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ChairId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairId);
      }
      if (NickName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NickName);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChairId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairId);
      }
      if (NickName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NickName);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OthersEnterTable other) {
      if (other == null) {
        return;
      }
      if (other.ChairId != 0) {
        ChairId = other.ChairId;
      }
      if (other.NickName.Length != 0) {
        NickName = other.NickName;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            ChairId = input.ReadInt32();
            break;
          }
          case 18: {
            NickName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 105用户离座
  /// </summary>
  public sealed partial class OthersLeaveTable : pb::IMessage<OthersLeaveTable> {
    private static readonly pb::MessageParser<OthersLeaveTable> _parser = new pb::MessageParser<OthersLeaveTable>(() => new OthersLeaveTable());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OthersLeaveTable> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.MsgReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OthersLeaveTable() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OthersLeaveTable(OthersLeaveTable other) : this() {
      chairId_ = other.chairId_;
      nickName_ = other.nickName_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OthersLeaveTable Clone() {
      return new OthersLeaveTable(this);
    }

    /// <summary>Field number for the "ChairId" field.</summary>
    public const int ChairIdFieldNumber = 1;
    private int chairId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairId {
      get { return chairId_; }
      set {
        chairId_ = value;
      }
    }

    /// <summary>Field number for the "NickName" field.</summary>
    public const int NickNameFieldNumber = 2;
    private string nickName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NickName {
      get { return nickName_; }
      set {
        nickName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OthersLeaveTable);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OthersLeaveTable other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChairId != other.ChairId) return false;
      if (NickName != other.NickName) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChairId != 0) hash ^= ChairId.GetHashCode();
      if (NickName.Length != 0) hash ^= NickName.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ChairId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairId);
      }
      if (NickName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NickName);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChairId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairId);
      }
      if (NickName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NickName);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OthersLeaveTable other) {
      if (other == null) {
        return;
      }
      if (other.ChairId != 0) {
        ChairId = other.ChairId;
      }
      if (other.NickName.Length != 0) {
        NickName = other.NickName;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            ChairId = input.ReadInt32();
            break;
          }
          case 18: {
            NickName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 201客户端加载成功
  /// </summary>
  public sealed partial class UserFinishesLoadingRequest : pb::IMessage<UserFinishesLoadingRequest> {
    private static readonly pb::MessageParser<UserFinishesLoadingRequest> _parser = new pb::MessageParser<UserFinishesLoadingRequest>(() => new UserFinishesLoadingRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserFinishesLoadingRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.MsgReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserFinishesLoadingRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserFinishesLoadingRequest(UserFinishesLoadingRequest other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserFinishesLoadingRequest Clone() {
      return new UserFinishesLoadingRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserFinishesLoadingRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserFinishesLoadingRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserFinishesLoadingRequest other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  /// <summary>
  /// 202服务器反馈客户端捕鱼游戏操作错误
  /// </summary>
  public sealed partial class UserMessageErrorResponse : pb::IMessage<UserMessageErrorResponse> {
    private static readonly pb::MessageParser<UserMessageErrorResponse> _parser = new pb::MessageParser<UserMessageErrorResponse>(() => new UserMessageErrorResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserMessageErrorResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.MsgReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserMessageErrorResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserMessageErrorResponse(UserMessageErrorResponse other) : this() {
      resultcode_ = other.resultcode_;
      notifyMessage_ = other.notifyMessage_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserMessageErrorResponse Clone() {
      return new UserMessageErrorResponse(this);
    }

    /// <summary>Field number for the "Resultcode" field.</summary>
    public const int ResultcodeFieldNumber = 1;
    private int resultcode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Resultcode {
      get { return resultcode_; }
      set {
        resultcode_ = value;
      }
    }

    /// <summary>Field number for the "NotifyMessage" field.</summary>
    public const int NotifyMessageFieldNumber = 2;
    private string notifyMessage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NotifyMessage {
      get { return notifyMessage_; }
      set {
        notifyMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserMessageErrorResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserMessageErrorResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Resultcode != other.Resultcode) return false;
      if (NotifyMessage != other.NotifyMessage) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Resultcode != 0) hash ^= Resultcode.GetHashCode();
      if (NotifyMessage.Length != 0) hash ^= NotifyMessage.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Resultcode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Resultcode);
      }
      if (NotifyMessage.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NotifyMessage);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Resultcode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Resultcode);
      }
      if (NotifyMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NotifyMessage);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserMessageErrorResponse other) {
      if (other == null) {
        return;
      }
      if (other.Resultcode != 0) {
        Resultcode = other.Resultcode;
      }
      if (other.NotifyMessage.Length != 0) {
        NotifyMessage = other.NotifyMessage;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Resultcode = input.ReadInt32();
            break;
          }
          case 18: {
            NotifyMessage = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
