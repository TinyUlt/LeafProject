// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gt_buyu.proto

#ifndef PROTOBUF_gt_5fbuyu_2eproto__INCLUDED
#define PROTOBUF_gt_5fbuyu_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace gt_msg {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_gt_5fbuyu_2eproto();
void protobuf_AssignDesc_gt_5fbuyu_2eproto();
void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

class AIBulletPath;
class AIBulletPathGroup;
class AIBulletPathSets;
class AIHeartBeat;
class ActionData;
class AddFishStoreScore;
class BaoFenNotify;
class BaoFenReward;
class BaoFenTake;
class BigFishAppear;
class BigFishDisappear;
class BulletConfig;
class BulletData;
class BulletExtern;
class BulletSpeedUp;
class CastSkillResponse;
class CatchFish;
class ChangeBatteryByMyself;
class ChangeBatteryByOhter;
class ColliderCircle;
class CompetitionRusult;
class CreateBullet;
class CurrentFrame;
class EstablishBulletRequest;
class EstablishFish;
class EstablishFishExternal;
class FastData;
class FastEscape;
class FishActionData;
class FishAppearNotify;
class FishCoin;
class FishCollider;
class FishColliderGroup;
class FishConfig;
class FishConfigList;
class FishData;
class FishGroupTest;
class FishInformationToAI;
class FishProductNode;
class FishTest;
class ForceExitTableRequestfish3d;
class ForceExitTableResponsefish3d;
class FreezeData;
class FreezeFish;
class GameConfig;
class InstantData;
class JoinFreeRequestfish3d;
class JoinFreeResponsefish3d;
class MagicData;
class MessageTimer;
class NewTaskResponse;
class NowAngerResponse;
class PathFileHead;
class PathGroupClient;
class PathGroupServer;
class PathPointClient;
class PathPointServer;
class PathPosInfo;
class ProductItem;
class ProductItemContent;
class ProductItemGroup;
class PropData;
class Quate;
class RedFishAppear;
class RedFishDisappear;
class RedPackFromClient;
class RedPackFromServer;
class RedPackRequest;
class SceneFishs;
class ServerEditOperateRusult;
class SetBounty;
class SinglePathClient;
class SinglePathServer;
class TakeBountyRequest;
class TakeBountyResponse;
class TakeRedBagRequest;
class TakeRedBagResponse;
class TaskFinishResponse;
class TaskProgressResponse;
class UpdateRedBag;
class UsePropResponse;
class UserTakeScoreRequest;
class UserTakeScoreRespone;
class Vec2;
class Vec3;

// ===================================================================

class Vec2 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.Vec2) */ {
 public:
  Vec2();
  virtual ~Vec2();

  Vec2(const Vec2& from);

  inline Vec2& operator=(const Vec2& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Vec2& default_instance();

  void Swap(Vec2* other);

  // implements Message ----------------------------------------------

  inline Vec2* New() const { return New(NULL); }

  Vec2* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Vec2& from);
  void MergeFrom(const Vec2& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Vec2* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // optional float y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // @@protoc_insertion_point(class_scope:gt_msg.Vec2)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  float x_;
  float y_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static Vec2* default_instance_;
};
// -------------------------------------------------------------------

class Vec3 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.Vec3) */ {
 public:
  Vec3();
  virtual ~Vec3();

  Vec3(const Vec3& from);

  inline Vec3& operator=(const Vec3& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Vec3& default_instance();

  void Swap(Vec3* other);

  // implements Message ----------------------------------------------

  inline Vec3* New() const { return New(NULL); }

  Vec3* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Vec3& from);
  void MergeFrom(const Vec3& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Vec3* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // optional float y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // optional float z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  float z() const;
  void set_z(float value);

  // @@protoc_insertion_point(class_scope:gt_msg.Vec3)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  float x_;
  float y_;
  float z_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static Vec3* default_instance_;
};
// -------------------------------------------------------------------

class ColliderCircle : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.ColliderCircle) */ {
 public:
  ColliderCircle();
  virtual ~ColliderCircle();

  ColliderCircle(const ColliderCircle& from);

  inline ColliderCircle& operator=(const ColliderCircle& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ColliderCircle& default_instance();

  void Swap(ColliderCircle* other);

  // implements Message ----------------------------------------------

  inline ColliderCircle* New() const { return New(NULL); }

  ColliderCircle* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ColliderCircle& from);
  void MergeFrom(const ColliderCircle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ColliderCircle* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .gt_msg.Vec3 Offset = 1;
  bool has_offset() const;
  void clear_offset();
  static const int kOffsetFieldNumber = 1;
  const ::gt_msg::Vec3& offset() const;
  ::gt_msg::Vec3* mutable_offset();
  ::gt_msg::Vec3* release_offset();
  void set_allocated_offset(::gt_msg::Vec3* offset);

  // optional float Radius = 2;
  void clear_radius();
  static const int kRadiusFieldNumber = 2;
  float radius() const;
  void set_radius(float value);

  // @@protoc_insertion_point(class_scope:gt_msg.ColliderCircle)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::gt_msg::Vec3* offset_;
  float radius_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static ColliderCircle* default_instance_;
};
// -------------------------------------------------------------------

class Quate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.Quate) */ {
 public:
  Quate();
  virtual ~Quate();

  Quate(const Quate& from);

  inline Quate& operator=(const Quate& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Quate& default_instance();

  void Swap(Quate* other);

  // implements Message ----------------------------------------------

  inline Quate* New() const { return New(NULL); }

  Quate* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Quate& from);
  void MergeFrom(const Quate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Quate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // optional float y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // optional float z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  float z() const;
  void set_z(float value);

  // optional float w = 4;
  void clear_w();
  static const int kWFieldNumber = 4;
  float w() const;
  void set_w(float value);

  // @@protoc_insertion_point(class_scope:gt_msg.Quate)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  float x_;
  float y_;
  float z_;
  float w_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static Quate* default_instance_;
};
// -------------------------------------------------------------------

class PathPointClient : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.PathPointClient) */ {
 public:
  PathPointClient();
  virtual ~PathPointClient();

  PathPointClient(const PathPointClient& from);

  inline PathPointClient& operator=(const PathPointClient& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PathPointClient& default_instance();

  void Swap(PathPointClient* other);

  // implements Message ----------------------------------------------

  inline PathPointClient* New() const { return New(NULL); }

  PathPointClient* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PathPointClient& from);
  void MergeFrom(const PathPointClient& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PathPointClient* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .gt_msg.Vec3 point = 1;
  bool has_point() const;
  void clear_point();
  static const int kPointFieldNumber = 1;
  const ::gt_msg::Vec3& point() const;
  ::gt_msg::Vec3* mutable_point();
  ::gt_msg::Vec3* release_point();
  void set_allocated_point(::gt_msg::Vec3* point);

  // @@protoc_insertion_point(class_scope:gt_msg.PathPointClient)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::gt_msg::Vec3* point_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static PathPointClient* default_instance_;
};
// -------------------------------------------------------------------

class SinglePathClient : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.SinglePathClient) */ {
 public:
  SinglePathClient();
  virtual ~SinglePathClient();

  SinglePathClient(const SinglePathClient& from);

  inline SinglePathClient& operator=(const SinglePathClient& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SinglePathClient& default_instance();

  void Swap(SinglePathClient* other);

  // implements Message ----------------------------------------------

  inline SinglePathClient* New() const { return New(NULL); }

  SinglePathClient* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SinglePathClient& from);
  void MergeFrom(const SinglePathClient& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SinglePathClient* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string pathName = 1;
  void clear_pathname();
  static const int kPathNameFieldNumber = 1;
  const ::std::string& pathname() const;
  void set_pathname(const ::std::string& value);
  void set_pathname(const char* value);
  void set_pathname(const char* value, size_t size);
  ::std::string* mutable_pathname();
  ::std::string* release_pathname();
  void set_allocated_pathname(::std::string* pathname);

  // repeated .gt_msg.PathPointClient pathPointList = 2;
  int pathpointlist_size() const;
  void clear_pathpointlist();
  static const int kPathPointListFieldNumber = 2;
  const ::gt_msg::PathPointClient& pathpointlist(int index) const;
  ::gt_msg::PathPointClient* mutable_pathpointlist(int index);
  ::gt_msg::PathPointClient* add_pathpointlist();
  ::google::protobuf::RepeatedPtrField< ::gt_msg::PathPointClient >*
      mutable_pathpointlist();
  const ::google::protobuf::RepeatedPtrField< ::gt_msg::PathPointClient >&
      pathpointlist() const;

  // repeated .gt_msg.ActionData actions = 3;
  int actions_size() const;
  void clear_actions();
  static const int kActionsFieldNumber = 3;
  const ::gt_msg::ActionData& actions(int index) const;
  ::gt_msg::ActionData* mutable_actions(int index);
  ::gt_msg::ActionData* add_actions();
  ::google::protobuf::RepeatedPtrField< ::gt_msg::ActionData >*
      mutable_actions();
  const ::google::protobuf::RepeatedPtrField< ::gt_msg::ActionData >&
      actions() const;

  // optional string copyPathName = 4;
  void clear_copypathname();
  static const int kCopyPathNameFieldNumber = 4;
  const ::std::string& copypathname() const;
  void set_copypathname(const ::std::string& value);
  void set_copypathname(const char* value);
  void set_copypathname(const char* value, size_t size);
  ::std::string* mutable_copypathname();
  ::std::string* release_copypathname();
  void set_allocated_copypathname(::std::string* copypathname);

  // optional .gt_msg.Vec3 offset = 5;
  bool has_offset() const;
  void clear_offset();
  static const int kOffsetFieldNumber = 5;
  const ::gt_msg::Vec3& offset() const;
  ::gt_msg::Vec3* mutable_offset();
  ::gt_msg::Vec3* release_offset();
  void set_allocated_offset(::gt_msg::Vec3* offset);

  // optional bool foldX = 6;
  void clear_foldx();
  static const int kFoldXFieldNumber = 6;
  bool foldx() const;
  void set_foldx(bool value);

  // optional bool foldY = 7;
  void clear_foldy();
  static const int kFoldYFieldNumber = 7;
  bool foldy() const;
  void set_foldy(bool value);

  // optional bool foldZ = 8;
  void clear_foldz();
  static const int kFoldZFieldNumber = 8;
  bool foldz() const;
  void set_foldz(bool value);

  // optional float speedScale = 9;
  void clear_speedscale();
  static const int kSpeedScaleFieldNumber = 9;
  float speedscale() const;
  void set_speedscale(float value);

  // @@protoc_insertion_point(class_scope:gt_msg.SinglePathClient)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr pathname_;
  ::google::protobuf::RepeatedPtrField< ::gt_msg::PathPointClient > pathpointlist_;
  ::google::protobuf::RepeatedPtrField< ::gt_msg::ActionData > actions_;
  ::google::protobuf::internal::ArenaStringPtr copypathname_;
  ::gt_msg::Vec3* offset_;
  bool foldx_;
  bool foldy_;
  bool foldz_;
  float speedscale_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static SinglePathClient* default_instance_;
};
// -------------------------------------------------------------------

class PathGroupClient : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.PathGroupClient) */ {
 public:
  PathGroupClient();
  virtual ~PathGroupClient();

  PathGroupClient(const PathGroupClient& from);

  inline PathGroupClient& operator=(const PathGroupClient& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PathGroupClient& default_instance();

  void Swap(PathGroupClient* other);

  // implements Message ----------------------------------------------

  inline PathGroupClient* New() const { return New(NULL); }

  PathGroupClient* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PathGroupClient& from);
  void MergeFrom(const PathGroupClient& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PathGroupClient* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .gt_msg.SinglePathClient pathList = 1;
  int pathlist_size() const;
  void clear_pathlist();
  static const int kPathListFieldNumber = 1;
  const ::gt_msg::SinglePathClient& pathlist(int index) const;
  ::gt_msg::SinglePathClient* mutable_pathlist(int index);
  ::gt_msg::SinglePathClient* add_pathlist();
  ::google::protobuf::RepeatedPtrField< ::gt_msg::SinglePathClient >*
      mutable_pathlist();
  const ::google::protobuf::RepeatedPtrField< ::gt_msg::SinglePathClient >&
      pathlist() const;

  // @@protoc_insertion_point(class_scope:gt_msg.PathGroupClient)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::gt_msg::SinglePathClient > pathlist_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static PathGroupClient* default_instance_;
};
// -------------------------------------------------------------------

class ActionData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.ActionData) */ {
 public:
  ActionData();
  virtual ~ActionData();

  ActionData(const ActionData& from);

  inline ActionData& operator=(const ActionData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActionData& default_instance();

  void Swap(ActionData* other);

  // implements Message ----------------------------------------------

  inline ActionData* New() const { return New(NULL); }

  ActionData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActionData& from);
  void MergeFrom(const ActionData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ActionData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 actionFrame = 1;
  void clear_actionframe();
  static const int kActionFrameFieldNumber = 1;
  ::google::protobuf::int32 actionframe() const;
  void set_actionframe(::google::protobuf::int32 value);

  // optional int32 playIdleIndex = 2;
  void clear_playidleindex();
  static const int kPlayIdleIndexFieldNumber = 2;
  ::google::protobuf::int32 playidleindex() const;
  void set_playidleindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gt_msg.ActionData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 actionframe_;
  ::google::protobuf::int32 playidleindex_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static ActionData* default_instance_;
};
// -------------------------------------------------------------------

class PathPointServer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.PathPointServer) */ {
 public:
  PathPointServer();
  virtual ~PathPointServer();

  PathPointServer(const PathPointServer& from);

  inline PathPointServer& operator=(const PathPointServer& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PathPointServer& default_instance();

  void Swap(PathPointServer* other);

  // implements Message ----------------------------------------------

  inline PathPointServer* New() const { return New(NULL); }

  PathPointServer* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PathPointServer& from);
  void MergeFrom(const PathPointServer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PathPointServer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .gt_msg.Vec3 point = 1;
  bool has_point() const;
  void clear_point();
  static const int kPointFieldNumber = 1;
  const ::gt_msg::Vec3& point() const;
  ::gt_msg::Vec3* mutable_point();
  ::gt_msg::Vec3* release_point();
  void set_allocated_point(::gt_msg::Vec3* point);

  // optional .gt_msg.Vec3 normalizedX = 2;
  bool has_normalizedx() const;
  void clear_normalizedx();
  static const int kNormalizedXFieldNumber = 2;
  const ::gt_msg::Vec3& normalizedx() const;
  ::gt_msg::Vec3* mutable_normalizedx();
  ::gt_msg::Vec3* release_normalizedx();
  void set_allocated_normalizedx(::gt_msg::Vec3* normalizedx);

  // optional .gt_msg.Vec3 normalizedY = 3;
  bool has_normalizedy() const;
  void clear_normalizedy();
  static const int kNormalizedYFieldNumber = 3;
  const ::gt_msg::Vec3& normalizedy() const;
  ::gt_msg::Vec3* mutable_normalizedy();
  ::gt_msg::Vec3* release_normalizedy();
  void set_allocated_normalizedy(::gt_msg::Vec3* normalizedy);

  // optional .gt_msg.Vec3 normalizedZ = 4;
  bool has_normalizedz() const;
  void clear_normalizedz();
  static const int kNormalizedZFieldNumber = 4;
  const ::gt_msg::Vec3& normalizedz() const;
  ::gt_msg::Vec3* mutable_normalizedz();
  ::gt_msg::Vec3* release_normalizedz();
  void set_allocated_normalizedz(::gt_msg::Vec3* normalizedz);

  // @@protoc_insertion_point(class_scope:gt_msg.PathPointServer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::gt_msg::Vec3* point_;
  ::gt_msg::Vec3* normalizedx_;
  ::gt_msg::Vec3* normalizedy_;
  ::gt_msg::Vec3* normalizedz_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static PathPointServer* default_instance_;
};
// -------------------------------------------------------------------

class SinglePathServer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.SinglePathServer) */ {
 public:
  SinglePathServer();
  virtual ~SinglePathServer();

  SinglePathServer(const SinglePathServer& from);

  inline SinglePathServer& operator=(const SinglePathServer& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SinglePathServer& default_instance();

  void Swap(SinglePathServer* other);

  // implements Message ----------------------------------------------

  inline SinglePathServer* New() const { return New(NULL); }

  SinglePathServer* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SinglePathServer& from);
  void MergeFrom(const SinglePathServer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SinglePathServer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string pathName = 1;
  void clear_pathname();
  static const int kPathNameFieldNumber = 1;
  const ::std::string& pathname() const;
  void set_pathname(const ::std::string& value);
  void set_pathname(const char* value);
  void set_pathname(const char* value, size_t size);
  ::std::string* mutable_pathname();
  ::std::string* release_pathname();
  void set_allocated_pathname(::std::string* pathname);

  // repeated .gt_msg.PathPointServer pathPointList = 2;
  int pathpointlist_size() const;
  void clear_pathpointlist();
  static const int kPathPointListFieldNumber = 2;
  const ::gt_msg::PathPointServer& pathpointlist(int index) const;
  ::gt_msg::PathPointServer* mutable_pathpointlist(int index);
  ::gt_msg::PathPointServer* add_pathpointlist();
  ::google::protobuf::RepeatedPtrField< ::gt_msg::PathPointServer >*
      mutable_pathpointlist();
  const ::google::protobuf::RepeatedPtrField< ::gt_msg::PathPointServer >&
      pathpointlist() const;

  // repeated .gt_msg.ActionData actions = 3;
  int actions_size() const;
  void clear_actions();
  static const int kActionsFieldNumber = 3;
  const ::gt_msg::ActionData& actions(int index) const;
  ::gt_msg::ActionData* mutable_actions(int index);
  ::gt_msg::ActionData* add_actions();
  ::google::protobuf::RepeatedPtrField< ::gt_msg::ActionData >*
      mutable_actions();
  const ::google::protobuf::RepeatedPtrField< ::gt_msg::ActionData >&
      actions() const;

  // optional string copyPathName = 4;
  void clear_copypathname();
  static const int kCopyPathNameFieldNumber = 4;
  const ::std::string& copypathname() const;
  void set_copypathname(const ::std::string& value);
  void set_copypathname(const char* value);
  void set_copypathname(const char* value, size_t size);
  ::std::string* mutable_copypathname();
  ::std::string* release_copypathname();
  void set_allocated_copypathname(::std::string* copypathname);

  // optional .gt_msg.Vec3 offset = 5;
  bool has_offset() const;
  void clear_offset();
  static const int kOffsetFieldNumber = 5;
  const ::gt_msg::Vec3& offset() const;
  ::gt_msg::Vec3* mutable_offset();
  ::gt_msg::Vec3* release_offset();
  void set_allocated_offset(::gt_msg::Vec3* offset);

  // optional bool foldX = 6;
  void clear_foldx();
  static const int kFoldXFieldNumber = 6;
  bool foldx() const;
  void set_foldx(bool value);

  // optional bool foldY = 7;
  void clear_foldy();
  static const int kFoldYFieldNumber = 7;
  bool foldy() const;
  void set_foldy(bool value);

  // optional bool foldZ = 8;
  void clear_foldz();
  static const int kFoldZFieldNumber = 8;
  bool foldz() const;
  void set_foldz(bool value);

  // optional float speedScale = 9;
  void clear_speedscale();
  static const int kSpeedScaleFieldNumber = 9;
  float speedscale() const;
  void set_speedscale(float value);

  // @@protoc_insertion_point(class_scope:gt_msg.SinglePathServer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr pathname_;
  ::google::protobuf::RepeatedPtrField< ::gt_msg::PathPointServer > pathpointlist_;
  ::google::protobuf::RepeatedPtrField< ::gt_msg::ActionData > actions_;
  ::google::protobuf::internal::ArenaStringPtr copypathname_;
  ::gt_msg::Vec3* offset_;
  bool foldx_;
  bool foldy_;
  bool foldz_;
  float speedscale_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static SinglePathServer* default_instance_;
};
// -------------------------------------------------------------------

class PathGroupServer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.PathGroupServer) */ {
 public:
  PathGroupServer();
  virtual ~PathGroupServer();

  PathGroupServer(const PathGroupServer& from);

  inline PathGroupServer& operator=(const PathGroupServer& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PathGroupServer& default_instance();

  void Swap(PathGroupServer* other);

  // implements Message ----------------------------------------------

  inline PathGroupServer* New() const { return New(NULL); }

  PathGroupServer* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PathGroupServer& from);
  void MergeFrom(const PathGroupServer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PathGroupServer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .gt_msg.SinglePathServer pathList = 1;
  int pathlist_size() const;
  void clear_pathlist();
  static const int kPathListFieldNumber = 1;
  const ::gt_msg::SinglePathServer& pathlist(int index) const;
  ::gt_msg::SinglePathServer* mutable_pathlist(int index);
  ::gt_msg::SinglePathServer* add_pathlist();
  ::google::protobuf::RepeatedPtrField< ::gt_msg::SinglePathServer >*
      mutable_pathlist();
  const ::google::protobuf::RepeatedPtrField< ::gt_msg::SinglePathServer >&
      pathlist() const;

  // @@protoc_insertion_point(class_scope:gt_msg.PathGroupServer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::gt_msg::SinglePathServer > pathlist_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static PathGroupServer* default_instance_;
};
// -------------------------------------------------------------------

class AIBulletPath : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.AIBulletPath) */ {
 public:
  AIBulletPath();
  virtual ~AIBulletPath();

  AIBulletPath(const AIBulletPath& from);

  inline AIBulletPath& operator=(const AIBulletPath& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AIBulletPath& default_instance();

  void Swap(AIBulletPath* other);

  // implements Message ----------------------------------------------

  inline AIBulletPath* New() const { return New(NULL); }

  AIBulletPath* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AIBulletPath& from);
  void MergeFrom(const AIBulletPath& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AIBulletPath* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .gt_msg.Vec2 pathPointList = 2;
  int pathpointlist_size() const;
  void clear_pathpointlist();
  static const int kPathPointListFieldNumber = 2;
  const ::gt_msg::Vec2& pathpointlist(int index) const;
  ::gt_msg::Vec2* mutable_pathpointlist(int index);
  ::gt_msg::Vec2* add_pathpointlist();
  ::google::protobuf::RepeatedPtrField< ::gt_msg::Vec2 >*
      mutable_pathpointlist();
  const ::google::protobuf::RepeatedPtrField< ::gt_msg::Vec2 >&
      pathpointlist() const;

  // @@protoc_insertion_point(class_scope:gt_msg.AIBulletPath)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::gt_msg::Vec2 > pathpointlist_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static AIBulletPath* default_instance_;
};
// -------------------------------------------------------------------

class AIBulletPathGroup : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.AIBulletPathGroup) */ {
 public:
  AIBulletPathGroup();
  virtual ~AIBulletPathGroup();

  AIBulletPathGroup(const AIBulletPathGroup& from);

  inline AIBulletPathGroup& operator=(const AIBulletPathGroup& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AIBulletPathGroup& default_instance();

  void Swap(AIBulletPathGroup* other);

  // implements Message ----------------------------------------------

  inline AIBulletPathGroup* New() const { return New(NULL); }

  AIBulletPathGroup* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AIBulletPathGroup& from);
  void MergeFrom(const AIBulletPathGroup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AIBulletPathGroup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .gt_msg.AIBulletPath pathList = 2;
  int pathlist_size() const;
  void clear_pathlist();
  static const int kPathListFieldNumber = 2;
  const ::gt_msg::AIBulletPath& pathlist(int index) const;
  ::gt_msg::AIBulletPath* mutable_pathlist(int index);
  ::gt_msg::AIBulletPath* add_pathlist();
  ::google::protobuf::RepeatedPtrField< ::gt_msg::AIBulletPath >*
      mutable_pathlist();
  const ::google::protobuf::RepeatedPtrField< ::gt_msg::AIBulletPath >&
      pathlist() const;

  // @@protoc_insertion_point(class_scope:gt_msg.AIBulletPathGroup)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::gt_msg::AIBulletPath > pathlist_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static AIBulletPathGroup* default_instance_;
};
// -------------------------------------------------------------------

class AIBulletPathSets : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.AIBulletPathSets) */ {
 public:
  AIBulletPathSets();
  virtual ~AIBulletPathSets();

  AIBulletPathSets(const AIBulletPathSets& from);

  inline AIBulletPathSets& operator=(const AIBulletPathSets& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AIBulletPathSets& default_instance();

  void Swap(AIBulletPathSets* other);

  // implements Message ----------------------------------------------

  inline AIBulletPathSets* New() const { return New(NULL); }

  AIBulletPathSets* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AIBulletPathSets& from);
  void MergeFrom(const AIBulletPathSets& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AIBulletPathSets* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .gt_msg.AIBulletPathGroup groupList = 1;
  int grouplist_size() const;
  void clear_grouplist();
  static const int kGroupListFieldNumber = 1;
  const ::gt_msg::AIBulletPathGroup& grouplist(int index) const;
  ::gt_msg::AIBulletPathGroup* mutable_grouplist(int index);
  ::gt_msg::AIBulletPathGroup* add_grouplist();
  ::google::protobuf::RepeatedPtrField< ::gt_msg::AIBulletPathGroup >*
      mutable_grouplist();
  const ::google::protobuf::RepeatedPtrField< ::gt_msg::AIBulletPathGroup >&
      grouplist() const;

  // @@protoc_insertion_point(class_scope:gt_msg.AIBulletPathSets)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::gt_msg::AIBulletPathGroup > grouplist_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static AIBulletPathSets* default_instance_;
};
// -------------------------------------------------------------------

class PathFileHead : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.PathFileHead) */ {
 public:
  PathFileHead();
  virtual ~PathFileHead();

  PathFileHead(const PathFileHead& from);

  inline PathFileHead& operator=(const PathFileHead& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PathFileHead& default_instance();

  void Swap(PathFileHead* other);

  // implements Message ----------------------------------------------

  inline PathFileHead* New() const { return New(NULL); }

  PathFileHead* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PathFileHead& from);
  void MergeFrom(const PathFileHead& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PathFileHead* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 count = 1;
  void clear_count();
  static const int kCountFieldNumber = 1;
  ::google::protobuf::int32 count() const;
  void set_count(::google::protobuf::int32 value);

  // repeated .gt_msg.PathPosInfo pathPosInfo = 2;
  int pathposinfo_size() const;
  void clear_pathposinfo();
  static const int kPathPosInfoFieldNumber = 2;
  const ::gt_msg::PathPosInfo& pathposinfo(int index) const;
  ::gt_msg::PathPosInfo* mutable_pathposinfo(int index);
  ::gt_msg::PathPosInfo* add_pathposinfo();
  ::google::protobuf::RepeatedPtrField< ::gt_msg::PathPosInfo >*
      mutable_pathposinfo();
  const ::google::protobuf::RepeatedPtrField< ::gt_msg::PathPosInfo >&
      pathposinfo() const;

  // @@protoc_insertion_point(class_scope:gt_msg.PathFileHead)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::gt_msg::PathPosInfo > pathposinfo_;
  ::google::protobuf::int32 count_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static PathFileHead* default_instance_;
};
// -------------------------------------------------------------------

class PathPosInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.PathPosInfo) */ {
 public:
  PathPosInfo();
  virtual ~PathPosInfo();

  PathPosInfo(const PathPosInfo& from);

  inline PathPosInfo& operator=(const PathPosInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PathPosInfo& default_instance();

  void Swap(PathPosInfo* other);

  // implements Message ----------------------------------------------

  inline PathPosInfo* New() const { return New(NULL); }

  PathPosInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PathPosInfo& from);
  void MergeFrom(const PathPosInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PathPosInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string pathName = 1;
  void clear_pathname();
  static const int kPathNameFieldNumber = 1;
  const ::std::string& pathname() const;
  void set_pathname(const ::std::string& value);
  void set_pathname(const char* value);
  void set_pathname(const char* value, size_t size);
  ::std::string* mutable_pathname();
  ::std::string* release_pathname();
  void set_allocated_pathname(::std::string* pathname);

  // optional int32 startPos = 2;
  void clear_startpos();
  static const int kStartPosFieldNumber = 2;
  ::google::protobuf::int32 startpos() const;
  void set_startpos(::google::protobuf::int32 value);

  // optional int32 length = 3;
  void clear_length();
  static const int kLengthFieldNumber = 3;
  ::google::protobuf::int32 length() const;
  void set_length(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gt_msg.PathPosInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr pathname_;
  ::google::protobuf::int32 startpos_;
  ::google::protobuf::int32 length_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static PathPosInfo* default_instance_;
};
// -------------------------------------------------------------------

class MessageTimer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.MessageTimer) */ {
 public:
  MessageTimer();
  virtual ~MessageTimer();

  MessageTimer(const MessageTimer& from);

  inline MessageTimer& operator=(const MessageTimer& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageTimer& default_instance();

  void Swap(MessageTimer* other);

  // implements Message ----------------------------------------------

  inline MessageTimer* New() const { return New(NULL); }

  MessageTimer* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageTimer& from);
  void MergeFrom(const MessageTimer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MessageTimer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 passFrame = 1;
  void clear_passframe();
  static const int kPassFrameFieldNumber = 1;
  ::google::protobuf::int32 passframe() const;
  void set_passframe(::google::protobuf::int32 value);

  // optional string message = 2;
  void clear_message();
  static const int kMessageFieldNumber = 2;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:gt_msg.MessageTimer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::int32 passframe_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static MessageTimer* default_instance_;
};
// -------------------------------------------------------------------

class ProductItemContent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.ProductItemContent) */ {
 public:
  ProductItemContent();
  virtual ~ProductItemContent();

  ProductItemContent(const ProductItemContent& from);

  inline ProductItemContent& operator=(const ProductItemContent& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProductItemContent& default_instance();

  void Swap(ProductItemContent* other);

  // implements Message ----------------------------------------------

  inline ProductItemContent* New() const { return New(NULL); }

  ProductItemContent* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProductItemContent& from);
  void MergeFrom(const ProductItemContent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ProductItemContent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 ProductItemIndex = 1;
  int productitemindex_size() const;
  void clear_productitemindex();
  static const int kProductItemIndexFieldNumber = 1;
  ::google::protobuf::int32 productitemindex(int index) const;
  void set_productitemindex(int index, ::google::protobuf::int32 value);
  void add_productitemindex(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      productitemindex() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_productitemindex();

  // optional int32 frame = 2;
  void clear_frame();
  static const int kFrameFieldNumber = 2;
  ::google::protobuf::int32 frame() const;
  void set_frame(::google::protobuf::int32 value);

  // optional string fishType = 3;
  void clear_fishtype();
  static const int kFishTypeFieldNumber = 3;
  const ::std::string& fishtype() const;
  void set_fishtype(const ::std::string& value);
  void set_fishtype(const char* value);
  void set_fishtype(const char* value, size_t size);
  ::std::string* mutable_fishtype();
  ::std::string* release_fishtype();
  void set_allocated_fishtype(::std::string* fishtype);

  // optional bool CombinePaths = 4;
  void clear_combinepaths();
  static const int kCombinePathsFieldNumber = 4;
  bool combinepaths() const;
  void set_combinepaths(bool value);

  // repeated .gt_msg.ProductItem items = 5;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 5;
  const ::gt_msg::ProductItem& items(int index) const;
  ::gt_msg::ProductItem* mutable_items(int index);
  ::gt_msg::ProductItem* add_items();
  ::google::protobuf::RepeatedPtrField< ::gt_msg::ProductItem >*
      mutable_items();
  const ::google::protobuf::RepeatedPtrField< ::gt_msg::ProductItem >&
      items() const;

  // optional string enterMessage = 6;
  void clear_entermessage();
  static const int kEnterMessageFieldNumber = 6;
  const ::std::string& entermessage() const;
  void set_entermessage(const ::std::string& value);
  void set_entermessage(const char* value);
  void set_entermessage(const char* value, size_t size);
  ::std::string* mutable_entermessage();
  ::std::string* release_entermessage();
  void set_allocated_entermessage(::std::string* entermessage);

  // optional string leaveMessage = 7;
  void clear_leavemessage();
  static const int kLeaveMessageFieldNumber = 7;
  const ::std::string& leavemessage() const;
  void set_leavemessage(const ::std::string& value);
  void set_leavemessage(const char* value);
  void set_leavemessage(const char* value, size_t size);
  ::std::string* mutable_leavemessage();
  ::std::string* release_leavemessage();
  void set_allocated_leavemessage(::std::string* leavemessage);

  // optional bool onlyOne = 8;
  void clear_onlyone();
  static const int kOnlyOneFieldNumber = 8;
  bool onlyone() const;
  void set_onlyone(bool value);

  // optional bool waitUntilStart = 9;
  void clear_waituntilstart();
  static const int kWaitUntilStartFieldNumber = 9;
  bool waituntilstart() const;
  void set_waituntilstart(bool value);

  // optional bool waitUntilDone = 10;
  void clear_waituntildone();
  static const int kWaitUntilDoneFieldNumber = 10;
  bool waituntildone() const;
  void set_waituntildone(bool value);

  // optional bool fastenOldFish = 11;
  void clear_fastenoldfish();
  static const int kFastenOldFishFieldNumber = 11;
  bool fastenoldfish() const;
  void set_fastenoldfish(bool value);

  // optional bool fastenIn = 12;
  void clear_fastenin();
  static const int kFastenInFieldNumber = 12;
  bool fastenin() const;
  void set_fastenin(bool value);

  // optional int32 toward = 13;
  void clear_toward();
  static const int kTowardFieldNumber = 13;
  ::google::protobuf::int32 toward() const;
  void set_toward(::google::protobuf::int32 value);

  // optional .gt_msg.Vec3 offset = 14;
  bool has_offset() const;
  void clear_offset();
  static const int kOffsetFieldNumber = 14;
  const ::gt_msg::Vec3& offset() const;
  ::gt_msg::Vec3* mutable_offset();
  ::gt_msg::Vec3* release_offset();
  void set_allocated_offset(::gt_msg::Vec3* offset);

  // optional bool foldX = 15;
  void clear_foldx();
  static const int kFoldXFieldNumber = 15;
  bool foldx() const;
  void set_foldx(bool value);

  // optional bool foldY = 16;
  void clear_foldy();
  static const int kFoldYFieldNumber = 16;
  bool foldy() const;
  void set_foldy(bool value);

  // optional bool foldZ = 17;
  void clear_foldz();
  static const int kFoldZFieldNumber = 17;
  bool foldz() const;
  void set_foldz(bool value);

  // optional float speedScale = 18;
  void clear_speedscale();
  static const int kSpeedScaleFieldNumber = 18;
  float speedscale() const;
  void set_speedscale(float value);

  // optional int32 deep = 19;
  void clear_deep();
  static const int kDeepFieldNumber = 19;
  ::google::protobuf::int32 deep() const;
  void set_deep(::google::protobuf::int32 value);

  // repeated .gt_msg.MessageTimer messageList = 20;
  int messagelist_size() const;
  void clear_messagelist();
  static const int kMessageListFieldNumber = 20;
  const ::gt_msg::MessageTimer& messagelist(int index) const;
  ::gt_msg::MessageTimer* mutable_messagelist(int index);
  ::gt_msg::MessageTimer* add_messagelist();
  ::google::protobuf::RepeatedPtrField< ::gt_msg::MessageTimer >*
      mutable_messagelist();
  const ::google::protobuf::RepeatedPtrField< ::gt_msg::MessageTimer >&
      messagelist() const;

  // optional bool isYuZhen = 21;
  void clear_isyuzhen();
  static const int kIsYuZhenFieldNumber = 21;
  bool isyuzhen() const;
  void set_isyuzhen(bool value);

  // optional string rootMessage = 22;
  void clear_rootmessage();
  static const int kRootMessageFieldNumber = 22;
  const ::std::string& rootmessage() const;
  void set_rootmessage(const ::std::string& value);
  void set_rootmessage(const char* value);
  void set_rootmessage(const char* value, size_t size);
  ::std::string* mutable_rootmessage();
  ::std::string* release_rootmessage();
  void set_allocated_rootmessage(::std::string* rootmessage);

  // @@protoc_insertion_point(class_scope:gt_msg.ProductItemContent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > productitemindex_;
  mutable int _productitemindex_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr fishtype_;
  ::google::protobuf::RepeatedPtrField< ::gt_msg::ProductItem > items_;
  ::google::protobuf::internal::ArenaStringPtr entermessage_;
  ::google::protobuf::int32 frame_;
  bool combinepaths_;
  bool onlyone_;
  bool waituntilstart_;
  bool waituntildone_;
  ::google::protobuf::internal::ArenaStringPtr leavemessage_;
  ::google::protobuf::int32 toward_;
  bool fastenoldfish_;
  bool fastenin_;
  bool foldx_;
  bool foldy_;
  ::gt_msg::Vec3* offset_;
  float speedscale_;
  ::google::protobuf::int32 deep_;
  ::google::protobuf::RepeatedPtrField< ::gt_msg::MessageTimer > messagelist_;
  ::google::protobuf::internal::ArenaStringPtr rootmessage_;
  bool foldz_;
  bool isyuzhen_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static ProductItemContent* default_instance_;
};
// -------------------------------------------------------------------

class ProductItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.ProductItem) */ {
 public:
  ProductItem();
  virtual ~ProductItem();

  ProductItem(const ProductItem& from);

  inline ProductItem& operator=(const ProductItem& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProductItem& default_instance();

  void Swap(ProductItem* other);

  // implements Message ----------------------------------------------

  inline ProductItem* New() const { return New(NULL); }

  ProductItem* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProductItem& from);
  void MergeFrom(const ProductItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ProductItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string ContentName = 1;
  void clear_contentname();
  static const int kContentNameFieldNumber = 1;
  const ::std::string& contentname() const;
  void set_contentname(const ::std::string& value);
  void set_contentname(const char* value);
  void set_contentname(const char* value, size_t size);
  ::std::string* mutable_contentname();
  ::std::string* release_contentname();
  void set_allocated_contentname(::std::string* contentname);

  // optional bool isSync = 2;
  void clear_issync();
  static const int kIsSyncFieldNumber = 2;
  bool issync() const;
  void set_issync(bool value);

  // optional int32 time = 3;
  void clear_time();
  static const int kTimeFieldNumber = 3;
  ::google::protobuf::int32 time() const;
  void set_time(::google::protobuf::int32 value);

  // repeated .gt_msg.ProductItemContent contentItems = 4;
  int contentitems_size() const;
  void clear_contentitems();
  static const int kContentItemsFieldNumber = 4;
  const ::gt_msg::ProductItemContent& contentitems(int index) const;
  ::gt_msg::ProductItemContent* mutable_contentitems(int index);
  ::gt_msg::ProductItemContent* add_contentitems();
  ::google::protobuf::RepeatedPtrField< ::gt_msg::ProductItemContent >*
      mutable_contentitems();
  const ::google::protobuf::RepeatedPtrField< ::gt_msg::ProductItemContent >&
      contentitems() const;

  // @@protoc_insertion_point(class_scope:gt_msg.ProductItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr contentname_;
  bool issync_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::RepeatedPtrField< ::gt_msg::ProductItemContent > contentitems_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static ProductItem* default_instance_;
};
// -------------------------------------------------------------------

class ProductItemGroup : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.ProductItemGroup) */ {
 public:
  ProductItemGroup();
  virtual ~ProductItemGroup();

  ProductItemGroup(const ProductItemGroup& from);

  inline ProductItemGroup& operator=(const ProductItemGroup& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProductItemGroup& default_instance();

  void Swap(ProductItemGroup* other);

  // implements Message ----------------------------------------------

  inline ProductItemGroup* New() const { return New(NULL); }

  ProductItemGroup* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProductItemGroup& from);
  void MergeFrom(const ProductItemGroup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ProductItemGroup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .gt_msg.ProductItem itemList = 1;
  int itemlist_size() const;
  void clear_itemlist();
  static const int kItemListFieldNumber = 1;
  const ::gt_msg::ProductItem& itemlist(int index) const;
  ::gt_msg::ProductItem* mutable_itemlist(int index);
  ::gt_msg::ProductItem* add_itemlist();
  ::google::protobuf::RepeatedPtrField< ::gt_msg::ProductItem >*
      mutable_itemlist();
  const ::google::protobuf::RepeatedPtrField< ::gt_msg::ProductItem >&
      itemlist() const;

  // optional string mainEnter = 2;
  void clear_mainenter();
  static const int kMainEnterFieldNumber = 2;
  const ::std::string& mainenter() const;
  void set_mainenter(const ::std::string& value);
  void set_mainenter(const char* value);
  void set_mainenter(const char* value, size_t size);
  ::std::string* mutable_mainenter();
  ::std::string* release_mainenter();
  void set_allocated_mainenter(::std::string* mainenter);

  // optional string AddFishEnter = 3;
  void clear_addfishenter();
  static const int kAddFishEnterFieldNumber = 3;
  const ::std::string& addfishenter() const;
  void set_addfishenter(const ::std::string& value);
  void set_addfishenter(const char* value);
  void set_addfishenter(const char* value, size_t size);
  ::std::string* mutable_addfishenter();
  ::std::string* release_addfishenter();
  void set_allocated_addfishenter(::std::string* addfishenter);

  // optional bool EnableAddFish = 4;
  void clear_enableaddfish();
  static const int kEnableAddFishFieldNumber = 4;
  bool enableaddfish() const;
  void set_enableaddfish(bool value);

  // @@protoc_insertion_point(class_scope:gt_msg.ProductItemGroup)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::gt_msg::ProductItem > itemlist_;
  ::google::protobuf::internal::ArenaStringPtr mainenter_;
  ::google::protobuf::internal::ArenaStringPtr addfishenter_;
  bool enableaddfish_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static ProductItemGroup* default_instance_;
};
// -------------------------------------------------------------------

class FishProductNode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.FishProductNode) */ {
 public:
  FishProductNode();
  virtual ~FishProductNode();

  FishProductNode(const FishProductNode& from);

  inline FishProductNode& operator=(const FishProductNode& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FishProductNode& default_instance();

  void Swap(FishProductNode* other);

  // implements Message ----------------------------------------------

  inline FishProductNode* New() const { return New(NULL); }

  FishProductNode* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FishProductNode& from);
  void MergeFrom(const FishProductNode& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FishProductNode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string productName = 1;
  void clear_productname();
  static const int kProductNameFieldNumber = 1;
  const ::std::string& productname() const;
  void set_productname(const ::std::string& value);
  void set_productname(const char* value);
  void set_productname(const char* value, size_t size);
  ::std::string* mutable_productname();
  ::std::string* release_productname();
  void set_allocated_productname(::std::string* productname);

  // optional int32 repeatTime = 2;
  void clear_repeattime();
  static const int kRepeatTimeFieldNumber = 2;
  ::google::protobuf::int32 repeattime() const;
  void set_repeattime(::google::protobuf::int32 value);

  // optional string fishType = 3;
  void clear_fishtype();
  static const int kFishTypeFieldNumber = 3;
  const ::std::string& fishtype() const;
  void set_fishtype(const ::std::string& value);
  void set_fishtype(const char* value);
  void set_fishtype(const char* value, size_t size);
  ::std::string* mutable_fishtype();
  ::std::string* release_fishtype();
  void set_allocated_fishtype(::std::string* fishtype);

  // optional int32 startFrame = 4;
  void clear_startframe();
  static const int kStartFrameFieldNumber = 4;
  ::google::protobuf::int32 startframe() const;
  void set_startframe(::google::protobuf::int32 value);

  // repeated .gt_msg.FishProductNode childs = 5;
  int childs_size() const;
  void clear_childs();
  static const int kChildsFieldNumber = 5;
  const ::gt_msg::FishProductNode& childs(int index) const;
  ::gt_msg::FishProductNode* mutable_childs(int index);
  ::gt_msg::FishProductNode* add_childs();
  ::google::protobuf::RepeatedPtrField< ::gt_msg::FishProductNode >*
      mutable_childs();
  const ::google::protobuf::RepeatedPtrField< ::gt_msg::FishProductNode >&
      childs() const;

  // @@protoc_insertion_point(class_scope:gt_msg.FishProductNode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr productname_;
  ::google::protobuf::internal::ArenaStringPtr fishtype_;
  ::google::protobuf::int32 repeattime_;
  ::google::protobuf::int32 startframe_;
  ::google::protobuf::RepeatedPtrField< ::gt_msg::FishProductNode > childs_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static FishProductNode* default_instance_;
};
// -------------------------------------------------------------------

class FishConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.FishConfig) */ {
 public:
  FishConfig();
  virtual ~FishConfig();

  FishConfig(const FishConfig& from);

  inline FishConfig& operator=(const FishConfig& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FishConfig& default_instance();

  void Swap(FishConfig* other);

  // implements Message ----------------------------------------------

  inline FishConfig* New() const { return New(NULL); }

  FishConfig* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FishConfig& from);
  void MergeFrom(const FishConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FishConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // optional string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional float raduis = 3;
  void clear_raduis();
  static const int kRaduisFieldNumber = 3;
  float raduis() const;
  void set_raduis(float value);

  // @@protoc_insertion_point(class_scope:gt_msg.FishConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 type_;
  float raduis_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static FishConfig* default_instance_;
};
// -------------------------------------------------------------------

class FishConfigList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.FishConfigList) */ {
 public:
  FishConfigList();
  virtual ~FishConfigList();

  FishConfigList(const FishConfigList& from);

  inline FishConfigList& operator=(const FishConfigList& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FishConfigList& default_instance();

  void Swap(FishConfigList* other);

  // implements Message ----------------------------------------------

  inline FishConfigList* New() const { return New(NULL); }

  FishConfigList* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FishConfigList& from);
  void MergeFrom(const FishConfigList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FishConfigList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .gt_msg.FishConfig fishConfigs = 1;
  int fishconfigs_size() const;
  void clear_fishconfigs();
  static const int kFishConfigsFieldNumber = 1;
  const ::gt_msg::FishConfig& fishconfigs(int index) const;
  ::gt_msg::FishConfig* mutable_fishconfigs(int index);
  ::gt_msg::FishConfig* add_fishconfigs();
  ::google::protobuf::RepeatedPtrField< ::gt_msg::FishConfig >*
      mutable_fishconfigs();
  const ::google::protobuf::RepeatedPtrField< ::gt_msg::FishConfig >&
      fishconfigs() const;

  // @@protoc_insertion_point(class_scope:gt_msg.FishConfigList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::gt_msg::FishConfig > fishconfigs_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static FishConfigList* default_instance_;
};
// -------------------------------------------------------------------

class FishData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.FishData) */ {
 public:
  FishData();
  virtual ~FishData();

  FishData(const FishData& from);

  inline FishData& operator=(const FishData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FishData& default_instance();

  void Swap(FishData* other);

  // implements Message ----------------------------------------------

  inline FishData* New() const { return New(NULL); }

  FishData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FishData& from);
  void MergeFrom(const FishData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FishData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string fishName = 1;
  void clear_fishname();
  static const int kFishNameFieldNumber = 1;
  const ::std::string& fishname() const;
  void set_fishname(const ::std::string& value);
  void set_fishname(const char* value);
  void set_fishname(const char* value, size_t size);
  ::std::string* mutable_fishname();
  ::std::string* release_fishname();
  void set_allocated_fishname(::std::string* fishname);

  // optional int32 fishImportance = 2;
  void clear_fishimportance();
  static const int kFishImportanceFieldNumber = 2;
  ::google::protobuf::int32 fishimportance() const;
  void set_fishimportance(::google::protobuf::int32 value);

  // optional string fishModel = 3;
  void clear_fishmodel();
  static const int kFishModelFieldNumber = 3;
  const ::std::string& fishmodel() const;
  void set_fishmodel(const ::std::string& value);
  void set_fishmodel(const char* value);
  void set_fishmodel(const char* value, size_t size);
  ::std::string* mutable_fishmodel();
  ::std::string* release_fishmodel();
  void set_allocated_fishmodel(::std::string* fishmodel);

  // repeated int32 FishScore = 4;
  int fishscore_size() const;
  void clear_fishscore();
  static const int kFishScoreFieldNumber = 4;
  ::google::protobuf::int32 fishscore(int index) const;
  void set_fishscore(int index, ::google::protobuf::int32 value);
  void add_fishscore(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      fishscore() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_fishscore();

  // repeated string fishDieEffect = 5;
  int fishdieeffect_size() const;
  void clear_fishdieeffect();
  static const int kFishDieEffectFieldNumber = 5;
  const ::std::string& fishdieeffect(int index) const;
  ::std::string* mutable_fishdieeffect(int index);
  void set_fishdieeffect(int index, const ::std::string& value);
  void set_fishdieeffect(int index, const char* value);
  void set_fishdieeffect(int index, const char* value, size_t size);
  ::std::string* add_fishdieeffect();
  void add_fishdieeffect(const ::std::string& value);
  void add_fishdieeffect(const char* value);
  void add_fishdieeffect(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& fishdieeffect() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_fishdieeffect();

  // repeated .gt_msg.FishActionData fishActionDataList = 6;
  int fishactiondatalist_size() const;
  void clear_fishactiondatalist();
  static const int kFishActionDataListFieldNumber = 6;
  const ::gt_msg::FishActionData& fishactiondatalist(int index) const;
  ::gt_msg::FishActionData* mutable_fishactiondatalist(int index);
  ::gt_msg::FishActionData* add_fishactiondatalist();
  ::google::protobuf::RepeatedPtrField< ::gt_msg::FishActionData >*
      mutable_fishactiondatalist();
  const ::google::protobuf::RepeatedPtrField< ::gt_msg::FishActionData >&
      fishactiondatalist() const;

  // optional float AttackHight = 7;
  void clear_attackhight();
  static const int kAttackHightFieldNumber = 7;
  float attackhight() const;
  void set_attackhight(float value);

  // @@protoc_insertion_point(class_scope:gt_msg.FishData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr fishname_;
  ::google::protobuf::internal::ArenaStringPtr fishmodel_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > fishscore_;
  mutable int _fishscore_cached_byte_size_;
  ::google::protobuf::int32 fishimportance_;
  float attackhight_;
  ::google::protobuf::RepeatedPtrField< ::std::string> fishdieeffect_;
  ::google::protobuf::RepeatedPtrField< ::gt_msg::FishActionData > fishactiondatalist_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static FishData* default_instance_;
};
// -------------------------------------------------------------------

class FishActionData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.FishActionData) */ {
 public:
  FishActionData();
  virtual ~FishActionData();

  FishActionData(const FishActionData& from);

  inline FishActionData& operator=(const FishActionData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FishActionData& default_instance();

  void Swap(FishActionData* other);

  // implements Message ----------------------------------------------

  inline FishActionData* New() const { return New(NULL); }

  FishActionData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FishActionData& from);
  void MergeFrom(const FishActionData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FishActionData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string ActionName = 1;
  void clear_actionname();
  static const int kActionNameFieldNumber = 1;
  const ::std::string& actionname() const;
  void set_actionname(const ::std::string& value);
  void set_actionname(const char* value);
  void set_actionname(const char* value, size_t size);
  ::std::string* mutable_actionname();
  ::std::string* release_actionname();
  void set_allocated_actionname(::std::string* actionname);

  // optional int32 ActionFrame = 2;
  void clear_actionframe();
  static const int kActionFrameFieldNumber = 2;
  ::google::protobuf::int32 actionframe() const;
  void set_actionframe(::google::protobuf::int32 value);

  // optional bool IsIdle = 3;
  void clear_isidle();
  static const int kIsIdleFieldNumber = 3;
  bool isidle() const;
  void set_isidle(bool value);

  // @@protoc_insertion_point(class_scope:gt_msg.FishActionData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr actionname_;
  ::google::protobuf::int32 actionframe_;
  bool isidle_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static FishActionData* default_instance_;
};
// -------------------------------------------------------------------

class FishCollider : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.FishCollider) */ {
 public:
  FishCollider();
  virtual ~FishCollider();

  FishCollider(const FishCollider& from);

  inline FishCollider& operator=(const FishCollider& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FishCollider& default_instance();

  void Swap(FishCollider* other);

  // implements Message ----------------------------------------------

  inline FishCollider* New() const { return New(NULL); }

  FishCollider* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FishCollider& from);
  void MergeFrom(const FishCollider& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FishCollider* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string fishName = 1;
  void clear_fishname();
  static const int kFishNameFieldNumber = 1;
  const ::std::string& fishname() const;
  void set_fishname(const ::std::string& value);
  void set_fishname(const char* value);
  void set_fishname(const char* value, size_t size);
  ::std::string* mutable_fishname();
  ::std::string* release_fishname();
  void set_allocated_fishname(::std::string* fishname);

  // optional int32 zBase = 2;
  void clear_zbase();
  static const int kZBaseFieldNumber = 2;
  ::google::protobuf::int32 zbase() const;
  void set_zbase(::google::protobuf::int32 value);

  // repeated .gt_msg.ColliderCircle colliders = 3;
  int colliders_size() const;
  void clear_colliders();
  static const int kCollidersFieldNumber = 3;
  const ::gt_msg::ColliderCircle& colliders(int index) const;
  ::gt_msg::ColliderCircle* mutable_colliders(int index);
  ::gt_msg::ColliderCircle* add_colliders();
  ::google::protobuf::RepeatedPtrField< ::gt_msg::ColliderCircle >*
      mutable_colliders();
  const ::google::protobuf::RepeatedPtrField< ::gt_msg::ColliderCircle >&
      colliders() const;

  // @@protoc_insertion_point(class_scope:gt_msg.FishCollider)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr fishname_;
  ::google::protobuf::RepeatedPtrField< ::gt_msg::ColliderCircle > colliders_;
  ::google::protobuf::int32 zbase_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static FishCollider* default_instance_;
};
// -------------------------------------------------------------------

class FishColliderGroup : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.FishColliderGroup) */ {
 public:
  FishColliderGroup();
  virtual ~FishColliderGroup();

  FishColliderGroup(const FishColliderGroup& from);

  inline FishColliderGroup& operator=(const FishColliderGroup& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FishColliderGroup& default_instance();

  void Swap(FishColliderGroup* other);

  // implements Message ----------------------------------------------

  inline FishColliderGroup* New() const { return New(NULL); }

  FishColliderGroup* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FishColliderGroup& from);
  void MergeFrom(const FishColliderGroup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FishColliderGroup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .gt_msg.FishCollider colliderList = 1;
  int colliderlist_size() const;
  void clear_colliderlist();
  static const int kColliderListFieldNumber = 1;
  const ::gt_msg::FishCollider& colliderlist(int index) const;
  ::gt_msg::FishCollider* mutable_colliderlist(int index);
  ::gt_msg::FishCollider* add_colliderlist();
  ::google::protobuf::RepeatedPtrField< ::gt_msg::FishCollider >*
      mutable_colliderlist();
  const ::google::protobuf::RepeatedPtrField< ::gt_msg::FishCollider >&
      colliderlist() const;

  // @@protoc_insertion_point(class_scope:gt_msg.FishColliderGroup)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::gt_msg::FishCollider > colliderlist_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static FishColliderGroup* default_instance_;
};
// -------------------------------------------------------------------

class BulletData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.BulletData) */ {
 public:
  BulletData();
  virtual ~BulletData();

  BulletData(const BulletData& from);

  inline BulletData& operator=(const BulletData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BulletData& default_instance();

  void Swap(BulletData* other);

  // implements Message ----------------------------------------------

  inline BulletData* New() const { return New(NULL); }

  BulletData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BulletData& from);
  void MergeFrom(const BulletData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BulletData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 configID = 1;
  void clear_configid();
  static const int kConfigIDFieldNumber = 1;
  ::google::protobuf::int32 configid() const;
  void set_configid(::google::protobuf::int32 value);

  // optional string model = 2;
  void clear_model();
  static const int kModelFieldNumber = 2;
  const ::std::string& model() const;
  void set_model(const ::std::string& value);
  void set_model(const char* value);
  void set_model(const char* value, size_t size);
  ::std::string* mutable_model();
  ::std::string* release_model();
  void set_allocated_model(::std::string* model);

  // optional int32 speed = 3;
  void clear_speed();
  static const int kSpeedFieldNumber = 3;
  ::google::protobuf::int32 speed() const;
  void set_speed(::google::protobuf::int32 value);

  // optional float radius = 4;
  void clear_radius();
  static const int kRadiusFieldNumber = 4;
  float radius() const;
  void set_radius(float value);

  // optional string yuwangModel = 5;
  void clear_yuwangmodel();
  static const int kYuwangModelFieldNumber = 5;
  const ::std::string& yuwangmodel() const;
  void set_yuwangmodel(const ::std::string& value);
  void set_yuwangmodel(const char* value);
  void set_yuwangmodel(const char* value, size_t size);
  ::std::string* mutable_yuwangmodel();
  ::std::string* release_yuwangmodel();
  void set_allocated_yuwangmodel(::std::string* yuwangmodel);

  // optional string turretModel = 6;
  void clear_turretmodel();
  static const int kTurretModelFieldNumber = 6;
  const ::std::string& turretmodel() const;
  void set_turretmodel(const ::std::string& value);
  void set_turretmodel(const char* value);
  void set_turretmodel(const char* value, size_t size);
  ::std::string* mutable_turretmodel();
  ::std::string* release_turretmodel();
  void set_allocated_turretmodel(::std::string* turretmodel);

  // optional int32 multiple = 7;
  void clear_multiple();
  static const int kMultipleFieldNumber = 7;
  ::google::protobuf::int32 multiple() const;
  void set_multiple(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gt_msg.BulletData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr model_;
  ::google::protobuf::int32 configid_;
  ::google::protobuf::int32 speed_;
  ::google::protobuf::internal::ArenaStringPtr yuwangmodel_;
  float radius_;
  ::google::protobuf::int32 multiple_;
  ::google::protobuf::internal::ArenaStringPtr turretmodel_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static BulletData* default_instance_;
};
// -------------------------------------------------------------------

class MagicData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.MagicData) */ {
 public:
  MagicData();
  virtual ~MagicData();

  MagicData(const MagicData& from);

  inline MagicData& operator=(const MagicData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MagicData& default_instance();

  void Swap(MagicData* other);

  // implements Message ----------------------------------------------

  inline MagicData* New() const { return New(NULL); }

  MagicData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MagicData& from);
  void MergeFrom(const MagicData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MagicData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 configID = 1;
  void clear_configid();
  static const int kConfigIDFieldNumber = 1;
  ::google::protobuf::int32 configid() const;
  void set_configid(::google::protobuf::int32 value);

  // optional string model = 2;
  void clear_model();
  static const int kModelFieldNumber = 2;
  const ::std::string& model() const;
  void set_model(const ::std::string& value);
  void set_model(const char* value);
  void set_model(const char* value, size_t size);
  ::std::string* mutable_model();
  ::std::string* release_model();
  void set_allocated_model(::std::string* model);

  // optional int32 multiple = 7;
  void clear_multiple();
  static const int kMultipleFieldNumber = 7;
  ::google::protobuf::int32 multiple() const;
  void set_multiple(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gt_msg.MagicData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr model_;
  ::google::protobuf::int32 configid_;
  ::google::protobuf::int32 multiple_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static MagicData* default_instance_;
};
// -------------------------------------------------------------------

class PropData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.PropData) */ {
 public:
  PropData();
  virtual ~PropData();

  PropData(const PropData& from);

  inline PropData& operator=(const PropData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PropData& default_instance();

  void Swap(PropData* other);

  // implements Message ----------------------------------------------

  inline PropData* New() const { return New(NULL); }

  PropData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PropData& from);
  void MergeFrom(const PropData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PropData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 configID = 1;
  void clear_configid();
  static const int kConfigIDFieldNumber = 1;
  ::google::protobuf::int32 configid() const;
  void set_configid(::google::protobuf::int32 value);

  // optional int32 price = 7;
  void clear_price();
  static const int kPriceFieldNumber = 7;
  ::google::protobuf::int32 price() const;
  void set_price(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gt_msg.PropData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 configid_;
  ::google::protobuf::int32 price_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static PropData* default_instance_;
};
// -------------------------------------------------------------------

class BulletExtern : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.BulletExtern) */ {
 public:
  BulletExtern();
  virtual ~BulletExtern();

  BulletExtern(const BulletExtern& from);

  inline BulletExtern& operator=(const BulletExtern& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BulletExtern& default_instance();

  void Swap(BulletExtern* other);

  // implements Message ----------------------------------------------

  inline BulletExtern* New() const { return New(NULL); }

  BulletExtern* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BulletExtern& from);
  void MergeFrom(const BulletExtern& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BulletExtern* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 TurretID = 1;
  void clear_turretid();
  static const int kTurretIDFieldNumber = 1;
  ::google::protobuf::int32 turretid() const;
  void set_turretid(::google::protobuf::int32 value);

  // optional string TurretModel = 2;
  void clear_turretmodel();
  static const int kTurretModelFieldNumber = 2;
  const ::std::string& turretmodel() const;
  void set_turretmodel(const ::std::string& value);
  void set_turretmodel(const char* value);
  void set_turretmodel(const char* value, size_t size);
  ::std::string* mutable_turretmodel();
  ::std::string* release_turretmodel();
  void set_allocated_turretmodel(::std::string* turretmodel);

  // optional int32 ConfigID = 3;
  void clear_configid();
  static const int kConfigIDFieldNumber = 3;
  ::google::protobuf::int32 configid() const;
  void set_configid(::google::protobuf::int32 value);

  // optional string BulletModel = 4;
  void clear_bulletmodel();
  static const int kBulletModelFieldNumber = 4;
  const ::std::string& bulletmodel() const;
  void set_bulletmodel(const ::std::string& value);
  void set_bulletmodel(const char* value);
  void set_bulletmodel(const char* value, size_t size);
  ::std::string* mutable_bulletmodel();
  ::std::string* release_bulletmodel();
  void set_allocated_bulletmodel(::std::string* bulletmodel);

  // optional string NetModel = 5;
  void clear_netmodel();
  static const int kNetModelFieldNumber = 5;
  const ::std::string& netmodel() const;
  void set_netmodel(const ::std::string& value);
  void set_netmodel(const char* value);
  void set_netmodel(const char* value, size_t size);
  ::std::string* mutable_netmodel();
  ::std::string* release_netmodel();
  void set_allocated_netmodel(::std::string* netmodel);

  // optional int32 Multiple = 6;
  void clear_multiple();
  static const int kMultipleFieldNumber = 6;
  ::google::protobuf::int32 multiple() const;
  void set_multiple(::google::protobuf::int32 value);

  // optional int32 Speed = 7;
  void clear_speed();
  static const int kSpeedFieldNumber = 7;
  ::google::protobuf::int32 speed() const;
  void set_speed(::google::protobuf::int32 value);

  // optional float Radius = 8;
  void clear_radius();
  static const int kRadiusFieldNumber = 8;
  float radius() const;
  void set_radius(float value);

  // optional int32 SoundIndex = 9;
  void clear_soundindex();
  static const int kSoundIndexFieldNumber = 9;
  ::google::protobuf::int32 soundindex() const;
  void set_soundindex(::google::protobuf::int32 value);

  // optional string Paokou = 10;
  void clear_paokou();
  static const int kPaokouFieldNumber = 10;
  const ::std::string& paokou() const;
  void set_paokou(const ::std::string& value);
  void set_paokou(const char* value);
  void set_paokou(const char* value, size_t size);
  ::std::string* mutable_paokou();
  ::std::string* release_paokou();
  void set_allocated_paokou(::std::string* paokou);

  // optional string SkillModel = 11;
  void clear_skillmodel();
  static const int kSkillModelFieldNumber = 11;
  const ::std::string& skillmodel() const;
  void set_skillmodel(const ::std::string& value);
  void set_skillmodel(const char* value);
  void set_skillmodel(const char* value, size_t size);
  ::std::string* mutable_skillmodel();
  ::std::string* release_skillmodel();
  void set_allocated_skillmodel(::std::string* skillmodel);

  // optional string Skillbg = 12;
  void clear_skillbg();
  static const int kSkillbgFieldNumber = 12;
  const ::std::string& skillbg() const;
  void set_skillbg(const ::std::string& value);
  void set_skillbg(const char* value);
  void set_skillbg(const char* value, size_t size);
  ::std::string* mutable_skillbg();
  ::std::string* release_skillbg();
  void set_allocated_skillbg(::std::string* skillbg);

  // @@protoc_insertion_point(class_scope:gt_msg.BulletExtern)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr turretmodel_;
  ::google::protobuf::int32 turretid_;
  ::google::protobuf::int32 configid_;
  ::google::protobuf::internal::ArenaStringPtr bulletmodel_;
  ::google::protobuf::internal::ArenaStringPtr netmodel_;
  ::google::protobuf::int32 multiple_;
  ::google::protobuf::int32 speed_;
  float radius_;
  ::google::protobuf::int32 soundindex_;
  ::google::protobuf::internal::ArenaStringPtr paokou_;
  ::google::protobuf::internal::ArenaStringPtr skillmodel_;
  ::google::protobuf::internal::ArenaStringPtr skillbg_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static BulletExtern* default_instance_;
};
// -------------------------------------------------------------------

class BulletConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.BulletConfig) */ {
 public:
  BulletConfig();
  virtual ~BulletConfig();

  BulletConfig(const BulletConfig& from);

  inline BulletConfig& operator=(const BulletConfig& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BulletConfig& default_instance();

  void Swap(BulletConfig* other);

  // implements Message ----------------------------------------------

  inline BulletConfig* New() const { return New(NULL); }

  BulletConfig* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BulletConfig& from);
  void MergeFrom(const BulletConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BulletConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .gt_msg.BulletExtern bulletList = 1;
  int bulletlist_size() const;
  void clear_bulletlist();
  static const int kBulletListFieldNumber = 1;
  const ::gt_msg::BulletExtern& bulletlist(int index) const;
  ::gt_msg::BulletExtern* mutable_bulletlist(int index);
  ::gt_msg::BulletExtern* add_bulletlist();
  ::google::protobuf::RepeatedPtrField< ::gt_msg::BulletExtern >*
      mutable_bulletlist();
  const ::google::protobuf::RepeatedPtrField< ::gt_msg::BulletExtern >&
      bulletlist() const;

  // @@protoc_insertion_point(class_scope:gt_msg.BulletConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::gt_msg::BulletExtern > bulletlist_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static BulletConfig* default_instance_;
};
// -------------------------------------------------------------------

class InstantData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.InstantData) */ {
 public:
  InstantData();
  virtual ~InstantData();

  InstantData(const InstantData& from);

  inline InstantData& operator=(const InstantData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InstantData& default_instance();

  void Swap(InstantData* other);

  // implements Message ----------------------------------------------

  inline InstantData* New() const { return New(NULL); }

  InstantData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InstantData& from);
  void MergeFrom(const InstantData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InstantData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 configID = 1;
  void clear_configid();
  static const int kConfigIDFieldNumber = 1;
  ::google::protobuf::int32 configid() const;
  void set_configid(::google::protobuf::int32 value);

  // optional int32 multiple = 2;
  void clear_multiple();
  static const int kMultipleFieldNumber = 2;
  ::google::protobuf::int32 multiple() const;
  void set_multiple(::google::protobuf::int32 value);

  // optional int32 speed = 3;
  void clear_speed();
  static const int kSpeedFieldNumber = 3;
  ::google::protobuf::int32 speed() const;
  void set_speed(::google::protobuf::int32 value);

  // optional string model = 4;
  void clear_model();
  static const int kModelFieldNumber = 4;
  const ::std::string& model() const;
  void set_model(const ::std::string& value);
  void set_model(const char* value);
  void set_model(const char* value, size_t size);
  ::std::string* mutable_model();
  ::std::string* release_model();
  void set_allocated_model(::std::string* model);

  // optional string effect = 5;
  void clear_effect();
  static const int kEffectFieldNumber = 5;
  const ::std::string& effect() const;
  void set_effect(const ::std::string& value);
  void set_effect(const char* value);
  void set_effect(const char* value, size_t size);
  ::std::string* mutable_effect();
  ::std::string* release_effect();
  void set_allocated_effect(::std::string* effect);

  // optional string discribe = 6;
  void clear_discribe();
  static const int kDiscribeFieldNumber = 6;
  const ::std::string& discribe() const;
  void set_discribe(const ::std::string& value);
  void set_discribe(const char* value);
  void set_discribe(const char* value, size_t size);
  ::std::string* mutable_discribe();
  ::std::string* release_discribe();
  void set_allocated_discribe(::std::string* discribe);

  // @@protoc_insertion_point(class_scope:gt_msg.InstantData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 configid_;
  ::google::protobuf::int32 multiple_;
  ::google::protobuf::internal::ArenaStringPtr model_;
  ::google::protobuf::internal::ArenaStringPtr effect_;
  ::google::protobuf::internal::ArenaStringPtr discribe_;
  ::google::protobuf::int32 speed_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static InstantData* default_instance_;
};
// -------------------------------------------------------------------

class FreezeData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.FreezeData) */ {
 public:
  FreezeData();
  virtual ~FreezeData();

  FreezeData(const FreezeData& from);

  inline FreezeData& operator=(const FreezeData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FreezeData& default_instance();

  void Swap(FreezeData* other);

  // implements Message ----------------------------------------------

  inline FreezeData* New() const { return New(NULL); }

  FreezeData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FreezeData& from);
  void MergeFrom(const FreezeData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FreezeData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 frame = 1;
  void clear_frame();
  static const int kFrameFieldNumber = 1;
  ::google::protobuf::int32 frame() const;
  void set_frame(::google::protobuf::int32 value);

  // optional int32 duration = 2;
  void clear_duration();
  static const int kDurationFieldNumber = 2;
  ::google::protobuf::int32 duration() const;
  void set_duration(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gt_msg.FreezeData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 frame_;
  ::google::protobuf::int32 duration_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static FreezeData* default_instance_;
};
// -------------------------------------------------------------------

class FastData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.FastData) */ {
 public:
  FastData();
  virtual ~FastData();

  FastData(const FastData& from);

  inline FastData& operator=(const FastData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FastData& default_instance();

  void Swap(FastData* other);

  // implements Message ----------------------------------------------

  inline FastData* New() const { return New(NULL); }

  FastData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FastData& from);
  void MergeFrom(const FastData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FastData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 frame = 1;
  void clear_frame();
  static const int kFrameFieldNumber = 1;
  ::google::protobuf::int32 frame() const;
  void set_frame(::google::protobuf::int32 value);

  // optional float speed = 2;
  void clear_speed();
  static const int kSpeedFieldNumber = 2;
  float speed() const;
  void set_speed(float value);

  // optional int32 Duration = 3;
  void clear_duration();
  static const int kDurationFieldNumber = 3;
  ::google::protobuf::int32 duration() const;
  void set_duration(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gt_msg.FastData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 frame_;
  float speed_;
  ::google::protobuf::int32 duration_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static FastData* default_instance_;
};
// -------------------------------------------------------------------

class JoinFreeRequestfish3d : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.JoinFreeRequestfish3d) */ {
 public:
  JoinFreeRequestfish3d();
  virtual ~JoinFreeRequestfish3d();

  JoinFreeRequestfish3d(const JoinFreeRequestfish3d& from);

  inline JoinFreeRequestfish3d& operator=(const JoinFreeRequestfish3d& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JoinFreeRequestfish3d& default_instance();

  void Swap(JoinFreeRequestfish3d* other);

  // implements Message ----------------------------------------------

  inline JoinFreeRequestfish3d* New() const { return New(NULL); }

  JoinFreeRequestfish3d* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JoinFreeRequestfish3d& from);
  void MergeFrom(const JoinFreeRequestfish3d& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(JoinFreeRequestfish3d* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string userId = 1;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& userid() const;
  void set_userid(const ::std::string& value);
  void set_userid(const char* value);
  void set_userid(const char* value, size_t size);
  ::std::string* mutable_userid();
  ::std::string* release_userid();
  void set_allocated_userid(::std::string* userid);

  // optional int32 tableId = 2;
  void clear_tableid();
  static const int kTableIdFieldNumber = 2;
  ::google::protobuf::int32 tableid() const;
  void set_tableid(::google::protobuf::int32 value);

  // optional int32 seatId = 3;
  void clear_seatid();
  static const int kSeatIdFieldNumber = 3;
  ::google::protobuf::int32 seatid() const;
  void set_seatid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gt_msg.JoinFreeRequestfish3d)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr userid_;
  ::google::protobuf::int32 tableid_;
  ::google::protobuf::int32 seatid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static JoinFreeRequestfish3d* default_instance_;
};
// -------------------------------------------------------------------

class JoinFreeResponsefish3d : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.JoinFreeResponsefish3d) */ {
 public:
  JoinFreeResponsefish3d();
  virtual ~JoinFreeResponsefish3d();

  JoinFreeResponsefish3d(const JoinFreeResponsefish3d& from);

  inline JoinFreeResponsefish3d& operator=(const JoinFreeResponsefish3d& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JoinFreeResponsefish3d& default_instance();

  void Swap(JoinFreeResponsefish3d* other);

  // implements Message ----------------------------------------------

  inline JoinFreeResponsefish3d* New() const { return New(NULL); }

  JoinFreeResponsefish3d* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JoinFreeResponsefish3d& from);
  void MergeFrom(const JoinFreeResponsefish3d& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(JoinFreeResponsefish3d* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 nowFrame = 1;
  void clear_nowframe();
  static const int kNowFrameFieldNumber = 1;
  ::google::protobuf::int32 nowframe() const;
  void set_nowframe(::google::protobuf::int32 value);

  // repeated string rootMessage = 2;
  int rootmessage_size() const;
  void clear_rootmessage();
  static const int kRootMessageFieldNumber = 2;
  const ::std::string& rootmessage(int index) const;
  ::std::string* mutable_rootmessage(int index);
  void set_rootmessage(int index, const ::std::string& value);
  void set_rootmessage(int index, const char* value);
  void set_rootmessage(int index, const char* value, size_t size);
  ::std::string* add_rootmessage();
  void add_rootmessage(const ::std::string& value);
  void add_rootmessage(const char* value);
  void add_rootmessage(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& rootmessage() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_rootmessage();

  // optional int32 ScoreRatio = 3;
  void clear_scoreratio();
  static const int kScoreRatioFieldNumber = 3;
  ::google::protobuf::int32 scoreratio() const;
  void set_scoreratio(::google::protobuf::int32 value);

  // optional .gt_msg.BulletConfig bc = 4;
  bool has_bc() const;
  void clear_bc();
  static const int kBcFieldNumber = 4;
  const ::gt_msg::BulletConfig& bc() const;
  ::gt_msg::BulletConfig* mutable_bc();
  ::gt_msg::BulletConfig* release_bc();
  void set_allocated_bc(::gt_msg::BulletConfig* bc);

  // optional int32 CompetitionTimeAll = 11;
  void clear_competitiontimeall();
  static const int kCompetitionTimeAllFieldNumber = 11;
  ::google::protobuf::int32 competitiontimeall() const;
  void set_competitiontimeall(::google::protobuf::int32 value);

  // optional int32 CompetitionTimeRemain = 5;
  void clear_competitiontimeremain();
  static const int kCompetitionTimeRemainFieldNumber = 5;
  ::google::protobuf::int32 competitiontimeremain() const;
  void set_competitiontimeremain(::google::protobuf::int32 value);

  // optional int32 CompetitionRedPackSum = 6;
  void clear_competitionredpacksum();
  static const int kCompetitionRedPackSumFieldNumber = 6;
  ::google::protobuf::int32 competitionredpacksum() const;
  void set_competitionredpacksum(::google::protobuf::int32 value);

  // optional int32 CompetitionBulletTurretid = 7;
  void clear_competitionbulletturretid();
  static const int kCompetitionBulletTurretidFieldNumber = 7;
  ::google::protobuf::int32 competitionbulletturretid() const;
  void set_competitionbulletturretid(::google::protobuf::int32 value);

  // optional int32 CompetitionBulletConfigId = 8;
  void clear_competitionbulletconfigid();
  static const int kCompetitionBulletConfigIdFieldNumber = 8;
  ::google::protobuf::int32 competitionbulletconfigid() const;
  void set_competitionbulletconfigid(::google::protobuf::int32 value);

  // optional int32 CompetitionBulletCount = 9;
  void clear_competitionbulletcount();
  static const int kCompetitionBulletCountFieldNumber = 9;
  ::google::protobuf::int32 competitionbulletcount() const;
  void set_competitionbulletcount(::google::protobuf::int32 value);

  // optional int32 CompetitionBulletRemain = 10;
  void clear_competitionbulletremain();
  static const int kCompetitionBulletRemainFieldNumber = 10;
  ::google::protobuf::int32 competitionbulletremain() const;
  void set_competitionbulletremain(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gt_msg.JoinFreeResponsefish3d)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::std::string> rootmessage_;
  ::google::protobuf::int32 nowframe_;
  ::google::protobuf::int32 scoreratio_;
  ::gt_msg::BulletConfig* bc_;
  ::google::protobuf::int32 competitiontimeall_;
  ::google::protobuf::int32 competitiontimeremain_;
  ::google::protobuf::int32 competitionredpacksum_;
  ::google::protobuf::int32 competitionbulletturretid_;
  ::google::protobuf::int32 competitionbulletconfigid_;
  ::google::protobuf::int32 competitionbulletcount_;
  ::google::protobuf::int32 competitionbulletremain_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static JoinFreeResponsefish3d* default_instance_;
};
// -------------------------------------------------------------------

class GameConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.GameConfig) */ {
 public:
  GameConfig();
  virtual ~GameConfig();

  GameConfig(const GameConfig& from);

  inline GameConfig& operator=(const GameConfig& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameConfig& default_instance();

  void Swap(GameConfig* other);

  // implements Message ----------------------------------------------

  inline GameConfig* New() const { return New(NULL); }

  GameConfig* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameConfig& from);
  void MergeFrom(const GameConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GameConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .gt_msg.Vec2 gunPos = 1;
  int gunpos_size() const;
  void clear_gunpos();
  static const int kGunPosFieldNumber = 1;
  const ::gt_msg::Vec2& gunpos(int index) const;
  ::gt_msg::Vec2* mutable_gunpos(int index);
  ::gt_msg::Vec2* add_gunpos();
  ::google::protobuf::RepeatedPtrField< ::gt_msg::Vec2 >*
      mutable_gunpos();
  const ::google::protobuf::RepeatedPtrField< ::gt_msg::Vec2 >&
      gunpos() const;

  // repeated .gt_msg.Vec2 turretPos = 2;
  int turretpos_size() const;
  void clear_turretpos();
  static const int kTurretPosFieldNumber = 2;
  const ::gt_msg::Vec2& turretpos(int index) const;
  ::gt_msg::Vec2* mutable_turretpos(int index);
  ::gt_msg::Vec2* add_turretpos();
  ::google::protobuf::RepeatedPtrField< ::gt_msg::Vec2 >*
      mutable_turretpos();
  const ::google::protobuf::RepeatedPtrField< ::gt_msg::Vec2 >&
      turretpos() const;

  // repeated .gt_msg.FishData fishConfigs = 3;
  int fishconfigs_size() const;
  void clear_fishconfigs();
  static const int kFishConfigsFieldNumber = 3;
  const ::gt_msg::FishData& fishconfigs(int index) const;
  ::gt_msg::FishData* mutable_fishconfigs(int index);
  ::gt_msg::FishData* add_fishconfigs();
  ::google::protobuf::RepeatedPtrField< ::gt_msg::FishData >*
      mutable_fishconfigs();
  const ::google::protobuf::RepeatedPtrField< ::gt_msg::FishData >&
      fishconfigs() const;

  // repeated .gt_msg.PropData propConfigs = 6;
  int propconfigs_size() const;
  void clear_propconfigs();
  static const int kPropConfigsFieldNumber = 6;
  const ::gt_msg::PropData& propconfigs(int index) const;
  ::gt_msg::PropData* mutable_propconfigs(int index);
  ::gt_msg::PropData* add_propconfigs();
  ::google::protobuf::RepeatedPtrField< ::gt_msg::PropData >*
      mutable_propconfigs();
  const ::google::protobuf::RepeatedPtrField< ::gt_msg::PropData >&
      propconfigs() const;

  // @@protoc_insertion_point(class_scope:gt_msg.GameConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::gt_msg::Vec2 > gunpos_;
  ::google::protobuf::RepeatedPtrField< ::gt_msg::Vec2 > turretpos_;
  ::google::protobuf::RepeatedPtrField< ::gt_msg::FishData > fishconfigs_;
  ::google::protobuf::RepeatedPtrField< ::gt_msg::PropData > propconfigs_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static GameConfig* default_instance_;
};
// -------------------------------------------------------------------

class CurrentFrame : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.CurrentFrame) */ {
 public:
  CurrentFrame();
  virtual ~CurrentFrame();

  CurrentFrame(const CurrentFrame& from);

  inline CurrentFrame& operator=(const CurrentFrame& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CurrentFrame& default_instance();

  void Swap(CurrentFrame* other);

  // implements Message ----------------------------------------------

  inline CurrentFrame* New() const { return New(NULL); }

  CurrentFrame* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CurrentFrame& from);
  void MergeFrom(const CurrentFrame& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CurrentFrame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 frame = 1;
  void clear_frame();
  static const int kFrameFieldNumber = 1;
  ::google::protobuf::int32 frame() const;
  void set_frame(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gt_msg.CurrentFrame)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 frame_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static CurrentFrame* default_instance_;
};
// -------------------------------------------------------------------

class FishCoin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.FishCoin) */ {
 public:
  FishCoin();
  virtual ~FishCoin();

  FishCoin(const FishCoin& from);

  inline FishCoin& operator=(const FishCoin& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FishCoin& default_instance();

  void Swap(FishCoin* other);

  // implements Message ----------------------------------------------

  inline FishCoin* New() const { return New(NULL); }

  FishCoin* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FishCoin& from);
  void MergeFrom(const FishCoin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FishCoin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 seatId = 1;
  void clear_seatid();
  static const int kSeatIdFieldNumber = 1;
  ::google::protobuf::int32 seatid() const;
  void set_seatid(::google::protobuf::int32 value);

  // optional int64 scoreNow = 2;
  void clear_scorenow();
  static const int kScoreNowFieldNumber = 2;
  ::google::protobuf::int64 scorenow() const;
  void set_scorenow(::google::protobuf::int64 value);

  // optional int32 bulletRemain = 3;
  void clear_bulletremain();
  static const int kBulletRemainFieldNumber = 3;
  ::google::protobuf::int32 bulletremain() const;
  void set_bulletremain(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gt_msg.FishCoin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 scorenow_;
  ::google::protobuf::int32 seatid_;
  ::google::protobuf::int32 bulletremain_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static FishCoin* default_instance_;
};
// -------------------------------------------------------------------

class SceneFishs : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.SceneFishs) */ {
 public:
  SceneFishs();
  virtual ~SceneFishs();

  SceneFishs(const SceneFishs& from);

  inline SceneFishs& operator=(const SceneFishs& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneFishs& default_instance();

  void Swap(SceneFishs* other);

  // implements Message ----------------------------------------------

  inline SceneFishs* New() const { return New(NULL); }

  SceneFishs* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SceneFishs& from);
  void MergeFrom(const SceneFishs& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SceneFishs* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .gt_msg.EstablishFish fishs = 1;
  bool has_fishs() const;
  void clear_fishs();
  static const int kFishsFieldNumber = 1;
  const ::gt_msg::EstablishFish& fishs() const;
  ::gt_msg::EstablishFish* mutable_fishs();
  ::gt_msg::EstablishFish* release_fishs();
  void set_allocated_fishs(::gt_msg::EstablishFish* fishs);

  // repeated .gt_msg.FreezeData freeze = 2;
  int freeze_size() const;
  void clear_freeze();
  static const int kFreezeFieldNumber = 2;
  const ::gt_msg::FreezeData& freeze(int index) const;
  ::gt_msg::FreezeData* mutable_freeze(int index);
  ::gt_msg::FreezeData* add_freeze();
  ::google::protobuf::RepeatedPtrField< ::gt_msg::FreezeData >*
      mutable_freeze();
  const ::google::protobuf::RepeatedPtrField< ::gt_msg::FreezeData >&
      freeze() const;

  // repeated .gt_msg.FastData fasts = 3;
  int fasts_size() const;
  void clear_fasts();
  static const int kFastsFieldNumber = 3;
  const ::gt_msg::FastData& fasts(int index) const;
  ::gt_msg::FastData* mutable_fasts(int index);
  ::gt_msg::FastData* add_fasts();
  ::google::protobuf::RepeatedPtrField< ::gt_msg::FastData >*
      mutable_fasts();
  const ::google::protobuf::RepeatedPtrField< ::gt_msg::FastData >&
      fasts() const;

  // @@protoc_insertion_point(class_scope:gt_msg.SceneFishs)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::gt_msg::EstablishFish* fishs_;
  ::google::protobuf::RepeatedPtrField< ::gt_msg::FreezeData > freeze_;
  ::google::protobuf::RepeatedPtrField< ::gt_msg::FastData > fasts_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static SceneFishs* default_instance_;
};
// -------------------------------------------------------------------

class EstablishFishExternal : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.EstablishFishExternal) */ {
 public:
  EstablishFishExternal();
  virtual ~EstablishFishExternal();

  EstablishFishExternal(const EstablishFishExternal& from);

  inline EstablishFishExternal& operator=(const EstablishFishExternal& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EstablishFishExternal& default_instance();

  void Swap(EstablishFishExternal* other);

  // implements Message ----------------------------------------------

  inline EstablishFishExternal* New() const { return New(NULL); }

  EstablishFishExternal* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EstablishFishExternal& from);
  void MergeFrom(const EstablishFishExternal& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EstablishFishExternal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .gt_msg.EstablishFish fish = 1;
  bool has_fish() const;
  void clear_fish();
  static const int kFishFieldNumber = 1;
  const ::gt_msg::EstablishFish& fish() const;
  ::gt_msg::EstablishFish* mutable_fish();
  ::gt_msg::EstablishFish* release_fish();
  void set_allocated_fish(::gt_msg::EstablishFish* fish);

  // optional bool OnlyOne = 2;
  void clear_onlyone();
  static const int kOnlyOneFieldNumber = 2;
  bool onlyone() const;
  void set_onlyone(bool value);

  // optional bool WaitUntilStart = 3;
  void clear_waituntilstart();
  static const int kWaitUntilStartFieldNumber = 3;
  bool waituntilstart() const;
  void set_waituntilstart(bool value);

  // optional bool WaitUntilDone = 4;
  void clear_waituntildone();
  static const int kWaitUntilDoneFieldNumber = 4;
  bool waituntildone() const;
  void set_waituntildone(bool value);

  // optional string RootMessage = 5;
  void clear_rootmessage();
  static const int kRootMessageFieldNumber = 5;
  const ::std::string& rootmessage() const;
  void set_rootmessage(const ::std::string& value);
  void set_rootmessage(const char* value);
  void set_rootmessage(const char* value, size_t size);
  ::std::string* mutable_rootmessage();
  ::std::string* release_rootmessage();
  void set_allocated_rootmessage(::std::string* rootmessage);

  // optional int32 RedBagScore = 6;
  void clear_redbagscore();
  static const int kRedBagScoreFieldNumber = 6;
  ::google::protobuf::int32 redbagscore() const;
  void set_redbagscore(::google::protobuf::int32 value);

  // optional int32 RedBagType = 7;
  void clear_redbagtype();
  static const int kRedBagTypeFieldNumber = 7;
  ::google::protobuf::int32 redbagtype() const;
  void set_redbagtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gt_msg.EstablishFishExternal)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::gt_msg::EstablishFish* fish_;
  bool onlyone_;
  bool waituntilstart_;
  bool waituntildone_;
  ::google::protobuf::int32 redbagscore_;
  ::google::protobuf::internal::ArenaStringPtr rootmessage_;
  ::google::protobuf::int32 redbagtype_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static EstablishFishExternal* default_instance_;
};
// -------------------------------------------------------------------

class EstablishFish : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.EstablishFish) */ {
 public:
  EstablishFish();
  virtual ~EstablishFish();

  EstablishFish(const EstablishFish& from);

  inline EstablishFish& operator=(const EstablishFish& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EstablishFish& default_instance();

  void Swap(EstablishFish* other);

  // implements Message ----------------------------------------------

  inline EstablishFish* New() const { return New(NULL); }

  EstablishFish* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EstablishFish& from);
  void MergeFrom(const EstablishFish& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EstablishFish* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 fishId = 1;
  void clear_fishid();
  static const int kFishIdFieldNumber = 1;
  ::google::protobuf::int32 fishid() const;
  void set_fishid(::google::protobuf::int32 value);

  // optional int32 fishType = 2;
  void clear_fishtype();
  static const int kFishTypeFieldNumber = 2;
  ::google::protobuf::int32 fishtype() const;
  void set_fishtype(::google::protobuf::int32 value);

  // repeated string pathName = 3;
  int pathname_size() const;
  void clear_pathname();
  static const int kPathNameFieldNumber = 3;
  const ::std::string& pathname(int index) const;
  ::std::string* mutable_pathname(int index);
  void set_pathname(int index, const ::std::string& value);
  void set_pathname(int index, const char* value);
  void set_pathname(int index, const char* value, size_t size);
  ::std::string* add_pathname();
  void add_pathname(const ::std::string& value);
  void add_pathname(const char* value);
  void add_pathname(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& pathname() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_pathname();

  // optional int32 frame = 4;
  void clear_frame();
  static const int kFrameFieldNumber = 4;
  ::google::protobuf::int32 frame() const;
  void set_frame(::google::protobuf::int32 value);

  // optional int32 deep = 5;
  void clear_deep();
  static const int kDeepFieldNumber = 5;
  ::google::protobuf::int32 deep() const;
  void set_deep(::google::protobuf::int32 value);

  // optional int32 skillType = 6;
  void clear_skilltype();
  static const int kSkillTypeFieldNumber = 6;
  ::google::protobuf::int32 skilltype() const;
  void set_skilltype(::google::protobuf::int32 value);

  // optional int32 randomNum = 7;
  void clear_randomnum();
  static const int kRandomNumFieldNumber = 7;
  ::google::protobuf::int32 randomnum() const;
  void set_randomnum(::google::protobuf::int32 value);

  // optional bool FastenOldFish = 8;
  void clear_fastenoldfish();
  static const int kFastenOldFishFieldNumber = 8;
  bool fastenoldfish() const;
  void set_fastenoldfish(bool value);

  // optional bool fastenIn = 9;
  void clear_fastenin();
  static const int kFastenInFieldNumber = 9;
  bool fastenin() const;
  void set_fastenin(bool value);

  // optional int32 toward = 10;
  void clear_toward();
  static const int kTowardFieldNumber = 10;
  ::google::protobuf::int32 toward() const;
  void set_toward(::google::protobuf::int32 value);

  // optional .gt_msg.Vec3 offset = 11;
  bool has_offset() const;
  void clear_offset();
  static const int kOffsetFieldNumber = 11;
  const ::gt_msg::Vec3& offset() const;
  ::gt_msg::Vec3* mutable_offset();
  ::gt_msg::Vec3* release_offset();
  void set_allocated_offset(::gt_msg::Vec3* offset);

  // optional bool foldX = 12;
  void clear_foldx();
  static const int kFoldXFieldNumber = 12;
  bool foldx() const;
  void set_foldx(bool value);

  // optional bool foldY = 13;
  void clear_foldy();
  static const int kFoldYFieldNumber = 13;
  bool foldy() const;
  void set_foldy(bool value);

  // optional bool foldZ = 14;
  void clear_foldz();
  static const int kFoldZFieldNumber = 14;
  bool foldz() const;
  void set_foldz(bool value);

  // optional float speedScale = 15;
  void clear_speedscale();
  static const int kSpeedScaleFieldNumber = 15;
  float speedscale() const;
  void set_speedscale(float value);

  // optional string EnterMessage = 16;
  void clear_entermessage();
  static const int kEnterMessageFieldNumber = 16;
  const ::std::string& entermessage() const;
  void set_entermessage(const ::std::string& value);
  void set_entermessage(const char* value);
  void set_entermessage(const char* value, size_t size);
  ::std::string* mutable_entermessage();
  ::std::string* release_entermessage();
  void set_allocated_entermessage(::std::string* entermessage);

  // optional string LeaveMessage = 17;
  void clear_leavemessage();
  static const int kLeaveMessageFieldNumber = 17;
  const ::std::string& leavemessage() const;
  void set_leavemessage(const ::std::string& value);
  void set_leavemessage(const char* value);
  void set_leavemessage(const char* value, size_t size);
  ::std::string* mutable_leavemessage();
  ::std::string* release_leavemessage();
  void set_allocated_leavemessage(::std::string* leavemessage);

  // repeated .gt_msg.MessageTimer messageList = 18;
  int messagelist_size() const;
  void clear_messagelist();
  static const int kMessageListFieldNumber = 18;
  const ::gt_msg::MessageTimer& messagelist(int index) const;
  ::gt_msg::MessageTimer* mutable_messagelist(int index);
  ::gt_msg::MessageTimer* add_messagelist();
  ::google::protobuf::RepeatedPtrField< ::gt_msg::MessageTimer >*
      mutable_messagelist();
  const ::google::protobuf::RepeatedPtrField< ::gt_msg::MessageTimer >&
      messagelist() const;

  // @@protoc_insertion_point(class_scope:gt_msg.EstablishFish)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 fishid_;
  ::google::protobuf::int32 fishtype_;
  ::google::protobuf::RepeatedPtrField< ::std::string> pathname_;
  ::google::protobuf::int32 frame_;
  ::google::protobuf::int32 deep_;
  ::google::protobuf::int32 skilltype_;
  ::google::protobuf::int32 randomnum_;
  ::google::protobuf::int32 toward_;
  bool fastenoldfish_;
  bool fastenin_;
  bool foldx_;
  bool foldy_;
  ::gt_msg::Vec3* offset_;
  bool foldz_;
  float speedscale_;
  ::google::protobuf::internal::ArenaStringPtr entermessage_;
  ::google::protobuf::internal::ArenaStringPtr leavemessage_;
  ::google::protobuf::RepeatedPtrField< ::gt_msg::MessageTimer > messagelist_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static EstablishFish* default_instance_;
};
// -------------------------------------------------------------------

class CatchFish : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.CatchFish) */ {
 public:
  CatchFish();
  virtual ~CatchFish();

  CatchFish(const CatchFish& from);

  inline CatchFish& operator=(const CatchFish& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CatchFish& default_instance();

  void Swap(CatchFish* other);

  // implements Message ----------------------------------------------

  inline CatchFish* New() const { return New(NULL); }

  CatchFish* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CatchFish& from);
  void MergeFrom(const CatchFish& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CatchFish* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 seatId = 1;
  void clear_seatid();
  static const int kSeatIdFieldNumber = 1;
  ::google::protobuf::int32 seatid() const;
  void set_seatid(::google::protobuf::int32 value);

  // optional int32 fishId = 2;
  void clear_fishid();
  static const int kFishIdFieldNumber = 2;
  ::google::protobuf::int32 fishid() const;
  void set_fishid(::google::protobuf::int32 value);

  // optional int32 frame = 3;
  void clear_frame();
  static const int kFrameFieldNumber = 3;
  ::google::protobuf::int32 frame() const;
  void set_frame(::google::protobuf::int32 value);

  // optional int64 fish_score = 4;
  void clear_fish_score();
  static const int kFishScoreFieldNumber = 4;
  ::google::protobuf::int64 fish_score() const;
  void set_fish_score(::google::protobuf::int64 value);

  // optional int32 link_fish_id = 5;
  void clear_link_fish_id();
  static const int kLinkFishIdFieldNumber = 5;
  ::google::protobuf::int32 link_fish_id() const;
  void set_link_fish_id(::google::protobuf::int32 value);

  // optional int64 scoreNow = 6;
  void clear_scorenow();
  static const int kScoreNowFieldNumber = 6;
  ::google::protobuf::int64 scorenow() const;
  void set_scorenow(::google::protobuf::int64 value);

  // optional int32 dieType = 7;
  void clear_dietype();
  static const int kDieTypeFieldNumber = 7;
  ::google::protobuf::int32 dietype() const;
  void set_dietype(::google::protobuf::int32 value);

  // optional int32 redBagScore = 8;
  void clear_redbagscore();
  static const int kRedBagScoreFieldNumber = 8;
  ::google::protobuf::int32 redbagscore() const;
  void set_redbagscore(::google::protobuf::int32 value);

  // optional int32 redBagScoreAll = 9;
  void clear_redbagscoreall();
  static const int kRedBagScoreAllFieldNumber = 9;
  ::google::protobuf::int32 redbagscoreall() const;
  void set_redbagscoreall(::google::protobuf::int32 value);

  // optional int32 redBagresultCode = 10;
  void clear_redbagresultcode();
  static const int kRedBagresultCodeFieldNumber = 10;
  ::google::protobuf::int32 redbagresultcode() const;
  void set_redbagresultcode(::google::protobuf::int32 value);

  // optional string redBagresultMessage = 11;
  void clear_redbagresultmessage();
  static const int kRedBagresultMessageFieldNumber = 11;
  const ::std::string& redbagresultmessage() const;
  void set_redbagresultmessage(const ::std::string& value);
  void set_redbagresultmessage(const char* value);
  void set_redbagresultmessage(const char* value, size_t size);
  ::std::string* mutable_redbagresultmessage();
  ::std::string* release_redbagresultmessage();
  void set_allocated_redbagresultmessage(::std::string* redbagresultmessage);

  // @@protoc_insertion_point(class_scope:gt_msg.CatchFish)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 seatid_;
  ::google::protobuf::int32 fishid_;
  ::google::protobuf::int64 fish_score_;
  ::google::protobuf::int32 frame_;
  ::google::protobuf::int32 link_fish_id_;
  ::google::protobuf::int64 scorenow_;
  ::google::protobuf::int32 dietype_;
  ::google::protobuf::int32 redbagscore_;
  ::google::protobuf::int32 redbagscoreall_;
  ::google::protobuf::int32 redbagresultcode_;
  ::google::protobuf::internal::ArenaStringPtr redbagresultmessage_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static CatchFish* default_instance_;
};
// -------------------------------------------------------------------

class EstablishBulletRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.EstablishBulletRequest) */ {
 public:
  EstablishBulletRequest();
  virtual ~EstablishBulletRequest();

  EstablishBulletRequest(const EstablishBulletRequest& from);

  inline EstablishBulletRequest& operator=(const EstablishBulletRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EstablishBulletRequest& default_instance();

  void Swap(EstablishBulletRequest* other);

  // implements Message ----------------------------------------------

  inline EstablishBulletRequest* New() const { return New(NULL); }

  EstablishBulletRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EstablishBulletRequest& from);
  void MergeFrom(const EstablishBulletRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EstablishBulletRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 frame = 1;
  void clear_frame();
  static const int kFrameFieldNumber = 1;
  ::google::protobuf::int32 frame() const;
  void set_frame(::google::protobuf::int32 value);

  // optional int32 lockFishId = 2;
  void clear_lockfishid();
  static const int kLockFishIdFieldNumber = 2;
  ::google::protobuf::int32 lockfishid() const;
  void set_lockfishid(::google::protobuf::int32 value);

  // optional .gt_msg.Vec2 terminal = 3;
  bool has_terminal() const;
  void clear_terminal();
  static const int kTerminalFieldNumber = 3;
  const ::gt_msg::Vec2& terminal() const;
  ::gt_msg::Vec2* mutable_terminal();
  ::gt_msg::Vec2* release_terminal();
  void set_allocated_terminal(::gt_msg::Vec2* terminal);

  // optional int32 bulletType = 4;
  void clear_bullettype();
  static const int kBulletTypeFieldNumber = 4;
  ::google::protobuf::int32 bullettype() const;
  void set_bullettype(::google::protobuf::int32 value);

  // optional int32 bulletTurretID = 5;
  void clear_bulletturretid();
  static const int kBulletTurretIDFieldNumber = 5;
  ::google::protobuf::int32 bulletturretid() const;
  void set_bulletturretid(::google::protobuf::int32 value);

  // optional int32 bulletConfigID = 6;
  void clear_bulletconfigid();
  static const int kBulletConfigIDFieldNumber = 6;
  ::google::protobuf::int32 bulletconfigid() const;
  void set_bulletconfigid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gt_msg.EstablishBulletRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 frame_;
  ::google::protobuf::int32 lockfishid_;
  ::gt_msg::Vec2* terminal_;
  ::google::protobuf::int32 bullettype_;
  ::google::protobuf::int32 bulletturretid_;
  ::google::protobuf::int32 bulletconfigid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static EstablishBulletRequest* default_instance_;
};
// -------------------------------------------------------------------

class CreateBullet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.CreateBullet) */ {
 public:
  CreateBullet();
  virtual ~CreateBullet();

  CreateBullet(const CreateBullet& from);

  inline CreateBullet& operator=(const CreateBullet& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateBullet& default_instance();

  void Swap(CreateBullet* other);

  // implements Message ----------------------------------------------

  inline CreateBullet* New() const { return New(NULL); }

  CreateBullet* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateBullet& from);
  void MergeFrom(const CreateBullet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CreateBullet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 seatId = 1;
  void clear_seatid();
  static const int kSeatIdFieldNumber = 1;
  ::google::protobuf::int32 seatid() const;
  void set_seatid(::google::protobuf::int32 value);

  // optional int32 speed = 2;
  void clear_speed();
  static const int kSpeedFieldNumber = 2;
  ::google::protobuf::int32 speed() const;
  void set_speed(::google::protobuf::int32 value);

  // optional int32 frame = 3;
  void clear_frame();
  static const int kFrameFieldNumber = 3;
  ::google::protobuf::int32 frame() const;
  void set_frame(::google::protobuf::int32 value);

  // optional .gt_msg.Vec2 terminal = 4;
  bool has_terminal() const;
  void clear_terminal();
  static const int kTerminalFieldNumber = 4;
  const ::gt_msg::Vec2& terminal() const;
  ::gt_msg::Vec2* mutable_terminal();
  ::gt_msg::Vec2* release_terminal();
  void set_allocated_terminal(::gt_msg::Vec2* terminal);

  // optional int32 lockFishId = 5;
  void clear_lockfishid();
  static const int kLockFishIdFieldNumber = 5;
  ::google::protobuf::int32 lockfishid() const;
  void set_lockfishid(::google::protobuf::int32 value);

  // optional int32 bulletType = 6;
  void clear_bullettype();
  static const int kBulletTypeFieldNumber = 6;
  ::google::protobuf::int32 bullettype() const;
  void set_bullettype(::google::protobuf::int32 value);

  // optional int64 scoreNow = 7;
  void clear_scorenow();
  static const int kScoreNowFieldNumber = 7;
  ::google::protobuf::int64 scorenow() const;
  void set_scorenow(::google::protobuf::int64 value);

  // optional int32 bulletTurretID = 8;
  void clear_bulletturretid();
  static const int kBulletTurretIDFieldNumber = 8;
  ::google::protobuf::int32 bulletturretid() const;
  void set_bulletturretid(::google::protobuf::int32 value);

  // optional int32 bulletConfigID = 9;
  void clear_bulletconfigid();
  static const int kBulletConfigIDFieldNumber = 9;
  ::google::protobuf::int32 bulletconfigid() const;
  void set_bulletconfigid(::google::protobuf::int32 value);

  // optional int32 UserID = 10;
  void clear_userid();
  static const int kUserIDFieldNumber = 10;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional int32 BulletRemain = 11;
  void clear_bulletremain();
  static const int kBulletRemainFieldNumber = 11;
  ::google::protobuf::int32 bulletremain() const;
  void set_bulletremain(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gt_msg.CreateBullet)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 seatid_;
  ::google::protobuf::int32 speed_;
  ::gt_msg::Vec2* terminal_;
  ::google::protobuf::int32 frame_;
  ::google::protobuf::int32 lockfishid_;
  ::google::protobuf::int64 scorenow_;
  ::google::protobuf::int32 bullettype_;
  ::google::protobuf::int32 bulletturretid_;
  ::google::protobuf::int32 bulletconfigid_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 bulletremain_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static CreateBullet* default_instance_;
};
// -------------------------------------------------------------------

class FreezeFish : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.FreezeFish) */ {
 public:
  FreezeFish();
  virtual ~FreezeFish();

  FreezeFish(const FreezeFish& from);

  inline FreezeFish& operator=(const FreezeFish& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FreezeFish& default_instance();

  void Swap(FreezeFish* other);

  // implements Message ----------------------------------------------

  inline FreezeFish* New() const { return New(NULL); }

  FreezeFish* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FreezeFish& from);
  void MergeFrom(const FreezeFish& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FreezeFish* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 frame = 1;
  void clear_frame();
  static const int kFrameFieldNumber = 1;
  ::google::protobuf::int32 frame() const;
  void set_frame(::google::protobuf::int32 value);

  // optional int32 duration = 2;
  void clear_duration();
  static const int kDurationFieldNumber = 2;
  ::google::protobuf::int32 duration() const;
  void set_duration(::google::protobuf::int32 value);

  // repeated int32 fishList = 3;
  int fishlist_size() const;
  void clear_fishlist();
  static const int kFishListFieldNumber = 3;
  ::google::protobuf::int32 fishlist(int index) const;
  void set_fishlist(int index, ::google::protobuf::int32 value);
  void add_fishlist(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      fishlist() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_fishlist();

  // optional bool showEffect = 4;
  void clear_showeffect();
  static const int kShowEffectFieldNumber = 4;
  bool showeffect() const;
  void set_showeffect(bool value);

  // @@protoc_insertion_point(class_scope:gt_msg.FreezeFish)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 frame_;
  ::google::protobuf::int32 duration_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > fishlist_;
  mutable int _fishlist_cached_byte_size_;
  bool showeffect_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static FreezeFish* default_instance_;
};
// -------------------------------------------------------------------

class FastEscape : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.FastEscape) */ {
 public:
  FastEscape();
  virtual ~FastEscape();

  FastEscape(const FastEscape& from);

  inline FastEscape& operator=(const FastEscape& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FastEscape& default_instance();

  void Swap(FastEscape* other);

  // implements Message ----------------------------------------------

  inline FastEscape* New() const { return New(NULL); }

  FastEscape* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FastEscape& from);
  void MergeFrom(const FastEscape& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FastEscape* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 frame = 1;
  void clear_frame();
  static const int kFrameFieldNumber = 1;
  ::google::protobuf::int32 frame() const;
  void set_frame(::google::protobuf::int32 value);

  // optional float speed = 2;
  void clear_speed();
  static const int kSpeedFieldNumber = 2;
  float speed() const;
  void set_speed(float value);

  // optional int32 duration = 3;
  void clear_duration();
  static const int kDurationFieldNumber = 3;
  ::google::protobuf::int32 duration() const;
  void set_duration(::google::protobuf::int32 value);

  // repeated int32 fishList = 4;
  int fishlist_size() const;
  void clear_fishlist();
  static const int kFishListFieldNumber = 4;
  ::google::protobuf::int32 fishlist(int index) const;
  void set_fishlist(int index, ::google::protobuf::int32 value);
  void add_fishlist(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      fishlist() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_fishlist();

  // optional bool showEffect = 5;
  void clear_showeffect();
  static const int kShowEffectFieldNumber = 5;
  bool showeffect() const;
  void set_showeffect(bool value);

  // @@protoc_insertion_point(class_scope:gt_msg.FastEscape)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 frame_;
  float speed_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > fishlist_;
  mutable int _fishlist_cached_byte_size_;
  ::google::protobuf::int32 duration_;
  bool showeffect_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static FastEscape* default_instance_;
};
// -------------------------------------------------------------------

class FishAppearNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.FishAppearNotify) */ {
 public:
  FishAppearNotify();
  virtual ~FishAppearNotify();

  FishAppearNotify(const FishAppearNotify& from);

  inline FishAppearNotify& operator=(const FishAppearNotify& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FishAppearNotify& default_instance();

  void Swap(FishAppearNotify* other);

  // implements Message ----------------------------------------------

  inline FishAppearNotify* New() const { return New(NULL); }

  FishAppearNotify* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FishAppearNotify& from);
  void MergeFrom(const FishAppearNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FishAppearNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:gt_msg.FishAppearNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static FishAppearNotify* default_instance_;
};
// -------------------------------------------------------------------

class CastSkillResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.CastSkillResponse) */ {
 public:
  CastSkillResponse();
  virtual ~CastSkillResponse();

  CastSkillResponse(const CastSkillResponse& from);

  inline CastSkillResponse& operator=(const CastSkillResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CastSkillResponse& default_instance();

  void Swap(CastSkillResponse* other);

  // implements Message ----------------------------------------------

  inline CastSkillResponse* New() const { return New(NULL); }

  CastSkillResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CastSkillResponse& from);
  void MergeFrom(const CastSkillResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CastSkillResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 skillConfigID = 1;
  void clear_skillconfigid();
  static const int kSkillConfigIDFieldNumber = 1;
  ::google::protobuf::int32 skillconfigid() const;
  void set_skillconfigid(::google::protobuf::int32 value);

  // optional int32 seatId = 2;
  void clear_seatid();
  static const int kSeatIdFieldNumber = 2;
  ::google::protobuf::int32 seatid() const;
  void set_seatid(::google::protobuf::int32 value);

  // optional int32 resultCode = 3;
  void clear_resultcode();
  static const int kResultCodeFieldNumber = 3;
  ::google::protobuf::int32 resultcode() const;
  void set_resultcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gt_msg.CastSkillResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 skillconfigid_;
  ::google::protobuf::int32 seatid_;
  ::google::protobuf::int32 resultcode_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static CastSkillResponse* default_instance_;
};
// -------------------------------------------------------------------

class UsePropResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.UsePropResponse) */ {
 public:
  UsePropResponse();
  virtual ~UsePropResponse();

  UsePropResponse(const UsePropResponse& from);

  inline UsePropResponse& operator=(const UsePropResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UsePropResponse& default_instance();

  void Swap(UsePropResponse* other);

  // implements Message ----------------------------------------------

  inline UsePropResponse* New() const { return New(NULL); }

  UsePropResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UsePropResponse& from);
  void MergeFrom(const UsePropResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UsePropResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 propConfigID = 1;
  void clear_propconfigid();
  static const int kPropConfigIDFieldNumber = 1;
  ::google::protobuf::int32 propconfigid() const;
  void set_propconfigid(::google::protobuf::int32 value);

  // optional int32 seatId = 2;
  void clear_seatid();
  static const int kSeatIdFieldNumber = 2;
  ::google::protobuf::int32 seatid() const;
  void set_seatid(::google::protobuf::int32 value);

  // optional int32 resultCode = 3;
  void clear_resultcode();
  static const int kResultCodeFieldNumber = 3;
  ::google::protobuf::int32 resultcode() const;
  void set_resultcode(::google::protobuf::int32 value);

  // optional string discribe = 4;
  void clear_discribe();
  static const int kDiscribeFieldNumber = 4;
  const ::std::string& discribe() const;
  void set_discribe(const ::std::string& value);
  void set_discribe(const char* value);
  void set_discribe(const char* value, size_t size);
  ::std::string* mutable_discribe();
  ::std::string* release_discribe();
  void set_allocated_discribe(::std::string* discribe);

  // @@protoc_insertion_point(class_scope:gt_msg.UsePropResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 propconfigid_;
  ::google::protobuf::int32 seatid_;
  ::google::protobuf::internal::ArenaStringPtr discribe_;
  ::google::protobuf::int32 resultcode_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static UsePropResponse* default_instance_;
};
// -------------------------------------------------------------------

class NowAngerResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.NowAngerResponse) */ {
 public:
  NowAngerResponse();
  virtual ~NowAngerResponse();

  NowAngerResponse(const NowAngerResponse& from);

  inline NowAngerResponse& operator=(const NowAngerResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NowAngerResponse& default_instance();

  void Swap(NowAngerResponse* other);

  // implements Message ----------------------------------------------

  inline NowAngerResponse* New() const { return New(NULL); }

  NowAngerResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NowAngerResponse& from);
  void MergeFrom(const NowAngerResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NowAngerResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 angerValue = 1;
  void clear_angervalue();
  static const int kAngerValueFieldNumber = 1;
  ::google::protobuf::int32 angervalue() const;
  void set_angervalue(::google::protobuf::int32 value);

  // optional int32 seatId = 2;
  void clear_seatid();
  static const int kSeatIdFieldNumber = 2;
  ::google::protobuf::int32 seatid() const;
  void set_seatid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gt_msg.NowAngerResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 angervalue_;
  ::google::protobuf::int32 seatid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static NowAngerResponse* default_instance_;
};
// -------------------------------------------------------------------

class BulletSpeedUp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.BulletSpeedUp) */ {
 public:
  BulletSpeedUp();
  virtual ~BulletSpeedUp();

  BulletSpeedUp(const BulletSpeedUp& from);

  inline BulletSpeedUp& operator=(const BulletSpeedUp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BulletSpeedUp& default_instance();

  void Swap(BulletSpeedUp* other);

  // implements Message ----------------------------------------------

  inline BulletSpeedUp* New() const { return New(NULL); }

  BulletSpeedUp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BulletSpeedUp& from);
  void MergeFrom(const BulletSpeedUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BulletSpeedUp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 frame = 1;
  void clear_frame();
  static const int kFrameFieldNumber = 1;
  ::google::protobuf::int32 frame() const;
  void set_frame(::google::protobuf::int32 value);

  // optional int32 duration = 2;
  void clear_duration();
  static const int kDurationFieldNumber = 2;
  ::google::protobuf::int32 duration() const;
  void set_duration(::google::protobuf::int32 value);

  // optional float scale = 3;
  void clear_scale();
  static const int kScaleFieldNumber = 3;
  float scale() const;
  void set_scale(float value);

  // @@protoc_insertion_point(class_scope:gt_msg.BulletSpeedUp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 frame_;
  ::google::protobuf::int32 duration_;
  float scale_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static BulletSpeedUp* default_instance_;
};
// -------------------------------------------------------------------

class ChangeBatteryByMyself : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.ChangeBatteryByMyself) */ {
 public:
  ChangeBatteryByMyself();
  virtual ~ChangeBatteryByMyself();

  ChangeBatteryByMyself(const ChangeBatteryByMyself& from);

  inline ChangeBatteryByMyself& operator=(const ChangeBatteryByMyself& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeBatteryByMyself& default_instance();

  void Swap(ChangeBatteryByMyself* other);

  // implements Message ----------------------------------------------

  inline ChangeBatteryByMyself* New() const { return New(NULL); }

  ChangeBatteryByMyself* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChangeBatteryByMyself& from);
  void MergeFrom(const ChangeBatteryByMyself& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ChangeBatteryByMyself* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 batteryIndex = 2;
  void clear_batteryindex();
  static const int kBatteryIndexFieldNumber = 2;
  ::google::protobuf::int32 batteryindex() const;
  void set_batteryindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gt_msg.ChangeBatteryByMyself)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 batteryindex_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static ChangeBatteryByMyself* default_instance_;
};
// -------------------------------------------------------------------

class ChangeBatteryByOhter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.ChangeBatteryByOhter) */ {
 public:
  ChangeBatteryByOhter();
  virtual ~ChangeBatteryByOhter();

  ChangeBatteryByOhter(const ChangeBatteryByOhter& from);

  inline ChangeBatteryByOhter& operator=(const ChangeBatteryByOhter& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeBatteryByOhter& default_instance();

  void Swap(ChangeBatteryByOhter* other);

  // implements Message ----------------------------------------------

  inline ChangeBatteryByOhter* New() const { return New(NULL); }

  ChangeBatteryByOhter* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChangeBatteryByOhter& from);
  void MergeFrom(const ChangeBatteryByOhter& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ChangeBatteryByOhter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 seatId = 1;
  void clear_seatid();
  static const int kSeatIdFieldNumber = 1;
  ::google::protobuf::int32 seatid() const;
  void set_seatid(::google::protobuf::int32 value);

  // optional int32 batteryIndex = 2;
  void clear_batteryindex();
  static const int kBatteryIndexFieldNumber = 2;
  ::google::protobuf::int32 batteryindex() const;
  void set_batteryindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gt_msg.ChangeBatteryByOhter)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 seatid_;
  ::google::protobuf::int32 batteryindex_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static ChangeBatteryByOhter* default_instance_;
};
// -------------------------------------------------------------------

class ForceExitTableRequestfish3d : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.ForceExitTableRequestfish3d) */ {
 public:
  ForceExitTableRequestfish3d();
  virtual ~ForceExitTableRequestfish3d();

  ForceExitTableRequestfish3d(const ForceExitTableRequestfish3d& from);

  inline ForceExitTableRequestfish3d& operator=(const ForceExitTableRequestfish3d& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ForceExitTableRequestfish3d& default_instance();

  void Swap(ForceExitTableRequestfish3d* other);

  // implements Message ----------------------------------------------

  inline ForceExitTableRequestfish3d* New() const { return New(NULL); }

  ForceExitTableRequestfish3d* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ForceExitTableRequestfish3d& from);
  void MergeFrom(const ForceExitTableRequestfish3d& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ForceExitTableRequestfish3d* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:gt_msg.ForceExitTableRequestfish3d)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static ForceExitTableRequestfish3d* default_instance_;
};
// -------------------------------------------------------------------

class ForceExitTableResponsefish3d : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.ForceExitTableResponsefish3d) */ {
 public:
  ForceExitTableResponsefish3d();
  virtual ~ForceExitTableResponsefish3d();

  ForceExitTableResponsefish3d(const ForceExitTableResponsefish3d& from);

  inline ForceExitTableResponsefish3d& operator=(const ForceExitTableResponsefish3d& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ForceExitTableResponsefish3d& default_instance();

  void Swap(ForceExitTableResponsefish3d* other);

  // implements Message ----------------------------------------------

  inline ForceExitTableResponsefish3d* New() const { return New(NULL); }

  ForceExitTableResponsefish3d* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ForceExitTableResponsefish3d& from);
  void MergeFrom(const ForceExitTableResponsefish3d& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ForceExitTableResponsefish3d* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 resultCode = 1;
  void clear_resultcode();
  static const int kResultCodeFieldNumber = 1;
  ::google::protobuf::int32 resultcode() const;
  void set_resultcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gt_msg.ForceExitTableResponsefish3d)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 resultcode_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static ForceExitTableResponsefish3d* default_instance_;
};
// -------------------------------------------------------------------

class NewTaskResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.NewTaskResponse) */ {
 public:
  NewTaskResponse();
  virtual ~NewTaskResponse();

  NewTaskResponse(const NewTaskResponse& from);

  inline NewTaskResponse& operator=(const NewTaskResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NewTaskResponse& default_instance();

  void Swap(NewTaskResponse* other);

  // implements Message ----------------------------------------------

  inline NewTaskResponse* New() const { return New(NULL); }

  NewTaskResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NewTaskResponse& from);
  void MergeFrom(const NewTaskResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NewTaskResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 taskId = 1;
  void clear_taskid();
  static const int kTaskIdFieldNumber = 1;
  ::google::protobuf::int32 taskid() const;
  void set_taskid(::google::protobuf::int32 value);

  // optional int32 fishType = 2;
  void clear_fishtype();
  static const int kFishTypeFieldNumber = 2;
  ::google::protobuf::int32 fishtype() const;
  void set_fishtype(::google::protobuf::int32 value);

  // optional int32 fishCount = 3;
  void clear_fishcount();
  static const int kFishCountFieldNumber = 3;
  ::google::protobuf::int32 fishcount() const;
  void set_fishcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gt_msg.NewTaskResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 taskid_;
  ::google::protobuf::int32 fishtype_;
  ::google::protobuf::int32 fishcount_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static NewTaskResponse* default_instance_;
};
// -------------------------------------------------------------------

class TaskProgressResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.TaskProgressResponse) */ {
 public:
  TaskProgressResponse();
  virtual ~TaskProgressResponse();

  TaskProgressResponse(const TaskProgressResponse& from);

  inline TaskProgressResponse& operator=(const TaskProgressResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TaskProgressResponse& default_instance();

  void Swap(TaskProgressResponse* other);

  // implements Message ----------------------------------------------

  inline TaskProgressResponse* New() const { return New(NULL); }

  TaskProgressResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TaskProgressResponse& from);
  void MergeFrom(const TaskProgressResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TaskProgressResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 taskId = 1;
  void clear_taskid();
  static const int kTaskIdFieldNumber = 1;
  ::google::protobuf::int32 taskid() const;
  void set_taskid(::google::protobuf::int32 value);

  // optional int32 fishCount = 2;
  void clear_fishcount();
  static const int kFishCountFieldNumber = 2;
  ::google::protobuf::int32 fishcount() const;
  void set_fishcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gt_msg.TaskProgressResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 taskid_;
  ::google::protobuf::int32 fishcount_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static TaskProgressResponse* default_instance_;
};
// -------------------------------------------------------------------

class TaskFinishResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.TaskFinishResponse) */ {
 public:
  TaskFinishResponse();
  virtual ~TaskFinishResponse();

  TaskFinishResponse(const TaskFinishResponse& from);

  inline TaskFinishResponse& operator=(const TaskFinishResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TaskFinishResponse& default_instance();

  void Swap(TaskFinishResponse* other);

  // implements Message ----------------------------------------------

  inline TaskFinishResponse* New() const { return New(NULL); }

  TaskFinishResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TaskFinishResponse& from);
  void MergeFrom(const TaskFinishResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TaskFinishResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 taskId = 1;
  void clear_taskid();
  static const int kTaskIdFieldNumber = 1;
  ::google::protobuf::int32 taskid() const;
  void set_taskid(::google::protobuf::int32 value);

  // optional int64 getScore = 2;
  void clear_getscore();
  static const int kGetScoreFieldNumber = 2;
  ::google::protobuf::int64 getscore() const;
  void set_getscore(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:gt_msg.TaskFinishResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 getscore_;
  ::google::protobuf::int32 taskid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static TaskFinishResponse* default_instance_;
};
// -------------------------------------------------------------------

class TakeRedBagRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.TakeRedBagRequest) */ {
 public:
  TakeRedBagRequest();
  virtual ~TakeRedBagRequest();

  TakeRedBagRequest(const TakeRedBagRequest& from);

  inline TakeRedBagRequest& operator=(const TakeRedBagRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TakeRedBagRequest& default_instance();

  void Swap(TakeRedBagRequest* other);

  // implements Message ----------------------------------------------

  inline TakeRedBagRequest* New() const { return New(NULL); }

  TakeRedBagRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TakeRedBagRequest& from);
  void MergeFrom(const TakeRedBagRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TakeRedBagRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Score = 1;
  void clear_score();
  static const int kScoreFieldNumber = 1;
  ::google::protobuf::int32 score() const;
  void set_score(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gt_msg.TakeRedBagRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 score_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static TakeRedBagRequest* default_instance_;
};
// -------------------------------------------------------------------

class TakeRedBagResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.TakeRedBagResponse) */ {
 public:
  TakeRedBagResponse();
  virtual ~TakeRedBagResponse();

  TakeRedBagResponse(const TakeRedBagResponse& from);

  inline TakeRedBagResponse& operator=(const TakeRedBagResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TakeRedBagResponse& default_instance();

  void Swap(TakeRedBagResponse* other);

  // implements Message ----------------------------------------------

  inline TakeRedBagResponse* New() const { return New(NULL); }

  TakeRedBagResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TakeRedBagResponse& from);
  void MergeFrom(const TakeRedBagResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TakeRedBagResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 resultCode = 1;
  void clear_resultcode();
  static const int kResultCodeFieldNumber = 1;
  ::google::protobuf::int32 resultcode() const;
  void set_resultcode(::google::protobuf::int32 value);

  // optional string resultMessage = 2;
  void clear_resultmessage();
  static const int kResultMessageFieldNumber = 2;
  const ::std::string& resultmessage() const;
  void set_resultmessage(const ::std::string& value);
  void set_resultmessage(const char* value);
  void set_resultmessage(const char* value, size_t size);
  ::std::string* mutable_resultmessage();
  ::std::string* release_resultmessage();
  void set_allocated_resultmessage(::std::string* resultmessage);

  // optional int32 RedBagScore = 3;
  void clear_redbagscore();
  static const int kRedBagScoreFieldNumber = 3;
  ::google::protobuf::int32 redbagscore() const;
  void set_redbagscore(::google::protobuf::int32 value);

  // optional string Ticket = 4;
  void clear_ticket();
  static const int kTicketFieldNumber = 4;
  const ::std::string& ticket() const;
  void set_ticket(const ::std::string& value);
  void set_ticket(const char* value);
  void set_ticket(const char* value, size_t size);
  ::std::string* mutable_ticket();
  ::std::string* release_ticket();
  void set_allocated_ticket(::std::string* ticket);

  // @@protoc_insertion_point(class_scope:gt_msg.TakeRedBagResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr resultmessage_;
  ::google::protobuf::int32 resultcode_;
  ::google::protobuf::int32 redbagscore_;
  ::google::protobuf::internal::ArenaStringPtr ticket_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static TakeRedBagResponse* default_instance_;
};
// -------------------------------------------------------------------

class UpdateRedBag : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.UpdateRedBag) */ {
 public:
  UpdateRedBag();
  virtual ~UpdateRedBag();

  UpdateRedBag(const UpdateRedBag& from);

  inline UpdateRedBag& operator=(const UpdateRedBag& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateRedBag& default_instance();

  void Swap(UpdateRedBag* other);

  // implements Message ----------------------------------------------

  inline UpdateRedBag* New() const { return New(NULL); }

  UpdateRedBag* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateRedBag& from);
  void MergeFrom(const UpdateRedBag& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UpdateRedBag* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RemainRedBagScore = 1;
  void clear_remainredbagscore();
  static const int kRemainRedBagScoreFieldNumber = 1;
  ::google::protobuf::int32 remainredbagscore() const;
  void set_remainredbagscore(::google::protobuf::int32 value);

  // optional int32 PreviousRedBagScore = 2;
  void clear_previousredbagscore();
  static const int kPreviousRedBagScoreFieldNumber = 2;
  ::google::protobuf::int32 previousredbagscore() const;
  void set_previousredbagscore(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gt_msg.UpdateRedBag)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 remainredbagscore_;
  ::google::protobuf::int32 previousredbagscore_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static UpdateRedBag* default_instance_;
};
// -------------------------------------------------------------------

class UserTakeScoreRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.UserTakeScoreRequest) */ {
 public:
  UserTakeScoreRequest();
  virtual ~UserTakeScoreRequest();

  UserTakeScoreRequest(const UserTakeScoreRequest& from);

  inline UserTakeScoreRequest& operator=(const UserTakeScoreRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserTakeScoreRequest& default_instance();

  void Swap(UserTakeScoreRequest* other);

  // implements Message ----------------------------------------------

  inline UserTakeScoreRequest* New() const { return New(NULL); }

  UserTakeScoreRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserTakeScoreRequest& from);
  void MergeFrom(const UserTakeScoreRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UserTakeScoreRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 Score = 1;
  void clear_score();
  static const int kScoreFieldNumber = 1;
  ::google::protobuf::int64 score() const;
  void set_score(::google::protobuf::int64 value);

  // optional string PassWord = 2;
  void clear_password();
  static const int kPassWordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:gt_msg.UserTakeScoreRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 score_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static UserTakeScoreRequest* default_instance_;
};
// -------------------------------------------------------------------

class UserTakeScoreRespone : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.UserTakeScoreRespone) */ {
 public:
  UserTakeScoreRespone();
  virtual ~UserTakeScoreRespone();

  UserTakeScoreRespone(const UserTakeScoreRespone& from);

  inline UserTakeScoreRespone& operator=(const UserTakeScoreRespone& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserTakeScoreRespone& default_instance();

  void Swap(UserTakeScoreRespone* other);

  // implements Message ----------------------------------------------

  inline UserTakeScoreRespone* New() const { return New(NULL); }

  UserTakeScoreRespone* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserTakeScoreRespone& from);
  void MergeFrom(const UserTakeScoreRespone& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UserTakeScoreRespone* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 resultCode = 1;
  void clear_resultcode();
  static const int kResultCodeFieldNumber = 1;
  ::google::protobuf::int32 resultcode() const;
  void set_resultcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gt_msg.UserTakeScoreRespone)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 resultcode_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static UserTakeScoreRespone* default_instance_;
};
// -------------------------------------------------------------------

class TakeBountyRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.TakeBountyRequest) */ {
 public:
  TakeBountyRequest();
  virtual ~TakeBountyRequest();

  TakeBountyRequest(const TakeBountyRequest& from);

  inline TakeBountyRequest& operator=(const TakeBountyRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TakeBountyRequest& default_instance();

  void Swap(TakeBountyRequest* other);

  // implements Message ----------------------------------------------

  inline TakeBountyRequest* New() const { return New(NULL); }

  TakeBountyRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TakeBountyRequest& from);
  void MergeFrom(const TakeBountyRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TakeBountyRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:gt_msg.TakeBountyRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static TakeBountyRequest* default_instance_;
};
// -------------------------------------------------------------------

class TakeBountyResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.TakeBountyResponse) */ {
 public:
  TakeBountyResponse();
  virtual ~TakeBountyResponse();

  TakeBountyResponse(const TakeBountyResponse& from);

  inline TakeBountyResponse& operator=(const TakeBountyResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TakeBountyResponse& default_instance();

  void Swap(TakeBountyResponse* other);

  // implements Message ----------------------------------------------

  inline TakeBountyResponse* New() const { return New(NULL); }

  TakeBountyResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TakeBountyResponse& from);
  void MergeFrom(const TakeBountyResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TakeBountyResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 resultCode = 1;
  void clear_resultcode();
  static const int kResultCodeFieldNumber = 1;
  ::google::protobuf::int32 resultcode() const;
  void set_resultcode(::google::protobuf::int32 value);

  // optional string resultMessage = 2;
  void clear_resultmessage();
  static const int kResultMessageFieldNumber = 2;
  const ::std::string& resultmessage() const;
  void set_resultmessage(const ::std::string& value);
  void set_resultmessage(const char* value);
  void set_resultmessage(const char* value, size_t size);
  ::std::string* mutable_resultmessage();
  ::std::string* release_resultmessage();
  void set_allocated_resultmessage(::std::string* resultmessage);

  // optional int64 Score = 3;
  void clear_score();
  static const int kScoreFieldNumber = 3;
  ::google::protobuf::int64 score() const;
  void set_score(::google::protobuf::int64 value);

  // optional int32 RemainTime = 4;
  void clear_remaintime();
  static const int kRemainTimeFieldNumber = 4;
  ::google::protobuf::int32 remaintime() const;
  void set_remaintime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gt_msg.TakeBountyResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr resultmessage_;
  ::google::protobuf::int32 resultcode_;
  ::google::protobuf::int32 remaintime_;
  ::google::protobuf::int64 score_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static TakeBountyResponse* default_instance_;
};
// -------------------------------------------------------------------

class SetBounty : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.SetBounty) */ {
 public:
  SetBounty();
  virtual ~SetBounty();

  SetBounty(const SetBounty& from);

  inline SetBounty& operator=(const SetBounty& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetBounty& default_instance();

  void Swap(SetBounty* other);

  // implements Message ----------------------------------------------

  inline SetBounty* New() const { return New(NULL); }

  SetBounty* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetBounty& from);
  void MergeFrom(const SetBounty& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SetBounty* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 BountyIndex = 1;
  void clear_bountyindex();
  static const int kBountyIndexFieldNumber = 1;
  ::google::protobuf::int32 bountyindex() const;
  void set_bountyindex(::google::protobuf::int32 value);

  // optional int32 BountyTimeLeft = 2;
  void clear_bountytimeleft();
  static const int kBountyTimeLeftFieldNumber = 2;
  ::google::protobuf::int32 bountytimeleft() const;
  void set_bountytimeleft(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gt_msg.SetBounty)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 bountyindex_;
  ::google::protobuf::int32 bountytimeleft_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static SetBounty* default_instance_;
};
// -------------------------------------------------------------------

class BaoFenNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.BaoFenNotify) */ {
 public:
  BaoFenNotify();
  virtual ~BaoFenNotify();

  BaoFenNotify(const BaoFenNotify& from);

  inline BaoFenNotify& operator=(const BaoFenNotify& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BaoFenNotify& default_instance();

  void Swap(BaoFenNotify* other);

  // implements Message ----------------------------------------------

  inline BaoFenNotify* New() const { return New(NULL); }

  BaoFenNotify* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BaoFenNotify& from);
  void MergeFrom(const BaoFenNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BaoFenNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 Score = 1;
  void clear_score();
  static const int kScoreFieldNumber = 1;
  ::google::protobuf::int64 score() const;
  void set_score(::google::protobuf::int64 value);

  // optional int32 Multiple = 2;
  void clear_multiple();
  static const int kMultipleFieldNumber = 2;
  ::google::protobuf::int32 multiple() const;
  void set_multiple(::google::protobuf::int32 value);

  // optional string FisnName = 3;
  void clear_fisnname();
  static const int kFisnNameFieldNumber = 3;
  const ::std::string& fisnname() const;
  void set_fisnname(const ::std::string& value);
  void set_fisnname(const char* value);
  void set_fisnname(const char* value, size_t size);
  ::std::string* mutable_fisnname();
  ::std::string* release_fisnname();
  void set_allocated_fisnname(::std::string* fisnname);

  // optional int32 Reword = 4;
  void clear_reword();
  static const int kRewordFieldNumber = 4;
  ::google::protobuf::int32 reword() const;
  void set_reword(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gt_msg.BaoFenNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 score_;
  ::google::protobuf::internal::ArenaStringPtr fisnname_;
  ::google::protobuf::int32 multiple_;
  ::google::protobuf::int32 reword_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static BaoFenNotify* default_instance_;
};
// -------------------------------------------------------------------

class BaoFenTake : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.BaoFenTake) */ {
 public:
  BaoFenTake();
  virtual ~BaoFenTake();

  BaoFenTake(const BaoFenTake& from);

  inline BaoFenTake& operator=(const BaoFenTake& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BaoFenTake& default_instance();

  void Swap(BaoFenTake* other);

  // implements Message ----------------------------------------------

  inline BaoFenTake* New() const { return New(NULL); }

  BaoFenTake* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BaoFenTake& from);
  void MergeFrom(const BaoFenTake& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BaoFenTake* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:gt_msg.BaoFenTake)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static BaoFenTake* default_instance_;
};
// -------------------------------------------------------------------

class BaoFenReward : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.BaoFenReward) */ {
 public:
  BaoFenReward();
  virtual ~BaoFenReward();

  BaoFenReward(const BaoFenReward& from);

  inline BaoFenReward& operator=(const BaoFenReward& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BaoFenReward& default_instance();

  void Swap(BaoFenReward* other);

  // implements Message ----------------------------------------------

  inline BaoFenReward* New() const { return New(NULL); }

  BaoFenReward* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BaoFenReward& from);
  void MergeFrom(const BaoFenReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BaoFenReward* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 Score = 1;
  void clear_score();
  static const int kScoreFieldNumber = 1;
  ::google::protobuf::int64 score() const;
  void set_score(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:gt_msg.BaoFenReward)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 score_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static BaoFenReward* default_instance_;
};
// -------------------------------------------------------------------

class FishInformationToAI : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.FishInformationToAI) */ {
 public:
  FishInformationToAI();
  virtual ~FishInformationToAI();

  FishInformationToAI(const FishInformationToAI& from);

  inline FishInformationToAI& operator=(const FishInformationToAI& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FishInformationToAI& default_instance();

  void Swap(FishInformationToAI* other);

  // implements Message ----------------------------------------------

  inline FishInformationToAI* New() const { return New(NULL); }

  FishInformationToAI* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FishInformationToAI& from);
  void MergeFrom(const FishInformationToAI& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FishInformationToAI* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Frame = 1;
  void clear_frame();
  static const int kFrameFieldNumber = 1;
  ::google::protobuf::int32 frame() const;
  void set_frame(::google::protobuf::int32 value);

  // repeated int32 AreasScore = 2;
  int areasscore_size() const;
  void clear_areasscore();
  static const int kAreasScoreFieldNumber = 2;
  ::google::protobuf::int32 areasscore(int index) const;
  void set_areasscore(int index, ::google::protobuf::int32 value);
  void add_areasscore(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      areasscore() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_areasscore();

  // @@protoc_insertion_point(class_scope:gt_msg.FishInformationToAI)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > areasscore_;
  mutable int _areasscore_cached_byte_size_;
  ::google::protobuf::int32 frame_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static FishInformationToAI* default_instance_;
};
// -------------------------------------------------------------------

class RedFishAppear : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.RedFishAppear) */ {
 public:
  RedFishAppear();
  virtual ~RedFishAppear();

  RedFishAppear(const RedFishAppear& from);

  inline RedFishAppear& operator=(const RedFishAppear& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RedFishAppear& default_instance();

  void Swap(RedFishAppear* other);

  // implements Message ----------------------------------------------

  inline RedFishAppear* New() const { return New(NULL); }

  RedFishAppear* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RedFishAppear& from);
  void MergeFrom(const RedFishAppear& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RedFishAppear* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 fishId = 1;
  void clear_fishid();
  static const int kFishIdFieldNumber = 1;
  ::google::protobuf::int32 fishid() const;
  void set_fishid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gt_msg.RedFishAppear)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 fishid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static RedFishAppear* default_instance_;
};
// -------------------------------------------------------------------

class RedFishDisappear : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.RedFishDisappear) */ {
 public:
  RedFishDisappear();
  virtual ~RedFishDisappear();

  RedFishDisappear(const RedFishDisappear& from);

  inline RedFishDisappear& operator=(const RedFishDisappear& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RedFishDisappear& default_instance();

  void Swap(RedFishDisappear* other);

  // implements Message ----------------------------------------------

  inline RedFishDisappear* New() const { return New(NULL); }

  RedFishDisappear* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RedFishDisappear& from);
  void MergeFrom(const RedFishDisappear& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RedFishDisappear* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 fishId = 1;
  void clear_fishid();
  static const int kFishIdFieldNumber = 1;
  ::google::protobuf::int32 fishid() const;
  void set_fishid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gt_msg.RedFishDisappear)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 fishid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static RedFishDisappear* default_instance_;
};
// -------------------------------------------------------------------

class BigFishAppear : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.BigFishAppear) */ {
 public:
  BigFishAppear();
  virtual ~BigFishAppear();

  BigFishAppear(const BigFishAppear& from);

  inline BigFishAppear& operator=(const BigFishAppear& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BigFishAppear& default_instance();

  void Swap(BigFishAppear* other);

  // implements Message ----------------------------------------------

  inline BigFishAppear* New() const { return New(NULL); }

  BigFishAppear* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BigFishAppear& from);
  void MergeFrom(const BigFishAppear& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BigFishAppear* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 fishId = 1;
  void clear_fishid();
  static const int kFishIdFieldNumber = 1;
  ::google::protobuf::int32 fishid() const;
  void set_fishid(::google::protobuf::int32 value);

  // optional int32 fishType = 2;
  void clear_fishtype();
  static const int kFishTypeFieldNumber = 2;
  ::google::protobuf::int32 fishtype() const;
  void set_fishtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gt_msg.BigFishAppear)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 fishid_;
  ::google::protobuf::int32 fishtype_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static BigFishAppear* default_instance_;
};
// -------------------------------------------------------------------

class BigFishDisappear : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.BigFishDisappear) */ {
 public:
  BigFishDisappear();
  virtual ~BigFishDisappear();

  BigFishDisappear(const BigFishDisappear& from);

  inline BigFishDisappear& operator=(const BigFishDisappear& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BigFishDisappear& default_instance();

  void Swap(BigFishDisappear* other);

  // implements Message ----------------------------------------------

  inline BigFishDisappear* New() const { return New(NULL); }

  BigFishDisappear* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BigFishDisappear& from);
  void MergeFrom(const BigFishDisappear& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BigFishDisappear* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 fishId = 1;
  void clear_fishid();
  static const int kFishIdFieldNumber = 1;
  ::google::protobuf::int32 fishid() const;
  void set_fishid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gt_msg.BigFishDisappear)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 fishid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static BigFishDisappear* default_instance_;
};
// -------------------------------------------------------------------

class AIHeartBeat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.AIHeartBeat) */ {
 public:
  AIHeartBeat();
  virtual ~AIHeartBeat();

  AIHeartBeat(const AIHeartBeat& from);

  inline AIHeartBeat& operator=(const AIHeartBeat& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AIHeartBeat& default_instance();

  void Swap(AIHeartBeat* other);

  // implements Message ----------------------------------------------

  inline AIHeartBeat* New() const { return New(NULL); }

  AIHeartBeat* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AIHeartBeat& from);
  void MergeFrom(const AIHeartBeat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AIHeartBeat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:gt_msg.AIHeartBeat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static AIHeartBeat* default_instance_;
};
// -------------------------------------------------------------------

class FishTest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.FishTest) */ {
 public:
  FishTest();
  virtual ~FishTest();

  FishTest(const FishTest& from);

  inline FishTest& operator=(const FishTest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FishTest& default_instance();

  void Swap(FishTest* other);

  // implements Message ----------------------------------------------

  inline FishTest* New() const { return New(NULL); }

  FishTest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FishTest& from);
  void MergeFrom(const FishTest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FishTest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 fishId = 1;
  void clear_fishid();
  static const int kFishIdFieldNumber = 1;
  ::google::protobuf::int32 fishid() const;
  void set_fishid(::google::protobuf::int32 value);

  // optional int32 fishType = 2;
  void clear_fishtype();
  static const int kFishTypeFieldNumber = 2;
  ::google::protobuf::int32 fishtype() const;
  void set_fishtype(::google::protobuf::int32 value);

  // optional .gt_msg.Vec2 position = 3;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 3;
  const ::gt_msg::Vec2& position() const;
  ::gt_msg::Vec2* mutable_position();
  ::gt_msg::Vec2* release_position();
  void set_allocated_position(::gt_msg::Vec2* position);

  // @@protoc_insertion_point(class_scope:gt_msg.FishTest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 fishid_;
  ::google::protobuf::int32 fishtype_;
  ::gt_msg::Vec2* position_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static FishTest* default_instance_;
};
// -------------------------------------------------------------------

class FishGroupTest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.FishGroupTest) */ {
 public:
  FishGroupTest();
  virtual ~FishGroupTest();

  FishGroupTest(const FishGroupTest& from);

  inline FishGroupTest& operator=(const FishGroupTest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FishGroupTest& default_instance();

  void Swap(FishGroupTest* other);

  // implements Message ----------------------------------------------

  inline FishGroupTest* New() const { return New(NULL); }

  FishGroupTest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FishGroupTest& from);
  void MergeFrom(const FishGroupTest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FishGroupTest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 frameNow = 1;
  void clear_framenow();
  static const int kFrameNowFieldNumber = 1;
  ::google::protobuf::int32 framenow() const;
  void set_framenow(::google::protobuf::int32 value);

  // repeated .gt_msg.FishTest group = 2;
  int group_size() const;
  void clear_group();
  static const int kGroupFieldNumber = 2;
  const ::gt_msg::FishTest& group(int index) const;
  ::gt_msg::FishTest* mutable_group(int index);
  ::gt_msg::FishTest* add_group();
  ::google::protobuf::RepeatedPtrField< ::gt_msg::FishTest >*
      mutable_group();
  const ::google::protobuf::RepeatedPtrField< ::gt_msg::FishTest >&
      group() const;

  // @@protoc_insertion_point(class_scope:gt_msg.FishGroupTest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::gt_msg::FishTest > group_;
  ::google::protobuf::int32 framenow_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static FishGroupTest* default_instance_;
};
// -------------------------------------------------------------------

class RedPackRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.RedPackRequest) */ {
 public:
  RedPackRequest();
  virtual ~RedPackRequest();

  RedPackRequest(const RedPackRequest& from);

  inline RedPackRequest& operator=(const RedPackRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RedPackRequest& default_instance();

  void Swap(RedPackRequest* other);

  // implements Message ----------------------------------------------

  inline RedPackRequest* New() const { return New(NULL); }

  RedPackRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RedPackRequest& from);
  void MergeFrom(const RedPackRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RedPackRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:gt_msg.RedPackRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static RedPackRequest* default_instance_;
};
// -------------------------------------------------------------------

class RedPackFromServer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.RedPackFromServer) */ {
 public:
  RedPackFromServer();
  virtual ~RedPackFromServer();

  RedPackFromServer(const RedPackFromServer& from);

  inline RedPackFromServer& operator=(const RedPackFromServer& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RedPackFromServer& default_instance();

  void Swap(RedPackFromServer* other);

  // implements Message ----------------------------------------------

  inline RedPackFromServer* New() const { return New(NULL); }

  RedPackFromServer* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RedPackFromServer& from);
  void MergeFrom(const RedPackFromServer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RedPackFromServer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 jsonType = 1;
  void clear_jsontype();
  static const int kJsonTypeFieldNumber = 1;
  ::google::protobuf::int32 jsontype() const;
  void set_jsontype(::google::protobuf::int32 value);

  // optional string jsonData = 2;
  void clear_jsondata();
  static const int kJsonDataFieldNumber = 2;
  const ::std::string& jsondata() const;
  void set_jsondata(const ::std::string& value);
  void set_jsondata(const char* value);
  void set_jsondata(const char* value, size_t size);
  ::std::string* mutable_jsondata();
  ::std::string* release_jsondata();
  void set_allocated_jsondata(::std::string* jsondata);

  // @@protoc_insertion_point(class_scope:gt_msg.RedPackFromServer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr jsondata_;
  ::google::protobuf::int32 jsontype_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static RedPackFromServer* default_instance_;
};
// -------------------------------------------------------------------

class RedPackFromClient : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.RedPackFromClient) */ {
 public:
  RedPackFromClient();
  virtual ~RedPackFromClient();

  RedPackFromClient(const RedPackFromClient& from);

  inline RedPackFromClient& operator=(const RedPackFromClient& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RedPackFromClient& default_instance();

  void Swap(RedPackFromClient* other);

  // implements Message ----------------------------------------------

  inline RedPackFromClient* New() const { return New(NULL); }

  RedPackFromClient* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RedPackFromClient& from);
  void MergeFrom(const RedPackFromClient& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RedPackFromClient* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string jsonData = 1;
  void clear_jsondata();
  static const int kJsonDataFieldNumber = 1;
  const ::std::string& jsondata() const;
  void set_jsondata(const ::std::string& value);
  void set_jsondata(const char* value);
  void set_jsondata(const char* value, size_t size);
  ::std::string* mutable_jsondata();
  ::std::string* release_jsondata();
  void set_allocated_jsondata(::std::string* jsondata);

  // @@protoc_insertion_point(class_scope:gt_msg.RedPackFromClient)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr jsondata_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static RedPackFromClient* default_instance_;
};
// -------------------------------------------------------------------

class ServerEditOperateRusult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.ServerEditOperateRusult) */ {
 public:
  ServerEditOperateRusult();
  virtual ~ServerEditOperateRusult();

  ServerEditOperateRusult(const ServerEditOperateRusult& from);

  inline ServerEditOperateRusult& operator=(const ServerEditOperateRusult& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerEditOperateRusult& default_instance();

  void Swap(ServerEditOperateRusult* other);

  // implements Message ----------------------------------------------

  inline ServerEditOperateRusult* New() const { return New(NULL); }

  ServerEditOperateRusult* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerEditOperateRusult& from);
  void MergeFrom(const ServerEditOperateRusult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ServerEditOperateRusult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 resultCode = 1;
  void clear_resultcode();
  static const int kResultCodeFieldNumber = 1;
  ::google::protobuf::int32 resultcode() const;
  void set_resultcode(::google::protobuf::int32 value);

  // optional string resultMessge = 2;
  void clear_resultmessge();
  static const int kResultMessgeFieldNumber = 2;
  const ::std::string& resultmessge() const;
  void set_resultmessge(const ::std::string& value);
  void set_resultmessge(const char* value);
  void set_resultmessge(const char* value, size_t size);
  ::std::string* mutable_resultmessge();
  ::std::string* release_resultmessge();
  void set_allocated_resultmessge(::std::string* resultmessge);

  // @@protoc_insertion_point(class_scope:gt_msg.ServerEditOperateRusult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr resultmessge_;
  ::google::protobuf::int32 resultcode_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static ServerEditOperateRusult* default_instance_;
};
// -------------------------------------------------------------------

class CompetitionRusult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.CompetitionRusult) */ {
 public:
  CompetitionRusult();
  virtual ~CompetitionRusult();

  CompetitionRusult(const CompetitionRusult& from);

  inline CompetitionRusult& operator=(const CompetitionRusult& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CompetitionRusult& default_instance();

  void Swap(CompetitionRusult* other);

  // implements Message ----------------------------------------------

  inline CompetitionRusult* New() const { return New(NULL); }

  CompetitionRusult* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CompetitionRusult& from);
  void MergeFrom(const CompetitionRusult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CompetitionRusult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 resultCode = 1;
  void clear_resultcode();
  static const int kResultCodeFieldNumber = 1;
  ::google::protobuf::int32 resultcode() const;
  void set_resultcode(::google::protobuf::int32 value);

  // optional string resultMessage = 2;
  void clear_resultmessage();
  static const int kResultMessageFieldNumber = 2;
  const ::std::string& resultmessage() const;
  void set_resultmessage(const ::std::string& value);
  void set_resultmessage(const char* value);
  void set_resultmessage(const char* value, size_t size);
  ::std::string* mutable_resultmessage();
  ::std::string* release_resultmessage();
  void set_allocated_resultmessage(::std::string* resultmessage);

  // optional int32 Winner = 3;
  void clear_winner();
  static const int kWinnerFieldNumber = 3;
  ::google::protobuf::int32 winner() const;
  void set_winner(::google::protobuf::int32 value);

  // optional int64 WinScore = 4;
  void clear_winscore();
  static const int kWinScoreFieldNumber = 4;
  ::google::protobuf::int64 winscore() const;
  void set_winscore(::google::protobuf::int64 value);

  // optional int32 RedpackSum = 5;
  void clear_redpacksum();
  static const int kRedpackSumFieldNumber = 5;
  ::google::protobuf::int32 redpacksum() const;
  void set_redpacksum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gt_msg.CompetitionRusult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr resultmessage_;
  ::google::protobuf::int32 resultcode_;
  ::google::protobuf::int32 winner_;
  ::google::protobuf::int64 winscore_;
  ::google::protobuf::int32 redpacksum_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static CompetitionRusult* default_instance_;
};
// -------------------------------------------------------------------

class AddFishStoreScore : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.AddFishStoreScore) */ {
 public:
  AddFishStoreScore();
  virtual ~AddFishStoreScore();

  AddFishStoreScore(const AddFishStoreScore& from);

  inline AddFishStoreScore& operator=(const AddFishStoreScore& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddFishStoreScore& default_instance();

  void Swap(AddFishStoreScore* other);

  // implements Message ----------------------------------------------

  inline AddFishStoreScore* New() const { return New(NULL); }

  AddFishStoreScore* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddFishStoreScore& from);
  void MergeFrom(const AddFishStoreScore& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AddFishStoreScore* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 score = 1;
  void clear_score();
  static const int kScoreFieldNumber = 1;
  ::google::protobuf::int64 score() const;
  void set_score(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:gt_msg.AddFishStoreScore)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 score_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static AddFishStoreScore* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Vec2

// optional float x = 1;
inline void Vec2::clear_x() {
  x_ = 0;
}
inline float Vec2::x() const {
  // @@protoc_insertion_point(field_get:gt_msg.Vec2.x)
  return x_;
}
inline void Vec2::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Vec2.x)
}

// optional float y = 2;
inline void Vec2::clear_y() {
  y_ = 0;
}
inline float Vec2::y() const {
  // @@protoc_insertion_point(field_get:gt_msg.Vec2.y)
  return y_;
}
inline void Vec2::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Vec2.y)
}

// -------------------------------------------------------------------

// Vec3

// optional float x = 1;
inline void Vec3::clear_x() {
  x_ = 0;
}
inline float Vec3::x() const {
  // @@protoc_insertion_point(field_get:gt_msg.Vec3.x)
  return x_;
}
inline void Vec3::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Vec3.x)
}

// optional float y = 2;
inline void Vec3::clear_y() {
  y_ = 0;
}
inline float Vec3::y() const {
  // @@protoc_insertion_point(field_get:gt_msg.Vec3.y)
  return y_;
}
inline void Vec3::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Vec3.y)
}

// optional float z = 3;
inline void Vec3::clear_z() {
  z_ = 0;
}
inline float Vec3::z() const {
  // @@protoc_insertion_point(field_get:gt_msg.Vec3.z)
  return z_;
}
inline void Vec3::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Vec3.z)
}

// -------------------------------------------------------------------

// ColliderCircle

// optional .gt_msg.Vec3 Offset = 1;
inline bool ColliderCircle::has_offset() const {
  return !_is_default_instance_ && offset_ != NULL;
}
inline void ColliderCircle::clear_offset() {
  if (GetArenaNoVirtual() == NULL && offset_ != NULL) delete offset_;
  offset_ = NULL;
}
inline const ::gt_msg::Vec3& ColliderCircle::offset() const {
  // @@protoc_insertion_point(field_get:gt_msg.ColliderCircle.Offset)
  return offset_ != NULL ? *offset_ : *default_instance_->offset_;
}
inline ::gt_msg::Vec3* ColliderCircle::mutable_offset() {
  
  if (offset_ == NULL) {
    offset_ = new ::gt_msg::Vec3;
  }
  // @@protoc_insertion_point(field_mutable:gt_msg.ColliderCircle.Offset)
  return offset_;
}
inline ::gt_msg::Vec3* ColliderCircle::release_offset() {
  // @@protoc_insertion_point(field_release:gt_msg.ColliderCircle.Offset)
  
  ::gt_msg::Vec3* temp = offset_;
  offset_ = NULL;
  return temp;
}
inline void ColliderCircle::set_allocated_offset(::gt_msg::Vec3* offset) {
  delete offset_;
  offset_ = offset;
  if (offset) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gt_msg.ColliderCircle.Offset)
}

// optional float Radius = 2;
inline void ColliderCircle::clear_radius() {
  radius_ = 0;
}
inline float ColliderCircle::radius() const {
  // @@protoc_insertion_point(field_get:gt_msg.ColliderCircle.Radius)
  return radius_;
}
inline void ColliderCircle::set_radius(float value) {
  
  radius_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.ColliderCircle.Radius)
}

// -------------------------------------------------------------------

// Quate

// optional float x = 1;
inline void Quate::clear_x() {
  x_ = 0;
}
inline float Quate::x() const {
  // @@protoc_insertion_point(field_get:gt_msg.Quate.x)
  return x_;
}
inline void Quate::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Quate.x)
}

// optional float y = 2;
inline void Quate::clear_y() {
  y_ = 0;
}
inline float Quate::y() const {
  // @@protoc_insertion_point(field_get:gt_msg.Quate.y)
  return y_;
}
inline void Quate::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Quate.y)
}

// optional float z = 3;
inline void Quate::clear_z() {
  z_ = 0;
}
inline float Quate::z() const {
  // @@protoc_insertion_point(field_get:gt_msg.Quate.z)
  return z_;
}
inline void Quate::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Quate.z)
}

// optional float w = 4;
inline void Quate::clear_w() {
  w_ = 0;
}
inline float Quate::w() const {
  // @@protoc_insertion_point(field_get:gt_msg.Quate.w)
  return w_;
}
inline void Quate::set_w(float value) {
  
  w_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Quate.w)
}

// -------------------------------------------------------------------

// PathPointClient

// optional .gt_msg.Vec3 point = 1;
inline bool PathPointClient::has_point() const {
  return !_is_default_instance_ && point_ != NULL;
}
inline void PathPointClient::clear_point() {
  if (GetArenaNoVirtual() == NULL && point_ != NULL) delete point_;
  point_ = NULL;
}
inline const ::gt_msg::Vec3& PathPointClient::point() const {
  // @@protoc_insertion_point(field_get:gt_msg.PathPointClient.point)
  return point_ != NULL ? *point_ : *default_instance_->point_;
}
inline ::gt_msg::Vec3* PathPointClient::mutable_point() {
  
  if (point_ == NULL) {
    point_ = new ::gt_msg::Vec3;
  }
  // @@protoc_insertion_point(field_mutable:gt_msg.PathPointClient.point)
  return point_;
}
inline ::gt_msg::Vec3* PathPointClient::release_point() {
  // @@protoc_insertion_point(field_release:gt_msg.PathPointClient.point)
  
  ::gt_msg::Vec3* temp = point_;
  point_ = NULL;
  return temp;
}
inline void PathPointClient::set_allocated_point(::gt_msg::Vec3* point) {
  delete point_;
  point_ = point;
  if (point) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gt_msg.PathPointClient.point)
}

// -------------------------------------------------------------------

// SinglePathClient

// optional string pathName = 1;
inline void SinglePathClient::clear_pathname() {
  pathname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SinglePathClient::pathname() const {
  // @@protoc_insertion_point(field_get:gt_msg.SinglePathClient.pathName)
  return pathname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SinglePathClient::set_pathname(const ::std::string& value) {
  
  pathname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.SinglePathClient.pathName)
}
inline void SinglePathClient::set_pathname(const char* value) {
  
  pathname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.SinglePathClient.pathName)
}
inline void SinglePathClient::set_pathname(const char* value, size_t size) {
  
  pathname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.SinglePathClient.pathName)
}
inline ::std::string* SinglePathClient::mutable_pathname() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.SinglePathClient.pathName)
  return pathname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SinglePathClient::release_pathname() {
  // @@protoc_insertion_point(field_release:gt_msg.SinglePathClient.pathName)
  
  return pathname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SinglePathClient::set_allocated_pathname(::std::string* pathname) {
  if (pathname != NULL) {
    
  } else {
    
  }
  pathname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pathname);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.SinglePathClient.pathName)
}

// repeated .gt_msg.PathPointClient pathPointList = 2;
inline int SinglePathClient::pathpointlist_size() const {
  return pathpointlist_.size();
}
inline void SinglePathClient::clear_pathpointlist() {
  pathpointlist_.Clear();
}
inline const ::gt_msg::PathPointClient& SinglePathClient::pathpointlist(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.SinglePathClient.pathPointList)
  return pathpointlist_.Get(index);
}
inline ::gt_msg::PathPointClient* SinglePathClient::mutable_pathpointlist(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.SinglePathClient.pathPointList)
  return pathpointlist_.Mutable(index);
}
inline ::gt_msg::PathPointClient* SinglePathClient::add_pathpointlist() {
  // @@protoc_insertion_point(field_add:gt_msg.SinglePathClient.pathPointList)
  return pathpointlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gt_msg::PathPointClient >*
SinglePathClient::mutable_pathpointlist() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.SinglePathClient.pathPointList)
  return &pathpointlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gt_msg::PathPointClient >&
SinglePathClient::pathpointlist() const {
  // @@protoc_insertion_point(field_list:gt_msg.SinglePathClient.pathPointList)
  return pathpointlist_;
}

// repeated .gt_msg.ActionData actions = 3;
inline int SinglePathClient::actions_size() const {
  return actions_.size();
}
inline void SinglePathClient::clear_actions() {
  actions_.Clear();
}
inline const ::gt_msg::ActionData& SinglePathClient::actions(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.SinglePathClient.actions)
  return actions_.Get(index);
}
inline ::gt_msg::ActionData* SinglePathClient::mutable_actions(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.SinglePathClient.actions)
  return actions_.Mutable(index);
}
inline ::gt_msg::ActionData* SinglePathClient::add_actions() {
  // @@protoc_insertion_point(field_add:gt_msg.SinglePathClient.actions)
  return actions_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gt_msg::ActionData >*
SinglePathClient::mutable_actions() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.SinglePathClient.actions)
  return &actions_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gt_msg::ActionData >&
SinglePathClient::actions() const {
  // @@protoc_insertion_point(field_list:gt_msg.SinglePathClient.actions)
  return actions_;
}

// optional string copyPathName = 4;
inline void SinglePathClient::clear_copypathname() {
  copypathname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SinglePathClient::copypathname() const {
  // @@protoc_insertion_point(field_get:gt_msg.SinglePathClient.copyPathName)
  return copypathname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SinglePathClient::set_copypathname(const ::std::string& value) {
  
  copypathname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.SinglePathClient.copyPathName)
}
inline void SinglePathClient::set_copypathname(const char* value) {
  
  copypathname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.SinglePathClient.copyPathName)
}
inline void SinglePathClient::set_copypathname(const char* value, size_t size) {
  
  copypathname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.SinglePathClient.copyPathName)
}
inline ::std::string* SinglePathClient::mutable_copypathname() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.SinglePathClient.copyPathName)
  return copypathname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SinglePathClient::release_copypathname() {
  // @@protoc_insertion_point(field_release:gt_msg.SinglePathClient.copyPathName)
  
  return copypathname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SinglePathClient::set_allocated_copypathname(::std::string* copypathname) {
  if (copypathname != NULL) {
    
  } else {
    
  }
  copypathname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), copypathname);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.SinglePathClient.copyPathName)
}

// optional .gt_msg.Vec3 offset = 5;
inline bool SinglePathClient::has_offset() const {
  return !_is_default_instance_ && offset_ != NULL;
}
inline void SinglePathClient::clear_offset() {
  if (GetArenaNoVirtual() == NULL && offset_ != NULL) delete offset_;
  offset_ = NULL;
}
inline const ::gt_msg::Vec3& SinglePathClient::offset() const {
  // @@protoc_insertion_point(field_get:gt_msg.SinglePathClient.offset)
  return offset_ != NULL ? *offset_ : *default_instance_->offset_;
}
inline ::gt_msg::Vec3* SinglePathClient::mutable_offset() {
  
  if (offset_ == NULL) {
    offset_ = new ::gt_msg::Vec3;
  }
  // @@protoc_insertion_point(field_mutable:gt_msg.SinglePathClient.offset)
  return offset_;
}
inline ::gt_msg::Vec3* SinglePathClient::release_offset() {
  // @@protoc_insertion_point(field_release:gt_msg.SinglePathClient.offset)
  
  ::gt_msg::Vec3* temp = offset_;
  offset_ = NULL;
  return temp;
}
inline void SinglePathClient::set_allocated_offset(::gt_msg::Vec3* offset) {
  delete offset_;
  offset_ = offset;
  if (offset) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gt_msg.SinglePathClient.offset)
}

// optional bool foldX = 6;
inline void SinglePathClient::clear_foldx() {
  foldx_ = false;
}
inline bool SinglePathClient::foldx() const {
  // @@protoc_insertion_point(field_get:gt_msg.SinglePathClient.foldX)
  return foldx_;
}
inline void SinglePathClient::set_foldx(bool value) {
  
  foldx_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.SinglePathClient.foldX)
}

// optional bool foldY = 7;
inline void SinglePathClient::clear_foldy() {
  foldy_ = false;
}
inline bool SinglePathClient::foldy() const {
  // @@protoc_insertion_point(field_get:gt_msg.SinglePathClient.foldY)
  return foldy_;
}
inline void SinglePathClient::set_foldy(bool value) {
  
  foldy_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.SinglePathClient.foldY)
}

// optional bool foldZ = 8;
inline void SinglePathClient::clear_foldz() {
  foldz_ = false;
}
inline bool SinglePathClient::foldz() const {
  // @@protoc_insertion_point(field_get:gt_msg.SinglePathClient.foldZ)
  return foldz_;
}
inline void SinglePathClient::set_foldz(bool value) {
  
  foldz_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.SinglePathClient.foldZ)
}

// optional float speedScale = 9;
inline void SinglePathClient::clear_speedscale() {
  speedscale_ = 0;
}
inline float SinglePathClient::speedscale() const {
  // @@protoc_insertion_point(field_get:gt_msg.SinglePathClient.speedScale)
  return speedscale_;
}
inline void SinglePathClient::set_speedscale(float value) {
  
  speedscale_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.SinglePathClient.speedScale)
}

// -------------------------------------------------------------------

// PathGroupClient

// repeated .gt_msg.SinglePathClient pathList = 1;
inline int PathGroupClient::pathlist_size() const {
  return pathlist_.size();
}
inline void PathGroupClient::clear_pathlist() {
  pathlist_.Clear();
}
inline const ::gt_msg::SinglePathClient& PathGroupClient::pathlist(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.PathGroupClient.pathList)
  return pathlist_.Get(index);
}
inline ::gt_msg::SinglePathClient* PathGroupClient::mutable_pathlist(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.PathGroupClient.pathList)
  return pathlist_.Mutable(index);
}
inline ::gt_msg::SinglePathClient* PathGroupClient::add_pathlist() {
  // @@protoc_insertion_point(field_add:gt_msg.PathGroupClient.pathList)
  return pathlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gt_msg::SinglePathClient >*
PathGroupClient::mutable_pathlist() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.PathGroupClient.pathList)
  return &pathlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gt_msg::SinglePathClient >&
PathGroupClient::pathlist() const {
  // @@protoc_insertion_point(field_list:gt_msg.PathGroupClient.pathList)
  return pathlist_;
}

// -------------------------------------------------------------------

// ActionData

// optional int32 actionFrame = 1;
inline void ActionData::clear_actionframe() {
  actionframe_ = 0;
}
inline ::google::protobuf::int32 ActionData::actionframe() const {
  // @@protoc_insertion_point(field_get:gt_msg.ActionData.actionFrame)
  return actionframe_;
}
inline void ActionData::set_actionframe(::google::protobuf::int32 value) {
  
  actionframe_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.ActionData.actionFrame)
}

// optional int32 playIdleIndex = 2;
inline void ActionData::clear_playidleindex() {
  playidleindex_ = 0;
}
inline ::google::protobuf::int32 ActionData::playidleindex() const {
  // @@protoc_insertion_point(field_get:gt_msg.ActionData.playIdleIndex)
  return playidleindex_;
}
inline void ActionData::set_playidleindex(::google::protobuf::int32 value) {
  
  playidleindex_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.ActionData.playIdleIndex)
}

// -------------------------------------------------------------------

// PathPointServer

// optional .gt_msg.Vec3 point = 1;
inline bool PathPointServer::has_point() const {
  return !_is_default_instance_ && point_ != NULL;
}
inline void PathPointServer::clear_point() {
  if (GetArenaNoVirtual() == NULL && point_ != NULL) delete point_;
  point_ = NULL;
}
inline const ::gt_msg::Vec3& PathPointServer::point() const {
  // @@protoc_insertion_point(field_get:gt_msg.PathPointServer.point)
  return point_ != NULL ? *point_ : *default_instance_->point_;
}
inline ::gt_msg::Vec3* PathPointServer::mutable_point() {
  
  if (point_ == NULL) {
    point_ = new ::gt_msg::Vec3;
  }
  // @@protoc_insertion_point(field_mutable:gt_msg.PathPointServer.point)
  return point_;
}
inline ::gt_msg::Vec3* PathPointServer::release_point() {
  // @@protoc_insertion_point(field_release:gt_msg.PathPointServer.point)
  
  ::gt_msg::Vec3* temp = point_;
  point_ = NULL;
  return temp;
}
inline void PathPointServer::set_allocated_point(::gt_msg::Vec3* point) {
  delete point_;
  point_ = point;
  if (point) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gt_msg.PathPointServer.point)
}

// optional .gt_msg.Vec3 normalizedX = 2;
inline bool PathPointServer::has_normalizedx() const {
  return !_is_default_instance_ && normalizedx_ != NULL;
}
inline void PathPointServer::clear_normalizedx() {
  if (GetArenaNoVirtual() == NULL && normalizedx_ != NULL) delete normalizedx_;
  normalizedx_ = NULL;
}
inline const ::gt_msg::Vec3& PathPointServer::normalizedx() const {
  // @@protoc_insertion_point(field_get:gt_msg.PathPointServer.normalizedX)
  return normalizedx_ != NULL ? *normalizedx_ : *default_instance_->normalizedx_;
}
inline ::gt_msg::Vec3* PathPointServer::mutable_normalizedx() {
  
  if (normalizedx_ == NULL) {
    normalizedx_ = new ::gt_msg::Vec3;
  }
  // @@protoc_insertion_point(field_mutable:gt_msg.PathPointServer.normalizedX)
  return normalizedx_;
}
inline ::gt_msg::Vec3* PathPointServer::release_normalizedx() {
  // @@protoc_insertion_point(field_release:gt_msg.PathPointServer.normalizedX)
  
  ::gt_msg::Vec3* temp = normalizedx_;
  normalizedx_ = NULL;
  return temp;
}
inline void PathPointServer::set_allocated_normalizedx(::gt_msg::Vec3* normalizedx) {
  delete normalizedx_;
  normalizedx_ = normalizedx;
  if (normalizedx) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gt_msg.PathPointServer.normalizedX)
}

// optional .gt_msg.Vec3 normalizedY = 3;
inline bool PathPointServer::has_normalizedy() const {
  return !_is_default_instance_ && normalizedy_ != NULL;
}
inline void PathPointServer::clear_normalizedy() {
  if (GetArenaNoVirtual() == NULL && normalizedy_ != NULL) delete normalizedy_;
  normalizedy_ = NULL;
}
inline const ::gt_msg::Vec3& PathPointServer::normalizedy() const {
  // @@protoc_insertion_point(field_get:gt_msg.PathPointServer.normalizedY)
  return normalizedy_ != NULL ? *normalizedy_ : *default_instance_->normalizedy_;
}
inline ::gt_msg::Vec3* PathPointServer::mutable_normalizedy() {
  
  if (normalizedy_ == NULL) {
    normalizedy_ = new ::gt_msg::Vec3;
  }
  // @@protoc_insertion_point(field_mutable:gt_msg.PathPointServer.normalizedY)
  return normalizedy_;
}
inline ::gt_msg::Vec3* PathPointServer::release_normalizedy() {
  // @@protoc_insertion_point(field_release:gt_msg.PathPointServer.normalizedY)
  
  ::gt_msg::Vec3* temp = normalizedy_;
  normalizedy_ = NULL;
  return temp;
}
inline void PathPointServer::set_allocated_normalizedy(::gt_msg::Vec3* normalizedy) {
  delete normalizedy_;
  normalizedy_ = normalizedy;
  if (normalizedy) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gt_msg.PathPointServer.normalizedY)
}

// optional .gt_msg.Vec3 normalizedZ = 4;
inline bool PathPointServer::has_normalizedz() const {
  return !_is_default_instance_ && normalizedz_ != NULL;
}
inline void PathPointServer::clear_normalizedz() {
  if (GetArenaNoVirtual() == NULL && normalizedz_ != NULL) delete normalizedz_;
  normalizedz_ = NULL;
}
inline const ::gt_msg::Vec3& PathPointServer::normalizedz() const {
  // @@protoc_insertion_point(field_get:gt_msg.PathPointServer.normalizedZ)
  return normalizedz_ != NULL ? *normalizedz_ : *default_instance_->normalizedz_;
}
inline ::gt_msg::Vec3* PathPointServer::mutable_normalizedz() {
  
  if (normalizedz_ == NULL) {
    normalizedz_ = new ::gt_msg::Vec3;
  }
  // @@protoc_insertion_point(field_mutable:gt_msg.PathPointServer.normalizedZ)
  return normalizedz_;
}
inline ::gt_msg::Vec3* PathPointServer::release_normalizedz() {
  // @@protoc_insertion_point(field_release:gt_msg.PathPointServer.normalizedZ)
  
  ::gt_msg::Vec3* temp = normalizedz_;
  normalizedz_ = NULL;
  return temp;
}
inline void PathPointServer::set_allocated_normalizedz(::gt_msg::Vec3* normalizedz) {
  delete normalizedz_;
  normalizedz_ = normalizedz;
  if (normalizedz) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gt_msg.PathPointServer.normalizedZ)
}

// -------------------------------------------------------------------

// SinglePathServer

// optional string pathName = 1;
inline void SinglePathServer::clear_pathname() {
  pathname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SinglePathServer::pathname() const {
  // @@protoc_insertion_point(field_get:gt_msg.SinglePathServer.pathName)
  return pathname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SinglePathServer::set_pathname(const ::std::string& value) {
  
  pathname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.SinglePathServer.pathName)
}
inline void SinglePathServer::set_pathname(const char* value) {
  
  pathname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.SinglePathServer.pathName)
}
inline void SinglePathServer::set_pathname(const char* value, size_t size) {
  
  pathname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.SinglePathServer.pathName)
}
inline ::std::string* SinglePathServer::mutable_pathname() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.SinglePathServer.pathName)
  return pathname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SinglePathServer::release_pathname() {
  // @@protoc_insertion_point(field_release:gt_msg.SinglePathServer.pathName)
  
  return pathname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SinglePathServer::set_allocated_pathname(::std::string* pathname) {
  if (pathname != NULL) {
    
  } else {
    
  }
  pathname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pathname);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.SinglePathServer.pathName)
}

// repeated .gt_msg.PathPointServer pathPointList = 2;
inline int SinglePathServer::pathpointlist_size() const {
  return pathpointlist_.size();
}
inline void SinglePathServer::clear_pathpointlist() {
  pathpointlist_.Clear();
}
inline const ::gt_msg::PathPointServer& SinglePathServer::pathpointlist(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.SinglePathServer.pathPointList)
  return pathpointlist_.Get(index);
}
inline ::gt_msg::PathPointServer* SinglePathServer::mutable_pathpointlist(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.SinglePathServer.pathPointList)
  return pathpointlist_.Mutable(index);
}
inline ::gt_msg::PathPointServer* SinglePathServer::add_pathpointlist() {
  // @@protoc_insertion_point(field_add:gt_msg.SinglePathServer.pathPointList)
  return pathpointlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gt_msg::PathPointServer >*
SinglePathServer::mutable_pathpointlist() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.SinglePathServer.pathPointList)
  return &pathpointlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gt_msg::PathPointServer >&
SinglePathServer::pathpointlist() const {
  // @@protoc_insertion_point(field_list:gt_msg.SinglePathServer.pathPointList)
  return pathpointlist_;
}

// repeated .gt_msg.ActionData actions = 3;
inline int SinglePathServer::actions_size() const {
  return actions_.size();
}
inline void SinglePathServer::clear_actions() {
  actions_.Clear();
}
inline const ::gt_msg::ActionData& SinglePathServer::actions(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.SinglePathServer.actions)
  return actions_.Get(index);
}
inline ::gt_msg::ActionData* SinglePathServer::mutable_actions(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.SinglePathServer.actions)
  return actions_.Mutable(index);
}
inline ::gt_msg::ActionData* SinglePathServer::add_actions() {
  // @@protoc_insertion_point(field_add:gt_msg.SinglePathServer.actions)
  return actions_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gt_msg::ActionData >*
SinglePathServer::mutable_actions() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.SinglePathServer.actions)
  return &actions_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gt_msg::ActionData >&
SinglePathServer::actions() const {
  // @@protoc_insertion_point(field_list:gt_msg.SinglePathServer.actions)
  return actions_;
}

// optional string copyPathName = 4;
inline void SinglePathServer::clear_copypathname() {
  copypathname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SinglePathServer::copypathname() const {
  // @@protoc_insertion_point(field_get:gt_msg.SinglePathServer.copyPathName)
  return copypathname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SinglePathServer::set_copypathname(const ::std::string& value) {
  
  copypathname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.SinglePathServer.copyPathName)
}
inline void SinglePathServer::set_copypathname(const char* value) {
  
  copypathname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.SinglePathServer.copyPathName)
}
inline void SinglePathServer::set_copypathname(const char* value, size_t size) {
  
  copypathname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.SinglePathServer.copyPathName)
}
inline ::std::string* SinglePathServer::mutable_copypathname() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.SinglePathServer.copyPathName)
  return copypathname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SinglePathServer::release_copypathname() {
  // @@protoc_insertion_point(field_release:gt_msg.SinglePathServer.copyPathName)
  
  return copypathname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SinglePathServer::set_allocated_copypathname(::std::string* copypathname) {
  if (copypathname != NULL) {
    
  } else {
    
  }
  copypathname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), copypathname);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.SinglePathServer.copyPathName)
}

// optional .gt_msg.Vec3 offset = 5;
inline bool SinglePathServer::has_offset() const {
  return !_is_default_instance_ && offset_ != NULL;
}
inline void SinglePathServer::clear_offset() {
  if (GetArenaNoVirtual() == NULL && offset_ != NULL) delete offset_;
  offset_ = NULL;
}
inline const ::gt_msg::Vec3& SinglePathServer::offset() const {
  // @@protoc_insertion_point(field_get:gt_msg.SinglePathServer.offset)
  return offset_ != NULL ? *offset_ : *default_instance_->offset_;
}
inline ::gt_msg::Vec3* SinglePathServer::mutable_offset() {
  
  if (offset_ == NULL) {
    offset_ = new ::gt_msg::Vec3;
  }
  // @@protoc_insertion_point(field_mutable:gt_msg.SinglePathServer.offset)
  return offset_;
}
inline ::gt_msg::Vec3* SinglePathServer::release_offset() {
  // @@protoc_insertion_point(field_release:gt_msg.SinglePathServer.offset)
  
  ::gt_msg::Vec3* temp = offset_;
  offset_ = NULL;
  return temp;
}
inline void SinglePathServer::set_allocated_offset(::gt_msg::Vec3* offset) {
  delete offset_;
  offset_ = offset;
  if (offset) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gt_msg.SinglePathServer.offset)
}

// optional bool foldX = 6;
inline void SinglePathServer::clear_foldx() {
  foldx_ = false;
}
inline bool SinglePathServer::foldx() const {
  // @@protoc_insertion_point(field_get:gt_msg.SinglePathServer.foldX)
  return foldx_;
}
inline void SinglePathServer::set_foldx(bool value) {
  
  foldx_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.SinglePathServer.foldX)
}

// optional bool foldY = 7;
inline void SinglePathServer::clear_foldy() {
  foldy_ = false;
}
inline bool SinglePathServer::foldy() const {
  // @@protoc_insertion_point(field_get:gt_msg.SinglePathServer.foldY)
  return foldy_;
}
inline void SinglePathServer::set_foldy(bool value) {
  
  foldy_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.SinglePathServer.foldY)
}

// optional bool foldZ = 8;
inline void SinglePathServer::clear_foldz() {
  foldz_ = false;
}
inline bool SinglePathServer::foldz() const {
  // @@protoc_insertion_point(field_get:gt_msg.SinglePathServer.foldZ)
  return foldz_;
}
inline void SinglePathServer::set_foldz(bool value) {
  
  foldz_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.SinglePathServer.foldZ)
}

// optional float speedScale = 9;
inline void SinglePathServer::clear_speedscale() {
  speedscale_ = 0;
}
inline float SinglePathServer::speedscale() const {
  // @@protoc_insertion_point(field_get:gt_msg.SinglePathServer.speedScale)
  return speedscale_;
}
inline void SinglePathServer::set_speedscale(float value) {
  
  speedscale_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.SinglePathServer.speedScale)
}

// -------------------------------------------------------------------

// PathGroupServer

// repeated .gt_msg.SinglePathServer pathList = 1;
inline int PathGroupServer::pathlist_size() const {
  return pathlist_.size();
}
inline void PathGroupServer::clear_pathlist() {
  pathlist_.Clear();
}
inline const ::gt_msg::SinglePathServer& PathGroupServer::pathlist(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.PathGroupServer.pathList)
  return pathlist_.Get(index);
}
inline ::gt_msg::SinglePathServer* PathGroupServer::mutable_pathlist(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.PathGroupServer.pathList)
  return pathlist_.Mutable(index);
}
inline ::gt_msg::SinglePathServer* PathGroupServer::add_pathlist() {
  // @@protoc_insertion_point(field_add:gt_msg.PathGroupServer.pathList)
  return pathlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gt_msg::SinglePathServer >*
PathGroupServer::mutable_pathlist() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.PathGroupServer.pathList)
  return &pathlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gt_msg::SinglePathServer >&
PathGroupServer::pathlist() const {
  // @@protoc_insertion_point(field_list:gt_msg.PathGroupServer.pathList)
  return pathlist_;
}

// -------------------------------------------------------------------

// AIBulletPath

// repeated .gt_msg.Vec2 pathPointList = 2;
inline int AIBulletPath::pathpointlist_size() const {
  return pathpointlist_.size();
}
inline void AIBulletPath::clear_pathpointlist() {
  pathpointlist_.Clear();
}
inline const ::gt_msg::Vec2& AIBulletPath::pathpointlist(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.AIBulletPath.pathPointList)
  return pathpointlist_.Get(index);
}
inline ::gt_msg::Vec2* AIBulletPath::mutable_pathpointlist(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.AIBulletPath.pathPointList)
  return pathpointlist_.Mutable(index);
}
inline ::gt_msg::Vec2* AIBulletPath::add_pathpointlist() {
  // @@protoc_insertion_point(field_add:gt_msg.AIBulletPath.pathPointList)
  return pathpointlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gt_msg::Vec2 >*
AIBulletPath::mutable_pathpointlist() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.AIBulletPath.pathPointList)
  return &pathpointlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gt_msg::Vec2 >&
AIBulletPath::pathpointlist() const {
  // @@protoc_insertion_point(field_list:gt_msg.AIBulletPath.pathPointList)
  return pathpointlist_;
}

// -------------------------------------------------------------------

// AIBulletPathGroup

// repeated .gt_msg.AIBulletPath pathList = 2;
inline int AIBulletPathGroup::pathlist_size() const {
  return pathlist_.size();
}
inline void AIBulletPathGroup::clear_pathlist() {
  pathlist_.Clear();
}
inline const ::gt_msg::AIBulletPath& AIBulletPathGroup::pathlist(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.AIBulletPathGroup.pathList)
  return pathlist_.Get(index);
}
inline ::gt_msg::AIBulletPath* AIBulletPathGroup::mutable_pathlist(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.AIBulletPathGroup.pathList)
  return pathlist_.Mutable(index);
}
inline ::gt_msg::AIBulletPath* AIBulletPathGroup::add_pathlist() {
  // @@protoc_insertion_point(field_add:gt_msg.AIBulletPathGroup.pathList)
  return pathlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gt_msg::AIBulletPath >*
AIBulletPathGroup::mutable_pathlist() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.AIBulletPathGroup.pathList)
  return &pathlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gt_msg::AIBulletPath >&
AIBulletPathGroup::pathlist() const {
  // @@protoc_insertion_point(field_list:gt_msg.AIBulletPathGroup.pathList)
  return pathlist_;
}

// -------------------------------------------------------------------

// AIBulletPathSets

// repeated .gt_msg.AIBulletPathGroup groupList = 1;
inline int AIBulletPathSets::grouplist_size() const {
  return grouplist_.size();
}
inline void AIBulletPathSets::clear_grouplist() {
  grouplist_.Clear();
}
inline const ::gt_msg::AIBulletPathGroup& AIBulletPathSets::grouplist(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.AIBulletPathSets.groupList)
  return grouplist_.Get(index);
}
inline ::gt_msg::AIBulletPathGroup* AIBulletPathSets::mutable_grouplist(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.AIBulletPathSets.groupList)
  return grouplist_.Mutable(index);
}
inline ::gt_msg::AIBulletPathGroup* AIBulletPathSets::add_grouplist() {
  // @@protoc_insertion_point(field_add:gt_msg.AIBulletPathSets.groupList)
  return grouplist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gt_msg::AIBulletPathGroup >*
AIBulletPathSets::mutable_grouplist() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.AIBulletPathSets.groupList)
  return &grouplist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gt_msg::AIBulletPathGroup >&
AIBulletPathSets::grouplist() const {
  // @@protoc_insertion_point(field_list:gt_msg.AIBulletPathSets.groupList)
  return grouplist_;
}

// -------------------------------------------------------------------

// PathFileHead

// optional int32 count = 1;
inline void PathFileHead::clear_count() {
  count_ = 0;
}
inline ::google::protobuf::int32 PathFileHead::count() const {
  // @@protoc_insertion_point(field_get:gt_msg.PathFileHead.count)
  return count_;
}
inline void PathFileHead::set_count(::google::protobuf::int32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.PathFileHead.count)
}

// repeated .gt_msg.PathPosInfo pathPosInfo = 2;
inline int PathFileHead::pathposinfo_size() const {
  return pathposinfo_.size();
}
inline void PathFileHead::clear_pathposinfo() {
  pathposinfo_.Clear();
}
inline const ::gt_msg::PathPosInfo& PathFileHead::pathposinfo(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.PathFileHead.pathPosInfo)
  return pathposinfo_.Get(index);
}
inline ::gt_msg::PathPosInfo* PathFileHead::mutable_pathposinfo(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.PathFileHead.pathPosInfo)
  return pathposinfo_.Mutable(index);
}
inline ::gt_msg::PathPosInfo* PathFileHead::add_pathposinfo() {
  // @@protoc_insertion_point(field_add:gt_msg.PathFileHead.pathPosInfo)
  return pathposinfo_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gt_msg::PathPosInfo >*
PathFileHead::mutable_pathposinfo() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.PathFileHead.pathPosInfo)
  return &pathposinfo_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gt_msg::PathPosInfo >&
PathFileHead::pathposinfo() const {
  // @@protoc_insertion_point(field_list:gt_msg.PathFileHead.pathPosInfo)
  return pathposinfo_;
}

// -------------------------------------------------------------------

// PathPosInfo

// optional string pathName = 1;
inline void PathPosInfo::clear_pathname() {
  pathname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PathPosInfo::pathname() const {
  // @@protoc_insertion_point(field_get:gt_msg.PathPosInfo.pathName)
  return pathname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PathPosInfo::set_pathname(const ::std::string& value) {
  
  pathname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.PathPosInfo.pathName)
}
inline void PathPosInfo::set_pathname(const char* value) {
  
  pathname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.PathPosInfo.pathName)
}
inline void PathPosInfo::set_pathname(const char* value, size_t size) {
  
  pathname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.PathPosInfo.pathName)
}
inline ::std::string* PathPosInfo::mutable_pathname() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.PathPosInfo.pathName)
  return pathname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PathPosInfo::release_pathname() {
  // @@protoc_insertion_point(field_release:gt_msg.PathPosInfo.pathName)
  
  return pathname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PathPosInfo::set_allocated_pathname(::std::string* pathname) {
  if (pathname != NULL) {
    
  } else {
    
  }
  pathname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pathname);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.PathPosInfo.pathName)
}

// optional int32 startPos = 2;
inline void PathPosInfo::clear_startpos() {
  startpos_ = 0;
}
inline ::google::protobuf::int32 PathPosInfo::startpos() const {
  // @@protoc_insertion_point(field_get:gt_msg.PathPosInfo.startPos)
  return startpos_;
}
inline void PathPosInfo::set_startpos(::google::protobuf::int32 value) {
  
  startpos_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.PathPosInfo.startPos)
}

// optional int32 length = 3;
inline void PathPosInfo::clear_length() {
  length_ = 0;
}
inline ::google::protobuf::int32 PathPosInfo::length() const {
  // @@protoc_insertion_point(field_get:gt_msg.PathPosInfo.length)
  return length_;
}
inline void PathPosInfo::set_length(::google::protobuf::int32 value) {
  
  length_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.PathPosInfo.length)
}

// -------------------------------------------------------------------

// MessageTimer

// optional int32 passFrame = 1;
inline void MessageTimer::clear_passframe() {
  passframe_ = 0;
}
inline ::google::protobuf::int32 MessageTimer::passframe() const {
  // @@protoc_insertion_point(field_get:gt_msg.MessageTimer.passFrame)
  return passframe_;
}
inline void MessageTimer::set_passframe(::google::protobuf::int32 value) {
  
  passframe_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.MessageTimer.passFrame)
}

// optional string message = 2;
inline void MessageTimer::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MessageTimer::message() const {
  // @@protoc_insertion_point(field_get:gt_msg.MessageTimer.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MessageTimer::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.MessageTimer.message)
}
inline void MessageTimer::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.MessageTimer.message)
}
inline void MessageTimer::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.MessageTimer.message)
}
inline ::std::string* MessageTimer::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.MessageTimer.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MessageTimer::release_message() {
  // @@protoc_insertion_point(field_release:gt_msg.MessageTimer.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MessageTimer::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.MessageTimer.message)
}

// -------------------------------------------------------------------

// ProductItemContent

// repeated int32 ProductItemIndex = 1;
inline int ProductItemContent::productitemindex_size() const {
  return productitemindex_.size();
}
inline void ProductItemContent::clear_productitemindex() {
  productitemindex_.Clear();
}
inline ::google::protobuf::int32 ProductItemContent::productitemindex(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItemContent.ProductItemIndex)
  return productitemindex_.Get(index);
}
inline void ProductItemContent::set_productitemindex(int index, ::google::protobuf::int32 value) {
  productitemindex_.Set(index, value);
  // @@protoc_insertion_point(field_set:gt_msg.ProductItemContent.ProductItemIndex)
}
inline void ProductItemContent::add_productitemindex(::google::protobuf::int32 value) {
  productitemindex_.Add(value);
  // @@protoc_insertion_point(field_add:gt_msg.ProductItemContent.ProductItemIndex)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProductItemContent::productitemindex() const {
  // @@protoc_insertion_point(field_list:gt_msg.ProductItemContent.ProductItemIndex)
  return productitemindex_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProductItemContent::mutable_productitemindex() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.ProductItemContent.ProductItemIndex)
  return &productitemindex_;
}

// optional int32 frame = 2;
inline void ProductItemContent::clear_frame() {
  frame_ = 0;
}
inline ::google::protobuf::int32 ProductItemContent::frame() const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItemContent.frame)
  return frame_;
}
inline void ProductItemContent::set_frame(::google::protobuf::int32 value) {
  
  frame_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.ProductItemContent.frame)
}

// optional string fishType = 3;
inline void ProductItemContent::clear_fishtype() {
  fishtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProductItemContent::fishtype() const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItemContent.fishType)
  return fishtype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProductItemContent::set_fishtype(const ::std::string& value) {
  
  fishtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.ProductItemContent.fishType)
}
inline void ProductItemContent::set_fishtype(const char* value) {
  
  fishtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.ProductItemContent.fishType)
}
inline void ProductItemContent::set_fishtype(const char* value, size_t size) {
  
  fishtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.ProductItemContent.fishType)
}
inline ::std::string* ProductItemContent::mutable_fishtype() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.ProductItemContent.fishType)
  return fishtype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProductItemContent::release_fishtype() {
  // @@protoc_insertion_point(field_release:gt_msg.ProductItemContent.fishType)
  
  return fishtype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProductItemContent::set_allocated_fishtype(::std::string* fishtype) {
  if (fishtype != NULL) {
    
  } else {
    
  }
  fishtype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fishtype);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.ProductItemContent.fishType)
}

// optional bool CombinePaths = 4;
inline void ProductItemContent::clear_combinepaths() {
  combinepaths_ = false;
}
inline bool ProductItemContent::combinepaths() const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItemContent.CombinePaths)
  return combinepaths_;
}
inline void ProductItemContent::set_combinepaths(bool value) {
  
  combinepaths_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.ProductItemContent.CombinePaths)
}

// repeated .gt_msg.ProductItem items = 5;
inline int ProductItemContent::items_size() const {
  return items_.size();
}
inline void ProductItemContent::clear_items() {
  items_.Clear();
}
inline const ::gt_msg::ProductItem& ProductItemContent::items(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItemContent.items)
  return items_.Get(index);
}
inline ::gt_msg::ProductItem* ProductItemContent::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.ProductItemContent.items)
  return items_.Mutable(index);
}
inline ::gt_msg::ProductItem* ProductItemContent::add_items() {
  // @@protoc_insertion_point(field_add:gt_msg.ProductItemContent.items)
  return items_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gt_msg::ProductItem >*
ProductItemContent::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.ProductItemContent.items)
  return &items_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gt_msg::ProductItem >&
ProductItemContent::items() const {
  // @@protoc_insertion_point(field_list:gt_msg.ProductItemContent.items)
  return items_;
}

// optional string enterMessage = 6;
inline void ProductItemContent::clear_entermessage() {
  entermessage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProductItemContent::entermessage() const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItemContent.enterMessage)
  return entermessage_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProductItemContent::set_entermessage(const ::std::string& value) {
  
  entermessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.ProductItemContent.enterMessage)
}
inline void ProductItemContent::set_entermessage(const char* value) {
  
  entermessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.ProductItemContent.enterMessage)
}
inline void ProductItemContent::set_entermessage(const char* value, size_t size) {
  
  entermessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.ProductItemContent.enterMessage)
}
inline ::std::string* ProductItemContent::mutable_entermessage() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.ProductItemContent.enterMessage)
  return entermessage_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProductItemContent::release_entermessage() {
  // @@protoc_insertion_point(field_release:gt_msg.ProductItemContent.enterMessage)
  
  return entermessage_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProductItemContent::set_allocated_entermessage(::std::string* entermessage) {
  if (entermessage != NULL) {
    
  } else {
    
  }
  entermessage_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), entermessage);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.ProductItemContent.enterMessage)
}

// optional string leaveMessage = 7;
inline void ProductItemContent::clear_leavemessage() {
  leavemessage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProductItemContent::leavemessage() const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItemContent.leaveMessage)
  return leavemessage_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProductItemContent::set_leavemessage(const ::std::string& value) {
  
  leavemessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.ProductItemContent.leaveMessage)
}
inline void ProductItemContent::set_leavemessage(const char* value) {
  
  leavemessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.ProductItemContent.leaveMessage)
}
inline void ProductItemContent::set_leavemessage(const char* value, size_t size) {
  
  leavemessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.ProductItemContent.leaveMessage)
}
inline ::std::string* ProductItemContent::mutable_leavemessage() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.ProductItemContent.leaveMessage)
  return leavemessage_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProductItemContent::release_leavemessage() {
  // @@protoc_insertion_point(field_release:gt_msg.ProductItemContent.leaveMessage)
  
  return leavemessage_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProductItemContent::set_allocated_leavemessage(::std::string* leavemessage) {
  if (leavemessage != NULL) {
    
  } else {
    
  }
  leavemessage_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), leavemessage);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.ProductItemContent.leaveMessage)
}

// optional bool onlyOne = 8;
inline void ProductItemContent::clear_onlyone() {
  onlyone_ = false;
}
inline bool ProductItemContent::onlyone() const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItemContent.onlyOne)
  return onlyone_;
}
inline void ProductItemContent::set_onlyone(bool value) {
  
  onlyone_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.ProductItemContent.onlyOne)
}

// optional bool waitUntilStart = 9;
inline void ProductItemContent::clear_waituntilstart() {
  waituntilstart_ = false;
}
inline bool ProductItemContent::waituntilstart() const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItemContent.waitUntilStart)
  return waituntilstart_;
}
inline void ProductItemContent::set_waituntilstart(bool value) {
  
  waituntilstart_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.ProductItemContent.waitUntilStart)
}

// optional bool waitUntilDone = 10;
inline void ProductItemContent::clear_waituntildone() {
  waituntildone_ = false;
}
inline bool ProductItemContent::waituntildone() const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItemContent.waitUntilDone)
  return waituntildone_;
}
inline void ProductItemContent::set_waituntildone(bool value) {
  
  waituntildone_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.ProductItemContent.waitUntilDone)
}

// optional bool fastenOldFish = 11;
inline void ProductItemContent::clear_fastenoldfish() {
  fastenoldfish_ = false;
}
inline bool ProductItemContent::fastenoldfish() const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItemContent.fastenOldFish)
  return fastenoldfish_;
}
inline void ProductItemContent::set_fastenoldfish(bool value) {
  
  fastenoldfish_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.ProductItemContent.fastenOldFish)
}

// optional bool fastenIn = 12;
inline void ProductItemContent::clear_fastenin() {
  fastenin_ = false;
}
inline bool ProductItemContent::fastenin() const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItemContent.fastenIn)
  return fastenin_;
}
inline void ProductItemContent::set_fastenin(bool value) {
  
  fastenin_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.ProductItemContent.fastenIn)
}

// optional int32 toward = 13;
inline void ProductItemContent::clear_toward() {
  toward_ = 0;
}
inline ::google::protobuf::int32 ProductItemContent::toward() const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItemContent.toward)
  return toward_;
}
inline void ProductItemContent::set_toward(::google::protobuf::int32 value) {
  
  toward_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.ProductItemContent.toward)
}

// optional .gt_msg.Vec3 offset = 14;
inline bool ProductItemContent::has_offset() const {
  return !_is_default_instance_ && offset_ != NULL;
}
inline void ProductItemContent::clear_offset() {
  if (GetArenaNoVirtual() == NULL && offset_ != NULL) delete offset_;
  offset_ = NULL;
}
inline const ::gt_msg::Vec3& ProductItemContent::offset() const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItemContent.offset)
  return offset_ != NULL ? *offset_ : *default_instance_->offset_;
}
inline ::gt_msg::Vec3* ProductItemContent::mutable_offset() {
  
  if (offset_ == NULL) {
    offset_ = new ::gt_msg::Vec3;
  }
  // @@protoc_insertion_point(field_mutable:gt_msg.ProductItemContent.offset)
  return offset_;
}
inline ::gt_msg::Vec3* ProductItemContent::release_offset() {
  // @@protoc_insertion_point(field_release:gt_msg.ProductItemContent.offset)
  
  ::gt_msg::Vec3* temp = offset_;
  offset_ = NULL;
  return temp;
}
inline void ProductItemContent::set_allocated_offset(::gt_msg::Vec3* offset) {
  delete offset_;
  offset_ = offset;
  if (offset) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gt_msg.ProductItemContent.offset)
}

// optional bool foldX = 15;
inline void ProductItemContent::clear_foldx() {
  foldx_ = false;
}
inline bool ProductItemContent::foldx() const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItemContent.foldX)
  return foldx_;
}
inline void ProductItemContent::set_foldx(bool value) {
  
  foldx_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.ProductItemContent.foldX)
}

// optional bool foldY = 16;
inline void ProductItemContent::clear_foldy() {
  foldy_ = false;
}
inline bool ProductItemContent::foldy() const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItemContent.foldY)
  return foldy_;
}
inline void ProductItemContent::set_foldy(bool value) {
  
  foldy_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.ProductItemContent.foldY)
}

// optional bool foldZ = 17;
inline void ProductItemContent::clear_foldz() {
  foldz_ = false;
}
inline bool ProductItemContent::foldz() const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItemContent.foldZ)
  return foldz_;
}
inline void ProductItemContent::set_foldz(bool value) {
  
  foldz_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.ProductItemContent.foldZ)
}

// optional float speedScale = 18;
inline void ProductItemContent::clear_speedscale() {
  speedscale_ = 0;
}
inline float ProductItemContent::speedscale() const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItemContent.speedScale)
  return speedscale_;
}
inline void ProductItemContent::set_speedscale(float value) {
  
  speedscale_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.ProductItemContent.speedScale)
}

// optional int32 deep = 19;
inline void ProductItemContent::clear_deep() {
  deep_ = 0;
}
inline ::google::protobuf::int32 ProductItemContent::deep() const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItemContent.deep)
  return deep_;
}
inline void ProductItemContent::set_deep(::google::protobuf::int32 value) {
  
  deep_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.ProductItemContent.deep)
}

// repeated .gt_msg.MessageTimer messageList = 20;
inline int ProductItemContent::messagelist_size() const {
  return messagelist_.size();
}
inline void ProductItemContent::clear_messagelist() {
  messagelist_.Clear();
}
inline const ::gt_msg::MessageTimer& ProductItemContent::messagelist(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItemContent.messageList)
  return messagelist_.Get(index);
}
inline ::gt_msg::MessageTimer* ProductItemContent::mutable_messagelist(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.ProductItemContent.messageList)
  return messagelist_.Mutable(index);
}
inline ::gt_msg::MessageTimer* ProductItemContent::add_messagelist() {
  // @@protoc_insertion_point(field_add:gt_msg.ProductItemContent.messageList)
  return messagelist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gt_msg::MessageTimer >*
ProductItemContent::mutable_messagelist() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.ProductItemContent.messageList)
  return &messagelist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gt_msg::MessageTimer >&
ProductItemContent::messagelist() const {
  // @@protoc_insertion_point(field_list:gt_msg.ProductItemContent.messageList)
  return messagelist_;
}

// optional bool isYuZhen = 21;
inline void ProductItemContent::clear_isyuzhen() {
  isyuzhen_ = false;
}
inline bool ProductItemContent::isyuzhen() const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItemContent.isYuZhen)
  return isyuzhen_;
}
inline void ProductItemContent::set_isyuzhen(bool value) {
  
  isyuzhen_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.ProductItemContent.isYuZhen)
}

// optional string rootMessage = 22;
inline void ProductItemContent::clear_rootmessage() {
  rootmessage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProductItemContent::rootmessage() const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItemContent.rootMessage)
  return rootmessage_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProductItemContent::set_rootmessage(const ::std::string& value) {
  
  rootmessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.ProductItemContent.rootMessage)
}
inline void ProductItemContent::set_rootmessage(const char* value) {
  
  rootmessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.ProductItemContent.rootMessage)
}
inline void ProductItemContent::set_rootmessage(const char* value, size_t size) {
  
  rootmessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.ProductItemContent.rootMessage)
}
inline ::std::string* ProductItemContent::mutable_rootmessage() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.ProductItemContent.rootMessage)
  return rootmessage_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProductItemContent::release_rootmessage() {
  // @@protoc_insertion_point(field_release:gt_msg.ProductItemContent.rootMessage)
  
  return rootmessage_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProductItemContent::set_allocated_rootmessage(::std::string* rootmessage) {
  if (rootmessage != NULL) {
    
  } else {
    
  }
  rootmessage_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rootmessage);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.ProductItemContent.rootMessage)
}

// -------------------------------------------------------------------

// ProductItem

// optional string ContentName = 1;
inline void ProductItem::clear_contentname() {
  contentname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProductItem::contentname() const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItem.ContentName)
  return contentname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProductItem::set_contentname(const ::std::string& value) {
  
  contentname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.ProductItem.ContentName)
}
inline void ProductItem::set_contentname(const char* value) {
  
  contentname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.ProductItem.ContentName)
}
inline void ProductItem::set_contentname(const char* value, size_t size) {
  
  contentname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.ProductItem.ContentName)
}
inline ::std::string* ProductItem::mutable_contentname() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.ProductItem.ContentName)
  return contentname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProductItem::release_contentname() {
  // @@protoc_insertion_point(field_release:gt_msg.ProductItem.ContentName)
  
  return contentname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProductItem::set_allocated_contentname(::std::string* contentname) {
  if (contentname != NULL) {
    
  } else {
    
  }
  contentname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contentname);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.ProductItem.ContentName)
}

// optional bool isSync = 2;
inline void ProductItem::clear_issync() {
  issync_ = false;
}
inline bool ProductItem::issync() const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItem.isSync)
  return issync_;
}
inline void ProductItem::set_issync(bool value) {
  
  issync_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.ProductItem.isSync)
}

// optional int32 time = 3;
inline void ProductItem::clear_time() {
  time_ = 0;
}
inline ::google::protobuf::int32 ProductItem::time() const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItem.time)
  return time_;
}
inline void ProductItem::set_time(::google::protobuf::int32 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.ProductItem.time)
}

// repeated .gt_msg.ProductItemContent contentItems = 4;
inline int ProductItem::contentitems_size() const {
  return contentitems_.size();
}
inline void ProductItem::clear_contentitems() {
  contentitems_.Clear();
}
inline const ::gt_msg::ProductItemContent& ProductItem::contentitems(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItem.contentItems)
  return contentitems_.Get(index);
}
inline ::gt_msg::ProductItemContent* ProductItem::mutable_contentitems(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.ProductItem.contentItems)
  return contentitems_.Mutable(index);
}
inline ::gt_msg::ProductItemContent* ProductItem::add_contentitems() {
  // @@protoc_insertion_point(field_add:gt_msg.ProductItem.contentItems)
  return contentitems_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gt_msg::ProductItemContent >*
ProductItem::mutable_contentitems() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.ProductItem.contentItems)
  return &contentitems_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gt_msg::ProductItemContent >&
ProductItem::contentitems() const {
  // @@protoc_insertion_point(field_list:gt_msg.ProductItem.contentItems)
  return contentitems_;
}

// -------------------------------------------------------------------

// ProductItemGroup

// repeated .gt_msg.ProductItem itemList = 1;
inline int ProductItemGroup::itemlist_size() const {
  return itemlist_.size();
}
inline void ProductItemGroup::clear_itemlist() {
  itemlist_.Clear();
}
inline const ::gt_msg::ProductItem& ProductItemGroup::itemlist(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItemGroup.itemList)
  return itemlist_.Get(index);
}
inline ::gt_msg::ProductItem* ProductItemGroup::mutable_itemlist(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.ProductItemGroup.itemList)
  return itemlist_.Mutable(index);
}
inline ::gt_msg::ProductItem* ProductItemGroup::add_itemlist() {
  // @@protoc_insertion_point(field_add:gt_msg.ProductItemGroup.itemList)
  return itemlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gt_msg::ProductItem >*
ProductItemGroup::mutable_itemlist() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.ProductItemGroup.itemList)
  return &itemlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gt_msg::ProductItem >&
ProductItemGroup::itemlist() const {
  // @@protoc_insertion_point(field_list:gt_msg.ProductItemGroup.itemList)
  return itemlist_;
}

// optional string mainEnter = 2;
inline void ProductItemGroup::clear_mainenter() {
  mainenter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProductItemGroup::mainenter() const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItemGroup.mainEnter)
  return mainenter_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProductItemGroup::set_mainenter(const ::std::string& value) {
  
  mainenter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.ProductItemGroup.mainEnter)
}
inline void ProductItemGroup::set_mainenter(const char* value) {
  
  mainenter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.ProductItemGroup.mainEnter)
}
inline void ProductItemGroup::set_mainenter(const char* value, size_t size) {
  
  mainenter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.ProductItemGroup.mainEnter)
}
inline ::std::string* ProductItemGroup::mutable_mainenter() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.ProductItemGroup.mainEnter)
  return mainenter_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProductItemGroup::release_mainenter() {
  // @@protoc_insertion_point(field_release:gt_msg.ProductItemGroup.mainEnter)
  
  return mainenter_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProductItemGroup::set_allocated_mainenter(::std::string* mainenter) {
  if (mainenter != NULL) {
    
  } else {
    
  }
  mainenter_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mainenter);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.ProductItemGroup.mainEnter)
}

// optional string AddFishEnter = 3;
inline void ProductItemGroup::clear_addfishenter() {
  addfishenter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProductItemGroup::addfishenter() const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItemGroup.AddFishEnter)
  return addfishenter_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProductItemGroup::set_addfishenter(const ::std::string& value) {
  
  addfishenter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.ProductItemGroup.AddFishEnter)
}
inline void ProductItemGroup::set_addfishenter(const char* value) {
  
  addfishenter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.ProductItemGroup.AddFishEnter)
}
inline void ProductItemGroup::set_addfishenter(const char* value, size_t size) {
  
  addfishenter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.ProductItemGroup.AddFishEnter)
}
inline ::std::string* ProductItemGroup::mutable_addfishenter() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.ProductItemGroup.AddFishEnter)
  return addfishenter_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProductItemGroup::release_addfishenter() {
  // @@protoc_insertion_point(field_release:gt_msg.ProductItemGroup.AddFishEnter)
  
  return addfishenter_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProductItemGroup::set_allocated_addfishenter(::std::string* addfishenter) {
  if (addfishenter != NULL) {
    
  } else {
    
  }
  addfishenter_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), addfishenter);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.ProductItemGroup.AddFishEnter)
}

// optional bool EnableAddFish = 4;
inline void ProductItemGroup::clear_enableaddfish() {
  enableaddfish_ = false;
}
inline bool ProductItemGroup::enableaddfish() const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItemGroup.EnableAddFish)
  return enableaddfish_;
}
inline void ProductItemGroup::set_enableaddfish(bool value) {
  
  enableaddfish_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.ProductItemGroup.EnableAddFish)
}

// -------------------------------------------------------------------

// FishProductNode

// optional string productName = 1;
inline void FishProductNode::clear_productname() {
  productname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FishProductNode::productname() const {
  // @@protoc_insertion_point(field_get:gt_msg.FishProductNode.productName)
  return productname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FishProductNode::set_productname(const ::std::string& value) {
  
  productname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.FishProductNode.productName)
}
inline void FishProductNode::set_productname(const char* value) {
  
  productname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.FishProductNode.productName)
}
inline void FishProductNode::set_productname(const char* value, size_t size) {
  
  productname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.FishProductNode.productName)
}
inline ::std::string* FishProductNode::mutable_productname() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.FishProductNode.productName)
  return productname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FishProductNode::release_productname() {
  // @@protoc_insertion_point(field_release:gt_msg.FishProductNode.productName)
  
  return productname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FishProductNode::set_allocated_productname(::std::string* productname) {
  if (productname != NULL) {
    
  } else {
    
  }
  productname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), productname);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.FishProductNode.productName)
}

// optional int32 repeatTime = 2;
inline void FishProductNode::clear_repeattime() {
  repeattime_ = 0;
}
inline ::google::protobuf::int32 FishProductNode::repeattime() const {
  // @@protoc_insertion_point(field_get:gt_msg.FishProductNode.repeatTime)
  return repeattime_;
}
inline void FishProductNode::set_repeattime(::google::protobuf::int32 value) {
  
  repeattime_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.FishProductNode.repeatTime)
}

// optional string fishType = 3;
inline void FishProductNode::clear_fishtype() {
  fishtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FishProductNode::fishtype() const {
  // @@protoc_insertion_point(field_get:gt_msg.FishProductNode.fishType)
  return fishtype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FishProductNode::set_fishtype(const ::std::string& value) {
  
  fishtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.FishProductNode.fishType)
}
inline void FishProductNode::set_fishtype(const char* value) {
  
  fishtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.FishProductNode.fishType)
}
inline void FishProductNode::set_fishtype(const char* value, size_t size) {
  
  fishtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.FishProductNode.fishType)
}
inline ::std::string* FishProductNode::mutable_fishtype() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.FishProductNode.fishType)
  return fishtype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FishProductNode::release_fishtype() {
  // @@protoc_insertion_point(field_release:gt_msg.FishProductNode.fishType)
  
  return fishtype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FishProductNode::set_allocated_fishtype(::std::string* fishtype) {
  if (fishtype != NULL) {
    
  } else {
    
  }
  fishtype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fishtype);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.FishProductNode.fishType)
}

// optional int32 startFrame = 4;
inline void FishProductNode::clear_startframe() {
  startframe_ = 0;
}
inline ::google::protobuf::int32 FishProductNode::startframe() const {
  // @@protoc_insertion_point(field_get:gt_msg.FishProductNode.startFrame)
  return startframe_;
}
inline void FishProductNode::set_startframe(::google::protobuf::int32 value) {
  
  startframe_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.FishProductNode.startFrame)
}

// repeated .gt_msg.FishProductNode childs = 5;
inline int FishProductNode::childs_size() const {
  return childs_.size();
}
inline void FishProductNode::clear_childs() {
  childs_.Clear();
}
inline const ::gt_msg::FishProductNode& FishProductNode::childs(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.FishProductNode.childs)
  return childs_.Get(index);
}
inline ::gt_msg::FishProductNode* FishProductNode::mutable_childs(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.FishProductNode.childs)
  return childs_.Mutable(index);
}
inline ::gt_msg::FishProductNode* FishProductNode::add_childs() {
  // @@protoc_insertion_point(field_add:gt_msg.FishProductNode.childs)
  return childs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gt_msg::FishProductNode >*
FishProductNode::mutable_childs() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.FishProductNode.childs)
  return &childs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gt_msg::FishProductNode >&
FishProductNode::childs() const {
  // @@protoc_insertion_point(field_list:gt_msg.FishProductNode.childs)
  return childs_;
}

// -------------------------------------------------------------------

// FishConfig

// optional int32 type = 1;
inline void FishConfig::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 FishConfig::type() const {
  // @@protoc_insertion_point(field_get:gt_msg.FishConfig.type)
  return type_;
}
inline void FishConfig::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.FishConfig.type)
}

// optional string name = 2;
inline void FishConfig::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FishConfig::name() const {
  // @@protoc_insertion_point(field_get:gt_msg.FishConfig.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FishConfig::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.FishConfig.name)
}
inline void FishConfig::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.FishConfig.name)
}
inline void FishConfig::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.FishConfig.name)
}
inline ::std::string* FishConfig::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.FishConfig.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FishConfig::release_name() {
  // @@protoc_insertion_point(field_release:gt_msg.FishConfig.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FishConfig::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.FishConfig.name)
}

// optional float raduis = 3;
inline void FishConfig::clear_raduis() {
  raduis_ = 0;
}
inline float FishConfig::raduis() const {
  // @@protoc_insertion_point(field_get:gt_msg.FishConfig.raduis)
  return raduis_;
}
inline void FishConfig::set_raduis(float value) {
  
  raduis_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.FishConfig.raduis)
}

// -------------------------------------------------------------------

// FishConfigList

// repeated .gt_msg.FishConfig fishConfigs = 1;
inline int FishConfigList::fishconfigs_size() const {
  return fishconfigs_.size();
}
inline void FishConfigList::clear_fishconfigs() {
  fishconfigs_.Clear();
}
inline const ::gt_msg::FishConfig& FishConfigList::fishconfigs(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.FishConfigList.fishConfigs)
  return fishconfigs_.Get(index);
}
inline ::gt_msg::FishConfig* FishConfigList::mutable_fishconfigs(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.FishConfigList.fishConfigs)
  return fishconfigs_.Mutable(index);
}
inline ::gt_msg::FishConfig* FishConfigList::add_fishconfigs() {
  // @@protoc_insertion_point(field_add:gt_msg.FishConfigList.fishConfigs)
  return fishconfigs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gt_msg::FishConfig >*
FishConfigList::mutable_fishconfigs() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.FishConfigList.fishConfigs)
  return &fishconfigs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gt_msg::FishConfig >&
FishConfigList::fishconfigs() const {
  // @@protoc_insertion_point(field_list:gt_msg.FishConfigList.fishConfigs)
  return fishconfigs_;
}

// -------------------------------------------------------------------

// FishData

// optional string fishName = 1;
inline void FishData::clear_fishname() {
  fishname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FishData::fishname() const {
  // @@protoc_insertion_point(field_get:gt_msg.FishData.fishName)
  return fishname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FishData::set_fishname(const ::std::string& value) {
  
  fishname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.FishData.fishName)
}
inline void FishData::set_fishname(const char* value) {
  
  fishname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.FishData.fishName)
}
inline void FishData::set_fishname(const char* value, size_t size) {
  
  fishname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.FishData.fishName)
}
inline ::std::string* FishData::mutable_fishname() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.FishData.fishName)
  return fishname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FishData::release_fishname() {
  // @@protoc_insertion_point(field_release:gt_msg.FishData.fishName)
  
  return fishname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FishData::set_allocated_fishname(::std::string* fishname) {
  if (fishname != NULL) {
    
  } else {
    
  }
  fishname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fishname);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.FishData.fishName)
}

// optional int32 fishImportance = 2;
inline void FishData::clear_fishimportance() {
  fishimportance_ = 0;
}
inline ::google::protobuf::int32 FishData::fishimportance() const {
  // @@protoc_insertion_point(field_get:gt_msg.FishData.fishImportance)
  return fishimportance_;
}
inline void FishData::set_fishimportance(::google::protobuf::int32 value) {
  
  fishimportance_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.FishData.fishImportance)
}

// optional string fishModel = 3;
inline void FishData::clear_fishmodel() {
  fishmodel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FishData::fishmodel() const {
  // @@protoc_insertion_point(field_get:gt_msg.FishData.fishModel)
  return fishmodel_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FishData::set_fishmodel(const ::std::string& value) {
  
  fishmodel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.FishData.fishModel)
}
inline void FishData::set_fishmodel(const char* value) {
  
  fishmodel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.FishData.fishModel)
}
inline void FishData::set_fishmodel(const char* value, size_t size) {
  
  fishmodel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.FishData.fishModel)
}
inline ::std::string* FishData::mutable_fishmodel() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.FishData.fishModel)
  return fishmodel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FishData::release_fishmodel() {
  // @@protoc_insertion_point(field_release:gt_msg.FishData.fishModel)
  
  return fishmodel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FishData::set_allocated_fishmodel(::std::string* fishmodel) {
  if (fishmodel != NULL) {
    
  } else {
    
  }
  fishmodel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fishmodel);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.FishData.fishModel)
}

// repeated int32 FishScore = 4;
inline int FishData::fishscore_size() const {
  return fishscore_.size();
}
inline void FishData::clear_fishscore() {
  fishscore_.Clear();
}
inline ::google::protobuf::int32 FishData::fishscore(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.FishData.FishScore)
  return fishscore_.Get(index);
}
inline void FishData::set_fishscore(int index, ::google::protobuf::int32 value) {
  fishscore_.Set(index, value);
  // @@protoc_insertion_point(field_set:gt_msg.FishData.FishScore)
}
inline void FishData::add_fishscore(::google::protobuf::int32 value) {
  fishscore_.Add(value);
  // @@protoc_insertion_point(field_add:gt_msg.FishData.FishScore)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
FishData::fishscore() const {
  // @@protoc_insertion_point(field_list:gt_msg.FishData.FishScore)
  return fishscore_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
FishData::mutable_fishscore() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.FishData.FishScore)
  return &fishscore_;
}

// repeated string fishDieEffect = 5;
inline int FishData::fishdieeffect_size() const {
  return fishdieeffect_.size();
}
inline void FishData::clear_fishdieeffect() {
  fishdieeffect_.Clear();
}
inline const ::std::string& FishData::fishdieeffect(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.FishData.fishDieEffect)
  return fishdieeffect_.Get(index);
}
inline ::std::string* FishData::mutable_fishdieeffect(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.FishData.fishDieEffect)
  return fishdieeffect_.Mutable(index);
}
inline void FishData::set_fishdieeffect(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:gt_msg.FishData.fishDieEffect)
  fishdieeffect_.Mutable(index)->assign(value);
}
inline void FishData::set_fishdieeffect(int index, const char* value) {
  fishdieeffect_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:gt_msg.FishData.fishDieEffect)
}
inline void FishData::set_fishdieeffect(int index, const char* value, size_t size) {
  fishdieeffect_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:gt_msg.FishData.fishDieEffect)
}
inline ::std::string* FishData::add_fishdieeffect() {
  // @@protoc_insertion_point(field_add_mutable:gt_msg.FishData.fishDieEffect)
  return fishdieeffect_.Add();
}
inline void FishData::add_fishdieeffect(const ::std::string& value) {
  fishdieeffect_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:gt_msg.FishData.fishDieEffect)
}
inline void FishData::add_fishdieeffect(const char* value) {
  fishdieeffect_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:gt_msg.FishData.fishDieEffect)
}
inline void FishData::add_fishdieeffect(const char* value, size_t size) {
  fishdieeffect_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:gt_msg.FishData.fishDieEffect)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
FishData::fishdieeffect() const {
  // @@protoc_insertion_point(field_list:gt_msg.FishData.fishDieEffect)
  return fishdieeffect_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
FishData::mutable_fishdieeffect() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.FishData.fishDieEffect)
  return &fishdieeffect_;
}

// repeated .gt_msg.FishActionData fishActionDataList = 6;
inline int FishData::fishactiondatalist_size() const {
  return fishactiondatalist_.size();
}
inline void FishData::clear_fishactiondatalist() {
  fishactiondatalist_.Clear();
}
inline const ::gt_msg::FishActionData& FishData::fishactiondatalist(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.FishData.fishActionDataList)
  return fishactiondatalist_.Get(index);
}
inline ::gt_msg::FishActionData* FishData::mutable_fishactiondatalist(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.FishData.fishActionDataList)
  return fishactiondatalist_.Mutable(index);
}
inline ::gt_msg::FishActionData* FishData::add_fishactiondatalist() {
  // @@protoc_insertion_point(field_add:gt_msg.FishData.fishActionDataList)
  return fishactiondatalist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gt_msg::FishActionData >*
FishData::mutable_fishactiondatalist() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.FishData.fishActionDataList)
  return &fishactiondatalist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gt_msg::FishActionData >&
FishData::fishactiondatalist() const {
  // @@protoc_insertion_point(field_list:gt_msg.FishData.fishActionDataList)
  return fishactiondatalist_;
}

// optional float AttackHight = 7;
inline void FishData::clear_attackhight() {
  attackhight_ = 0;
}
inline float FishData::attackhight() const {
  // @@protoc_insertion_point(field_get:gt_msg.FishData.AttackHight)
  return attackhight_;
}
inline void FishData::set_attackhight(float value) {
  
  attackhight_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.FishData.AttackHight)
}

// -------------------------------------------------------------------

// FishActionData

// optional string ActionName = 1;
inline void FishActionData::clear_actionname() {
  actionname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FishActionData::actionname() const {
  // @@protoc_insertion_point(field_get:gt_msg.FishActionData.ActionName)
  return actionname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FishActionData::set_actionname(const ::std::string& value) {
  
  actionname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.FishActionData.ActionName)
}
inline void FishActionData::set_actionname(const char* value) {
  
  actionname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.FishActionData.ActionName)
}
inline void FishActionData::set_actionname(const char* value, size_t size) {
  
  actionname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.FishActionData.ActionName)
}
inline ::std::string* FishActionData::mutable_actionname() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.FishActionData.ActionName)
  return actionname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FishActionData::release_actionname() {
  // @@protoc_insertion_point(field_release:gt_msg.FishActionData.ActionName)
  
  return actionname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FishActionData::set_allocated_actionname(::std::string* actionname) {
  if (actionname != NULL) {
    
  } else {
    
  }
  actionname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actionname);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.FishActionData.ActionName)
}

// optional int32 ActionFrame = 2;
inline void FishActionData::clear_actionframe() {
  actionframe_ = 0;
}
inline ::google::protobuf::int32 FishActionData::actionframe() const {
  // @@protoc_insertion_point(field_get:gt_msg.FishActionData.ActionFrame)
  return actionframe_;
}
inline void FishActionData::set_actionframe(::google::protobuf::int32 value) {
  
  actionframe_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.FishActionData.ActionFrame)
}

// optional bool IsIdle = 3;
inline void FishActionData::clear_isidle() {
  isidle_ = false;
}
inline bool FishActionData::isidle() const {
  // @@protoc_insertion_point(field_get:gt_msg.FishActionData.IsIdle)
  return isidle_;
}
inline void FishActionData::set_isidle(bool value) {
  
  isidle_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.FishActionData.IsIdle)
}

// -------------------------------------------------------------------

// FishCollider

// optional string fishName = 1;
inline void FishCollider::clear_fishname() {
  fishname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FishCollider::fishname() const {
  // @@protoc_insertion_point(field_get:gt_msg.FishCollider.fishName)
  return fishname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FishCollider::set_fishname(const ::std::string& value) {
  
  fishname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.FishCollider.fishName)
}
inline void FishCollider::set_fishname(const char* value) {
  
  fishname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.FishCollider.fishName)
}
inline void FishCollider::set_fishname(const char* value, size_t size) {
  
  fishname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.FishCollider.fishName)
}
inline ::std::string* FishCollider::mutable_fishname() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.FishCollider.fishName)
  return fishname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FishCollider::release_fishname() {
  // @@protoc_insertion_point(field_release:gt_msg.FishCollider.fishName)
  
  return fishname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FishCollider::set_allocated_fishname(::std::string* fishname) {
  if (fishname != NULL) {
    
  } else {
    
  }
  fishname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fishname);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.FishCollider.fishName)
}

// optional int32 zBase = 2;
inline void FishCollider::clear_zbase() {
  zbase_ = 0;
}
inline ::google::protobuf::int32 FishCollider::zbase() const {
  // @@protoc_insertion_point(field_get:gt_msg.FishCollider.zBase)
  return zbase_;
}
inline void FishCollider::set_zbase(::google::protobuf::int32 value) {
  
  zbase_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.FishCollider.zBase)
}

// repeated .gt_msg.ColliderCircle colliders = 3;
inline int FishCollider::colliders_size() const {
  return colliders_.size();
}
inline void FishCollider::clear_colliders() {
  colliders_.Clear();
}
inline const ::gt_msg::ColliderCircle& FishCollider::colliders(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.FishCollider.colliders)
  return colliders_.Get(index);
}
inline ::gt_msg::ColliderCircle* FishCollider::mutable_colliders(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.FishCollider.colliders)
  return colliders_.Mutable(index);
}
inline ::gt_msg::ColliderCircle* FishCollider::add_colliders() {
  // @@protoc_insertion_point(field_add:gt_msg.FishCollider.colliders)
  return colliders_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gt_msg::ColliderCircle >*
FishCollider::mutable_colliders() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.FishCollider.colliders)
  return &colliders_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gt_msg::ColliderCircle >&
FishCollider::colliders() const {
  // @@protoc_insertion_point(field_list:gt_msg.FishCollider.colliders)
  return colliders_;
}

// -------------------------------------------------------------------

// FishColliderGroup

// repeated .gt_msg.FishCollider colliderList = 1;
inline int FishColliderGroup::colliderlist_size() const {
  return colliderlist_.size();
}
inline void FishColliderGroup::clear_colliderlist() {
  colliderlist_.Clear();
}
inline const ::gt_msg::FishCollider& FishColliderGroup::colliderlist(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.FishColliderGroup.colliderList)
  return colliderlist_.Get(index);
}
inline ::gt_msg::FishCollider* FishColliderGroup::mutable_colliderlist(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.FishColliderGroup.colliderList)
  return colliderlist_.Mutable(index);
}
inline ::gt_msg::FishCollider* FishColliderGroup::add_colliderlist() {
  // @@protoc_insertion_point(field_add:gt_msg.FishColliderGroup.colliderList)
  return colliderlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gt_msg::FishCollider >*
FishColliderGroup::mutable_colliderlist() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.FishColliderGroup.colliderList)
  return &colliderlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gt_msg::FishCollider >&
FishColliderGroup::colliderlist() const {
  // @@protoc_insertion_point(field_list:gt_msg.FishColliderGroup.colliderList)
  return colliderlist_;
}

// -------------------------------------------------------------------

// BulletData

// optional int32 configID = 1;
inline void BulletData::clear_configid() {
  configid_ = 0;
}
inline ::google::protobuf::int32 BulletData::configid() const {
  // @@protoc_insertion_point(field_get:gt_msg.BulletData.configID)
  return configid_;
}
inline void BulletData::set_configid(::google::protobuf::int32 value) {
  
  configid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.BulletData.configID)
}

// optional string model = 2;
inline void BulletData::clear_model() {
  model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BulletData::model() const {
  // @@protoc_insertion_point(field_get:gt_msg.BulletData.model)
  return model_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BulletData::set_model(const ::std::string& value) {
  
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.BulletData.model)
}
inline void BulletData::set_model(const char* value) {
  
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.BulletData.model)
}
inline void BulletData::set_model(const char* value, size_t size) {
  
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.BulletData.model)
}
inline ::std::string* BulletData::mutable_model() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.BulletData.model)
  return model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BulletData::release_model() {
  // @@protoc_insertion_point(field_release:gt_msg.BulletData.model)
  
  return model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BulletData::set_allocated_model(::std::string* model) {
  if (model != NULL) {
    
  } else {
    
  }
  model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), model);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.BulletData.model)
}

// optional int32 speed = 3;
inline void BulletData::clear_speed() {
  speed_ = 0;
}
inline ::google::protobuf::int32 BulletData::speed() const {
  // @@protoc_insertion_point(field_get:gt_msg.BulletData.speed)
  return speed_;
}
inline void BulletData::set_speed(::google::protobuf::int32 value) {
  
  speed_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.BulletData.speed)
}

// optional float radius = 4;
inline void BulletData::clear_radius() {
  radius_ = 0;
}
inline float BulletData::radius() const {
  // @@protoc_insertion_point(field_get:gt_msg.BulletData.radius)
  return radius_;
}
inline void BulletData::set_radius(float value) {
  
  radius_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.BulletData.radius)
}

// optional string yuwangModel = 5;
inline void BulletData::clear_yuwangmodel() {
  yuwangmodel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BulletData::yuwangmodel() const {
  // @@protoc_insertion_point(field_get:gt_msg.BulletData.yuwangModel)
  return yuwangmodel_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BulletData::set_yuwangmodel(const ::std::string& value) {
  
  yuwangmodel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.BulletData.yuwangModel)
}
inline void BulletData::set_yuwangmodel(const char* value) {
  
  yuwangmodel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.BulletData.yuwangModel)
}
inline void BulletData::set_yuwangmodel(const char* value, size_t size) {
  
  yuwangmodel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.BulletData.yuwangModel)
}
inline ::std::string* BulletData::mutable_yuwangmodel() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.BulletData.yuwangModel)
  return yuwangmodel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BulletData::release_yuwangmodel() {
  // @@protoc_insertion_point(field_release:gt_msg.BulletData.yuwangModel)
  
  return yuwangmodel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BulletData::set_allocated_yuwangmodel(::std::string* yuwangmodel) {
  if (yuwangmodel != NULL) {
    
  } else {
    
  }
  yuwangmodel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), yuwangmodel);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.BulletData.yuwangModel)
}

// optional string turretModel = 6;
inline void BulletData::clear_turretmodel() {
  turretmodel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BulletData::turretmodel() const {
  // @@protoc_insertion_point(field_get:gt_msg.BulletData.turretModel)
  return turretmodel_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BulletData::set_turretmodel(const ::std::string& value) {
  
  turretmodel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.BulletData.turretModel)
}
inline void BulletData::set_turretmodel(const char* value) {
  
  turretmodel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.BulletData.turretModel)
}
inline void BulletData::set_turretmodel(const char* value, size_t size) {
  
  turretmodel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.BulletData.turretModel)
}
inline ::std::string* BulletData::mutable_turretmodel() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.BulletData.turretModel)
  return turretmodel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BulletData::release_turretmodel() {
  // @@protoc_insertion_point(field_release:gt_msg.BulletData.turretModel)
  
  return turretmodel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BulletData::set_allocated_turretmodel(::std::string* turretmodel) {
  if (turretmodel != NULL) {
    
  } else {
    
  }
  turretmodel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), turretmodel);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.BulletData.turretModel)
}

// optional int32 multiple = 7;
inline void BulletData::clear_multiple() {
  multiple_ = 0;
}
inline ::google::protobuf::int32 BulletData::multiple() const {
  // @@protoc_insertion_point(field_get:gt_msg.BulletData.multiple)
  return multiple_;
}
inline void BulletData::set_multiple(::google::protobuf::int32 value) {
  
  multiple_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.BulletData.multiple)
}

// -------------------------------------------------------------------

// MagicData

// optional int32 configID = 1;
inline void MagicData::clear_configid() {
  configid_ = 0;
}
inline ::google::protobuf::int32 MagicData::configid() const {
  // @@protoc_insertion_point(field_get:gt_msg.MagicData.configID)
  return configid_;
}
inline void MagicData::set_configid(::google::protobuf::int32 value) {
  
  configid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.MagicData.configID)
}

// optional string model = 2;
inline void MagicData::clear_model() {
  model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MagicData::model() const {
  // @@protoc_insertion_point(field_get:gt_msg.MagicData.model)
  return model_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MagicData::set_model(const ::std::string& value) {
  
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.MagicData.model)
}
inline void MagicData::set_model(const char* value) {
  
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.MagicData.model)
}
inline void MagicData::set_model(const char* value, size_t size) {
  
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.MagicData.model)
}
inline ::std::string* MagicData::mutable_model() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.MagicData.model)
  return model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MagicData::release_model() {
  // @@protoc_insertion_point(field_release:gt_msg.MagicData.model)
  
  return model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MagicData::set_allocated_model(::std::string* model) {
  if (model != NULL) {
    
  } else {
    
  }
  model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), model);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.MagicData.model)
}

// optional int32 multiple = 7;
inline void MagicData::clear_multiple() {
  multiple_ = 0;
}
inline ::google::protobuf::int32 MagicData::multiple() const {
  // @@protoc_insertion_point(field_get:gt_msg.MagicData.multiple)
  return multiple_;
}
inline void MagicData::set_multiple(::google::protobuf::int32 value) {
  
  multiple_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.MagicData.multiple)
}

// -------------------------------------------------------------------

// PropData

// optional int32 configID = 1;
inline void PropData::clear_configid() {
  configid_ = 0;
}
inline ::google::protobuf::int32 PropData::configid() const {
  // @@protoc_insertion_point(field_get:gt_msg.PropData.configID)
  return configid_;
}
inline void PropData::set_configid(::google::protobuf::int32 value) {
  
  configid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.PropData.configID)
}

// optional int32 price = 7;
inline void PropData::clear_price() {
  price_ = 0;
}
inline ::google::protobuf::int32 PropData::price() const {
  // @@protoc_insertion_point(field_get:gt_msg.PropData.price)
  return price_;
}
inline void PropData::set_price(::google::protobuf::int32 value) {
  
  price_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.PropData.price)
}

// -------------------------------------------------------------------

// BulletExtern

// optional int32 TurretID = 1;
inline void BulletExtern::clear_turretid() {
  turretid_ = 0;
}
inline ::google::protobuf::int32 BulletExtern::turretid() const {
  // @@protoc_insertion_point(field_get:gt_msg.BulletExtern.TurretID)
  return turretid_;
}
inline void BulletExtern::set_turretid(::google::protobuf::int32 value) {
  
  turretid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.BulletExtern.TurretID)
}

// optional string TurretModel = 2;
inline void BulletExtern::clear_turretmodel() {
  turretmodel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BulletExtern::turretmodel() const {
  // @@protoc_insertion_point(field_get:gt_msg.BulletExtern.TurretModel)
  return turretmodel_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BulletExtern::set_turretmodel(const ::std::string& value) {
  
  turretmodel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.BulletExtern.TurretModel)
}
inline void BulletExtern::set_turretmodel(const char* value) {
  
  turretmodel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.BulletExtern.TurretModel)
}
inline void BulletExtern::set_turretmodel(const char* value, size_t size) {
  
  turretmodel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.BulletExtern.TurretModel)
}
inline ::std::string* BulletExtern::mutable_turretmodel() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.BulletExtern.TurretModel)
  return turretmodel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BulletExtern::release_turretmodel() {
  // @@protoc_insertion_point(field_release:gt_msg.BulletExtern.TurretModel)
  
  return turretmodel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BulletExtern::set_allocated_turretmodel(::std::string* turretmodel) {
  if (turretmodel != NULL) {
    
  } else {
    
  }
  turretmodel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), turretmodel);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.BulletExtern.TurretModel)
}

// optional int32 ConfigID = 3;
inline void BulletExtern::clear_configid() {
  configid_ = 0;
}
inline ::google::protobuf::int32 BulletExtern::configid() const {
  // @@protoc_insertion_point(field_get:gt_msg.BulletExtern.ConfigID)
  return configid_;
}
inline void BulletExtern::set_configid(::google::protobuf::int32 value) {
  
  configid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.BulletExtern.ConfigID)
}

// optional string BulletModel = 4;
inline void BulletExtern::clear_bulletmodel() {
  bulletmodel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BulletExtern::bulletmodel() const {
  // @@protoc_insertion_point(field_get:gt_msg.BulletExtern.BulletModel)
  return bulletmodel_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BulletExtern::set_bulletmodel(const ::std::string& value) {
  
  bulletmodel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.BulletExtern.BulletModel)
}
inline void BulletExtern::set_bulletmodel(const char* value) {
  
  bulletmodel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.BulletExtern.BulletModel)
}
inline void BulletExtern::set_bulletmodel(const char* value, size_t size) {
  
  bulletmodel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.BulletExtern.BulletModel)
}
inline ::std::string* BulletExtern::mutable_bulletmodel() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.BulletExtern.BulletModel)
  return bulletmodel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BulletExtern::release_bulletmodel() {
  // @@protoc_insertion_point(field_release:gt_msg.BulletExtern.BulletModel)
  
  return bulletmodel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BulletExtern::set_allocated_bulletmodel(::std::string* bulletmodel) {
  if (bulletmodel != NULL) {
    
  } else {
    
  }
  bulletmodel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bulletmodel);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.BulletExtern.BulletModel)
}

// optional string NetModel = 5;
inline void BulletExtern::clear_netmodel() {
  netmodel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BulletExtern::netmodel() const {
  // @@protoc_insertion_point(field_get:gt_msg.BulletExtern.NetModel)
  return netmodel_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BulletExtern::set_netmodel(const ::std::string& value) {
  
  netmodel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.BulletExtern.NetModel)
}
inline void BulletExtern::set_netmodel(const char* value) {
  
  netmodel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.BulletExtern.NetModel)
}
inline void BulletExtern::set_netmodel(const char* value, size_t size) {
  
  netmodel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.BulletExtern.NetModel)
}
inline ::std::string* BulletExtern::mutable_netmodel() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.BulletExtern.NetModel)
  return netmodel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BulletExtern::release_netmodel() {
  // @@protoc_insertion_point(field_release:gt_msg.BulletExtern.NetModel)
  
  return netmodel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BulletExtern::set_allocated_netmodel(::std::string* netmodel) {
  if (netmodel != NULL) {
    
  } else {
    
  }
  netmodel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), netmodel);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.BulletExtern.NetModel)
}

// optional int32 Multiple = 6;
inline void BulletExtern::clear_multiple() {
  multiple_ = 0;
}
inline ::google::protobuf::int32 BulletExtern::multiple() const {
  // @@protoc_insertion_point(field_get:gt_msg.BulletExtern.Multiple)
  return multiple_;
}
inline void BulletExtern::set_multiple(::google::protobuf::int32 value) {
  
  multiple_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.BulletExtern.Multiple)
}

// optional int32 Speed = 7;
inline void BulletExtern::clear_speed() {
  speed_ = 0;
}
inline ::google::protobuf::int32 BulletExtern::speed() const {
  // @@protoc_insertion_point(field_get:gt_msg.BulletExtern.Speed)
  return speed_;
}
inline void BulletExtern::set_speed(::google::protobuf::int32 value) {
  
  speed_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.BulletExtern.Speed)
}

// optional float Radius = 8;
inline void BulletExtern::clear_radius() {
  radius_ = 0;
}
inline float BulletExtern::radius() const {
  // @@protoc_insertion_point(field_get:gt_msg.BulletExtern.Radius)
  return radius_;
}
inline void BulletExtern::set_radius(float value) {
  
  radius_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.BulletExtern.Radius)
}

// optional int32 SoundIndex = 9;
inline void BulletExtern::clear_soundindex() {
  soundindex_ = 0;
}
inline ::google::protobuf::int32 BulletExtern::soundindex() const {
  // @@protoc_insertion_point(field_get:gt_msg.BulletExtern.SoundIndex)
  return soundindex_;
}
inline void BulletExtern::set_soundindex(::google::protobuf::int32 value) {
  
  soundindex_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.BulletExtern.SoundIndex)
}

// optional string Paokou = 10;
inline void BulletExtern::clear_paokou() {
  paokou_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BulletExtern::paokou() const {
  // @@protoc_insertion_point(field_get:gt_msg.BulletExtern.Paokou)
  return paokou_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BulletExtern::set_paokou(const ::std::string& value) {
  
  paokou_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.BulletExtern.Paokou)
}
inline void BulletExtern::set_paokou(const char* value) {
  
  paokou_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.BulletExtern.Paokou)
}
inline void BulletExtern::set_paokou(const char* value, size_t size) {
  
  paokou_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.BulletExtern.Paokou)
}
inline ::std::string* BulletExtern::mutable_paokou() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.BulletExtern.Paokou)
  return paokou_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BulletExtern::release_paokou() {
  // @@protoc_insertion_point(field_release:gt_msg.BulletExtern.Paokou)
  
  return paokou_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BulletExtern::set_allocated_paokou(::std::string* paokou) {
  if (paokou != NULL) {
    
  } else {
    
  }
  paokou_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), paokou);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.BulletExtern.Paokou)
}

// optional string SkillModel = 11;
inline void BulletExtern::clear_skillmodel() {
  skillmodel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BulletExtern::skillmodel() const {
  // @@protoc_insertion_point(field_get:gt_msg.BulletExtern.SkillModel)
  return skillmodel_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BulletExtern::set_skillmodel(const ::std::string& value) {
  
  skillmodel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.BulletExtern.SkillModel)
}
inline void BulletExtern::set_skillmodel(const char* value) {
  
  skillmodel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.BulletExtern.SkillModel)
}
inline void BulletExtern::set_skillmodel(const char* value, size_t size) {
  
  skillmodel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.BulletExtern.SkillModel)
}
inline ::std::string* BulletExtern::mutable_skillmodel() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.BulletExtern.SkillModel)
  return skillmodel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BulletExtern::release_skillmodel() {
  // @@protoc_insertion_point(field_release:gt_msg.BulletExtern.SkillModel)
  
  return skillmodel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BulletExtern::set_allocated_skillmodel(::std::string* skillmodel) {
  if (skillmodel != NULL) {
    
  } else {
    
  }
  skillmodel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), skillmodel);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.BulletExtern.SkillModel)
}

// optional string Skillbg = 12;
inline void BulletExtern::clear_skillbg() {
  skillbg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BulletExtern::skillbg() const {
  // @@protoc_insertion_point(field_get:gt_msg.BulletExtern.Skillbg)
  return skillbg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BulletExtern::set_skillbg(const ::std::string& value) {
  
  skillbg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.BulletExtern.Skillbg)
}
inline void BulletExtern::set_skillbg(const char* value) {
  
  skillbg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.BulletExtern.Skillbg)
}
inline void BulletExtern::set_skillbg(const char* value, size_t size) {
  
  skillbg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.BulletExtern.Skillbg)
}
inline ::std::string* BulletExtern::mutable_skillbg() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.BulletExtern.Skillbg)
  return skillbg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BulletExtern::release_skillbg() {
  // @@protoc_insertion_point(field_release:gt_msg.BulletExtern.Skillbg)
  
  return skillbg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BulletExtern::set_allocated_skillbg(::std::string* skillbg) {
  if (skillbg != NULL) {
    
  } else {
    
  }
  skillbg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), skillbg);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.BulletExtern.Skillbg)
}

// -------------------------------------------------------------------

// BulletConfig

// repeated .gt_msg.BulletExtern bulletList = 1;
inline int BulletConfig::bulletlist_size() const {
  return bulletlist_.size();
}
inline void BulletConfig::clear_bulletlist() {
  bulletlist_.Clear();
}
inline const ::gt_msg::BulletExtern& BulletConfig::bulletlist(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.BulletConfig.bulletList)
  return bulletlist_.Get(index);
}
inline ::gt_msg::BulletExtern* BulletConfig::mutable_bulletlist(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.BulletConfig.bulletList)
  return bulletlist_.Mutable(index);
}
inline ::gt_msg::BulletExtern* BulletConfig::add_bulletlist() {
  // @@protoc_insertion_point(field_add:gt_msg.BulletConfig.bulletList)
  return bulletlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gt_msg::BulletExtern >*
BulletConfig::mutable_bulletlist() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.BulletConfig.bulletList)
  return &bulletlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gt_msg::BulletExtern >&
BulletConfig::bulletlist() const {
  // @@protoc_insertion_point(field_list:gt_msg.BulletConfig.bulletList)
  return bulletlist_;
}

// -------------------------------------------------------------------

// InstantData

// optional int32 configID = 1;
inline void InstantData::clear_configid() {
  configid_ = 0;
}
inline ::google::protobuf::int32 InstantData::configid() const {
  // @@protoc_insertion_point(field_get:gt_msg.InstantData.configID)
  return configid_;
}
inline void InstantData::set_configid(::google::protobuf::int32 value) {
  
  configid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.InstantData.configID)
}

// optional int32 multiple = 2;
inline void InstantData::clear_multiple() {
  multiple_ = 0;
}
inline ::google::protobuf::int32 InstantData::multiple() const {
  // @@protoc_insertion_point(field_get:gt_msg.InstantData.multiple)
  return multiple_;
}
inline void InstantData::set_multiple(::google::protobuf::int32 value) {
  
  multiple_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.InstantData.multiple)
}

// optional int32 speed = 3;
inline void InstantData::clear_speed() {
  speed_ = 0;
}
inline ::google::protobuf::int32 InstantData::speed() const {
  // @@protoc_insertion_point(field_get:gt_msg.InstantData.speed)
  return speed_;
}
inline void InstantData::set_speed(::google::protobuf::int32 value) {
  
  speed_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.InstantData.speed)
}

// optional string model = 4;
inline void InstantData::clear_model() {
  model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InstantData::model() const {
  // @@protoc_insertion_point(field_get:gt_msg.InstantData.model)
  return model_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstantData::set_model(const ::std::string& value) {
  
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.InstantData.model)
}
inline void InstantData::set_model(const char* value) {
  
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.InstantData.model)
}
inline void InstantData::set_model(const char* value, size_t size) {
  
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.InstantData.model)
}
inline ::std::string* InstantData::mutable_model() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.InstantData.model)
  return model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InstantData::release_model() {
  // @@protoc_insertion_point(field_release:gt_msg.InstantData.model)
  
  return model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstantData::set_allocated_model(::std::string* model) {
  if (model != NULL) {
    
  } else {
    
  }
  model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), model);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.InstantData.model)
}

// optional string effect = 5;
inline void InstantData::clear_effect() {
  effect_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InstantData::effect() const {
  // @@protoc_insertion_point(field_get:gt_msg.InstantData.effect)
  return effect_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstantData::set_effect(const ::std::string& value) {
  
  effect_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.InstantData.effect)
}
inline void InstantData::set_effect(const char* value) {
  
  effect_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.InstantData.effect)
}
inline void InstantData::set_effect(const char* value, size_t size) {
  
  effect_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.InstantData.effect)
}
inline ::std::string* InstantData::mutable_effect() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.InstantData.effect)
  return effect_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InstantData::release_effect() {
  // @@protoc_insertion_point(field_release:gt_msg.InstantData.effect)
  
  return effect_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstantData::set_allocated_effect(::std::string* effect) {
  if (effect != NULL) {
    
  } else {
    
  }
  effect_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), effect);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.InstantData.effect)
}

// optional string discribe = 6;
inline void InstantData::clear_discribe() {
  discribe_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InstantData::discribe() const {
  // @@protoc_insertion_point(field_get:gt_msg.InstantData.discribe)
  return discribe_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstantData::set_discribe(const ::std::string& value) {
  
  discribe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.InstantData.discribe)
}
inline void InstantData::set_discribe(const char* value) {
  
  discribe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.InstantData.discribe)
}
inline void InstantData::set_discribe(const char* value, size_t size) {
  
  discribe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.InstantData.discribe)
}
inline ::std::string* InstantData::mutable_discribe() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.InstantData.discribe)
  return discribe_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InstantData::release_discribe() {
  // @@protoc_insertion_point(field_release:gt_msg.InstantData.discribe)
  
  return discribe_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstantData::set_allocated_discribe(::std::string* discribe) {
  if (discribe != NULL) {
    
  } else {
    
  }
  discribe_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), discribe);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.InstantData.discribe)
}

// -------------------------------------------------------------------

// FreezeData

// optional int32 frame = 1;
inline void FreezeData::clear_frame() {
  frame_ = 0;
}
inline ::google::protobuf::int32 FreezeData::frame() const {
  // @@protoc_insertion_point(field_get:gt_msg.FreezeData.frame)
  return frame_;
}
inline void FreezeData::set_frame(::google::protobuf::int32 value) {
  
  frame_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.FreezeData.frame)
}

// optional int32 duration = 2;
inline void FreezeData::clear_duration() {
  duration_ = 0;
}
inline ::google::protobuf::int32 FreezeData::duration() const {
  // @@protoc_insertion_point(field_get:gt_msg.FreezeData.duration)
  return duration_;
}
inline void FreezeData::set_duration(::google::protobuf::int32 value) {
  
  duration_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.FreezeData.duration)
}

// -------------------------------------------------------------------

// FastData

// optional int32 frame = 1;
inline void FastData::clear_frame() {
  frame_ = 0;
}
inline ::google::protobuf::int32 FastData::frame() const {
  // @@protoc_insertion_point(field_get:gt_msg.FastData.frame)
  return frame_;
}
inline void FastData::set_frame(::google::protobuf::int32 value) {
  
  frame_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.FastData.frame)
}

// optional float speed = 2;
inline void FastData::clear_speed() {
  speed_ = 0;
}
inline float FastData::speed() const {
  // @@protoc_insertion_point(field_get:gt_msg.FastData.speed)
  return speed_;
}
inline void FastData::set_speed(float value) {
  
  speed_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.FastData.speed)
}

// optional int32 Duration = 3;
inline void FastData::clear_duration() {
  duration_ = 0;
}
inline ::google::protobuf::int32 FastData::duration() const {
  // @@protoc_insertion_point(field_get:gt_msg.FastData.Duration)
  return duration_;
}
inline void FastData::set_duration(::google::protobuf::int32 value) {
  
  duration_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.FastData.Duration)
}

// -------------------------------------------------------------------

// JoinFreeRequestfish3d

// optional string userId = 1;
inline void JoinFreeRequestfish3d::clear_userid() {
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& JoinFreeRequestfish3d::userid() const {
  // @@protoc_insertion_point(field_get:gt_msg.JoinFreeRequestfish3d.userId)
  return userid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JoinFreeRequestfish3d::set_userid(const ::std::string& value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.JoinFreeRequestfish3d.userId)
}
inline void JoinFreeRequestfish3d::set_userid(const char* value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.JoinFreeRequestfish3d.userId)
}
inline void JoinFreeRequestfish3d::set_userid(const char* value, size_t size) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.JoinFreeRequestfish3d.userId)
}
inline ::std::string* JoinFreeRequestfish3d::mutable_userid() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.JoinFreeRequestfish3d.userId)
  return userid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JoinFreeRequestfish3d::release_userid() {
  // @@protoc_insertion_point(field_release:gt_msg.JoinFreeRequestfish3d.userId)
  
  return userid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JoinFreeRequestfish3d::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    
  } else {
    
  }
  userid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.JoinFreeRequestfish3d.userId)
}

// optional int32 tableId = 2;
inline void JoinFreeRequestfish3d::clear_tableid() {
  tableid_ = 0;
}
inline ::google::protobuf::int32 JoinFreeRequestfish3d::tableid() const {
  // @@protoc_insertion_point(field_get:gt_msg.JoinFreeRequestfish3d.tableId)
  return tableid_;
}
inline void JoinFreeRequestfish3d::set_tableid(::google::protobuf::int32 value) {
  
  tableid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.JoinFreeRequestfish3d.tableId)
}

// optional int32 seatId = 3;
inline void JoinFreeRequestfish3d::clear_seatid() {
  seatid_ = 0;
}
inline ::google::protobuf::int32 JoinFreeRequestfish3d::seatid() const {
  // @@protoc_insertion_point(field_get:gt_msg.JoinFreeRequestfish3d.seatId)
  return seatid_;
}
inline void JoinFreeRequestfish3d::set_seatid(::google::protobuf::int32 value) {
  
  seatid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.JoinFreeRequestfish3d.seatId)
}

// -------------------------------------------------------------------

// JoinFreeResponsefish3d

// optional int32 nowFrame = 1;
inline void JoinFreeResponsefish3d::clear_nowframe() {
  nowframe_ = 0;
}
inline ::google::protobuf::int32 JoinFreeResponsefish3d::nowframe() const {
  // @@protoc_insertion_point(field_get:gt_msg.JoinFreeResponsefish3d.nowFrame)
  return nowframe_;
}
inline void JoinFreeResponsefish3d::set_nowframe(::google::protobuf::int32 value) {
  
  nowframe_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.JoinFreeResponsefish3d.nowFrame)
}

// repeated string rootMessage = 2;
inline int JoinFreeResponsefish3d::rootmessage_size() const {
  return rootmessage_.size();
}
inline void JoinFreeResponsefish3d::clear_rootmessage() {
  rootmessage_.Clear();
}
inline const ::std::string& JoinFreeResponsefish3d::rootmessage(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.JoinFreeResponsefish3d.rootMessage)
  return rootmessage_.Get(index);
}
inline ::std::string* JoinFreeResponsefish3d::mutable_rootmessage(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.JoinFreeResponsefish3d.rootMessage)
  return rootmessage_.Mutable(index);
}
inline void JoinFreeResponsefish3d::set_rootmessage(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:gt_msg.JoinFreeResponsefish3d.rootMessage)
  rootmessage_.Mutable(index)->assign(value);
}
inline void JoinFreeResponsefish3d::set_rootmessage(int index, const char* value) {
  rootmessage_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:gt_msg.JoinFreeResponsefish3d.rootMessage)
}
inline void JoinFreeResponsefish3d::set_rootmessage(int index, const char* value, size_t size) {
  rootmessage_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:gt_msg.JoinFreeResponsefish3d.rootMessage)
}
inline ::std::string* JoinFreeResponsefish3d::add_rootmessage() {
  // @@protoc_insertion_point(field_add_mutable:gt_msg.JoinFreeResponsefish3d.rootMessage)
  return rootmessage_.Add();
}
inline void JoinFreeResponsefish3d::add_rootmessage(const ::std::string& value) {
  rootmessage_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:gt_msg.JoinFreeResponsefish3d.rootMessage)
}
inline void JoinFreeResponsefish3d::add_rootmessage(const char* value) {
  rootmessage_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:gt_msg.JoinFreeResponsefish3d.rootMessage)
}
inline void JoinFreeResponsefish3d::add_rootmessage(const char* value, size_t size) {
  rootmessage_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:gt_msg.JoinFreeResponsefish3d.rootMessage)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
JoinFreeResponsefish3d::rootmessage() const {
  // @@protoc_insertion_point(field_list:gt_msg.JoinFreeResponsefish3d.rootMessage)
  return rootmessage_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
JoinFreeResponsefish3d::mutable_rootmessage() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.JoinFreeResponsefish3d.rootMessage)
  return &rootmessage_;
}

// optional int32 ScoreRatio = 3;
inline void JoinFreeResponsefish3d::clear_scoreratio() {
  scoreratio_ = 0;
}
inline ::google::protobuf::int32 JoinFreeResponsefish3d::scoreratio() const {
  // @@protoc_insertion_point(field_get:gt_msg.JoinFreeResponsefish3d.ScoreRatio)
  return scoreratio_;
}
inline void JoinFreeResponsefish3d::set_scoreratio(::google::protobuf::int32 value) {
  
  scoreratio_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.JoinFreeResponsefish3d.ScoreRatio)
}

// optional .gt_msg.BulletConfig bc = 4;
inline bool JoinFreeResponsefish3d::has_bc() const {
  return !_is_default_instance_ && bc_ != NULL;
}
inline void JoinFreeResponsefish3d::clear_bc() {
  if (GetArenaNoVirtual() == NULL && bc_ != NULL) delete bc_;
  bc_ = NULL;
}
inline const ::gt_msg::BulletConfig& JoinFreeResponsefish3d::bc() const {
  // @@protoc_insertion_point(field_get:gt_msg.JoinFreeResponsefish3d.bc)
  return bc_ != NULL ? *bc_ : *default_instance_->bc_;
}
inline ::gt_msg::BulletConfig* JoinFreeResponsefish3d::mutable_bc() {
  
  if (bc_ == NULL) {
    bc_ = new ::gt_msg::BulletConfig;
  }
  // @@protoc_insertion_point(field_mutable:gt_msg.JoinFreeResponsefish3d.bc)
  return bc_;
}
inline ::gt_msg::BulletConfig* JoinFreeResponsefish3d::release_bc() {
  // @@protoc_insertion_point(field_release:gt_msg.JoinFreeResponsefish3d.bc)
  
  ::gt_msg::BulletConfig* temp = bc_;
  bc_ = NULL;
  return temp;
}
inline void JoinFreeResponsefish3d::set_allocated_bc(::gt_msg::BulletConfig* bc) {
  delete bc_;
  bc_ = bc;
  if (bc) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gt_msg.JoinFreeResponsefish3d.bc)
}

// optional int32 CompetitionTimeAll = 11;
inline void JoinFreeResponsefish3d::clear_competitiontimeall() {
  competitiontimeall_ = 0;
}
inline ::google::protobuf::int32 JoinFreeResponsefish3d::competitiontimeall() const {
  // @@protoc_insertion_point(field_get:gt_msg.JoinFreeResponsefish3d.CompetitionTimeAll)
  return competitiontimeall_;
}
inline void JoinFreeResponsefish3d::set_competitiontimeall(::google::protobuf::int32 value) {
  
  competitiontimeall_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.JoinFreeResponsefish3d.CompetitionTimeAll)
}

// optional int32 CompetitionTimeRemain = 5;
inline void JoinFreeResponsefish3d::clear_competitiontimeremain() {
  competitiontimeremain_ = 0;
}
inline ::google::protobuf::int32 JoinFreeResponsefish3d::competitiontimeremain() const {
  // @@protoc_insertion_point(field_get:gt_msg.JoinFreeResponsefish3d.CompetitionTimeRemain)
  return competitiontimeremain_;
}
inline void JoinFreeResponsefish3d::set_competitiontimeremain(::google::protobuf::int32 value) {
  
  competitiontimeremain_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.JoinFreeResponsefish3d.CompetitionTimeRemain)
}

// optional int32 CompetitionRedPackSum = 6;
inline void JoinFreeResponsefish3d::clear_competitionredpacksum() {
  competitionredpacksum_ = 0;
}
inline ::google::protobuf::int32 JoinFreeResponsefish3d::competitionredpacksum() const {
  // @@protoc_insertion_point(field_get:gt_msg.JoinFreeResponsefish3d.CompetitionRedPackSum)
  return competitionredpacksum_;
}
inline void JoinFreeResponsefish3d::set_competitionredpacksum(::google::protobuf::int32 value) {
  
  competitionredpacksum_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.JoinFreeResponsefish3d.CompetitionRedPackSum)
}

// optional int32 CompetitionBulletTurretid = 7;
inline void JoinFreeResponsefish3d::clear_competitionbulletturretid() {
  competitionbulletturretid_ = 0;
}
inline ::google::protobuf::int32 JoinFreeResponsefish3d::competitionbulletturretid() const {
  // @@protoc_insertion_point(field_get:gt_msg.JoinFreeResponsefish3d.CompetitionBulletTurretid)
  return competitionbulletturretid_;
}
inline void JoinFreeResponsefish3d::set_competitionbulletturretid(::google::protobuf::int32 value) {
  
  competitionbulletturretid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.JoinFreeResponsefish3d.CompetitionBulletTurretid)
}

// optional int32 CompetitionBulletConfigId = 8;
inline void JoinFreeResponsefish3d::clear_competitionbulletconfigid() {
  competitionbulletconfigid_ = 0;
}
inline ::google::protobuf::int32 JoinFreeResponsefish3d::competitionbulletconfigid() const {
  // @@protoc_insertion_point(field_get:gt_msg.JoinFreeResponsefish3d.CompetitionBulletConfigId)
  return competitionbulletconfigid_;
}
inline void JoinFreeResponsefish3d::set_competitionbulletconfigid(::google::protobuf::int32 value) {
  
  competitionbulletconfigid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.JoinFreeResponsefish3d.CompetitionBulletConfigId)
}

// optional int32 CompetitionBulletCount = 9;
inline void JoinFreeResponsefish3d::clear_competitionbulletcount() {
  competitionbulletcount_ = 0;
}
inline ::google::protobuf::int32 JoinFreeResponsefish3d::competitionbulletcount() const {
  // @@protoc_insertion_point(field_get:gt_msg.JoinFreeResponsefish3d.CompetitionBulletCount)
  return competitionbulletcount_;
}
inline void JoinFreeResponsefish3d::set_competitionbulletcount(::google::protobuf::int32 value) {
  
  competitionbulletcount_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.JoinFreeResponsefish3d.CompetitionBulletCount)
}

// optional int32 CompetitionBulletRemain = 10;
inline void JoinFreeResponsefish3d::clear_competitionbulletremain() {
  competitionbulletremain_ = 0;
}
inline ::google::protobuf::int32 JoinFreeResponsefish3d::competitionbulletremain() const {
  // @@protoc_insertion_point(field_get:gt_msg.JoinFreeResponsefish3d.CompetitionBulletRemain)
  return competitionbulletremain_;
}
inline void JoinFreeResponsefish3d::set_competitionbulletremain(::google::protobuf::int32 value) {
  
  competitionbulletremain_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.JoinFreeResponsefish3d.CompetitionBulletRemain)
}

// -------------------------------------------------------------------

// GameConfig

// repeated .gt_msg.Vec2 gunPos = 1;
inline int GameConfig::gunpos_size() const {
  return gunpos_.size();
}
inline void GameConfig::clear_gunpos() {
  gunpos_.Clear();
}
inline const ::gt_msg::Vec2& GameConfig::gunpos(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.GameConfig.gunPos)
  return gunpos_.Get(index);
}
inline ::gt_msg::Vec2* GameConfig::mutable_gunpos(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.GameConfig.gunPos)
  return gunpos_.Mutable(index);
}
inline ::gt_msg::Vec2* GameConfig::add_gunpos() {
  // @@protoc_insertion_point(field_add:gt_msg.GameConfig.gunPos)
  return gunpos_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gt_msg::Vec2 >*
GameConfig::mutable_gunpos() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.GameConfig.gunPos)
  return &gunpos_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gt_msg::Vec2 >&
GameConfig::gunpos() const {
  // @@protoc_insertion_point(field_list:gt_msg.GameConfig.gunPos)
  return gunpos_;
}

// repeated .gt_msg.Vec2 turretPos = 2;
inline int GameConfig::turretpos_size() const {
  return turretpos_.size();
}
inline void GameConfig::clear_turretpos() {
  turretpos_.Clear();
}
inline const ::gt_msg::Vec2& GameConfig::turretpos(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.GameConfig.turretPos)
  return turretpos_.Get(index);
}
inline ::gt_msg::Vec2* GameConfig::mutable_turretpos(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.GameConfig.turretPos)
  return turretpos_.Mutable(index);
}
inline ::gt_msg::Vec2* GameConfig::add_turretpos() {
  // @@protoc_insertion_point(field_add:gt_msg.GameConfig.turretPos)
  return turretpos_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gt_msg::Vec2 >*
GameConfig::mutable_turretpos() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.GameConfig.turretPos)
  return &turretpos_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gt_msg::Vec2 >&
GameConfig::turretpos() const {
  // @@protoc_insertion_point(field_list:gt_msg.GameConfig.turretPos)
  return turretpos_;
}

// repeated .gt_msg.FishData fishConfigs = 3;
inline int GameConfig::fishconfigs_size() const {
  return fishconfigs_.size();
}
inline void GameConfig::clear_fishconfigs() {
  fishconfigs_.Clear();
}
inline const ::gt_msg::FishData& GameConfig::fishconfigs(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.GameConfig.fishConfigs)
  return fishconfigs_.Get(index);
}
inline ::gt_msg::FishData* GameConfig::mutable_fishconfigs(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.GameConfig.fishConfigs)
  return fishconfigs_.Mutable(index);
}
inline ::gt_msg::FishData* GameConfig::add_fishconfigs() {
  // @@protoc_insertion_point(field_add:gt_msg.GameConfig.fishConfigs)
  return fishconfigs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gt_msg::FishData >*
GameConfig::mutable_fishconfigs() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.GameConfig.fishConfigs)
  return &fishconfigs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gt_msg::FishData >&
GameConfig::fishconfigs() const {
  // @@protoc_insertion_point(field_list:gt_msg.GameConfig.fishConfigs)
  return fishconfigs_;
}

// repeated .gt_msg.PropData propConfigs = 6;
inline int GameConfig::propconfigs_size() const {
  return propconfigs_.size();
}
inline void GameConfig::clear_propconfigs() {
  propconfigs_.Clear();
}
inline const ::gt_msg::PropData& GameConfig::propconfigs(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.GameConfig.propConfigs)
  return propconfigs_.Get(index);
}
inline ::gt_msg::PropData* GameConfig::mutable_propconfigs(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.GameConfig.propConfigs)
  return propconfigs_.Mutable(index);
}
inline ::gt_msg::PropData* GameConfig::add_propconfigs() {
  // @@protoc_insertion_point(field_add:gt_msg.GameConfig.propConfigs)
  return propconfigs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gt_msg::PropData >*
GameConfig::mutable_propconfigs() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.GameConfig.propConfigs)
  return &propconfigs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gt_msg::PropData >&
GameConfig::propconfigs() const {
  // @@protoc_insertion_point(field_list:gt_msg.GameConfig.propConfigs)
  return propconfigs_;
}

// -------------------------------------------------------------------

// CurrentFrame

// optional int32 frame = 1;
inline void CurrentFrame::clear_frame() {
  frame_ = 0;
}
inline ::google::protobuf::int32 CurrentFrame::frame() const {
  // @@protoc_insertion_point(field_get:gt_msg.CurrentFrame.frame)
  return frame_;
}
inline void CurrentFrame::set_frame(::google::protobuf::int32 value) {
  
  frame_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.CurrentFrame.frame)
}

// -------------------------------------------------------------------

// FishCoin

// optional int32 seatId = 1;
inline void FishCoin::clear_seatid() {
  seatid_ = 0;
}
inline ::google::protobuf::int32 FishCoin::seatid() const {
  // @@protoc_insertion_point(field_get:gt_msg.FishCoin.seatId)
  return seatid_;
}
inline void FishCoin::set_seatid(::google::protobuf::int32 value) {
  
  seatid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.FishCoin.seatId)
}

// optional int64 scoreNow = 2;
inline void FishCoin::clear_scorenow() {
  scorenow_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 FishCoin::scorenow() const {
  // @@protoc_insertion_point(field_get:gt_msg.FishCoin.scoreNow)
  return scorenow_;
}
inline void FishCoin::set_scorenow(::google::protobuf::int64 value) {
  
  scorenow_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.FishCoin.scoreNow)
}

// optional int32 bulletRemain = 3;
inline void FishCoin::clear_bulletremain() {
  bulletremain_ = 0;
}
inline ::google::protobuf::int32 FishCoin::bulletremain() const {
  // @@protoc_insertion_point(field_get:gt_msg.FishCoin.bulletRemain)
  return bulletremain_;
}
inline void FishCoin::set_bulletremain(::google::protobuf::int32 value) {
  
  bulletremain_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.FishCoin.bulletRemain)
}

// -------------------------------------------------------------------

// SceneFishs

// optional .gt_msg.EstablishFish fishs = 1;
inline bool SceneFishs::has_fishs() const {
  return !_is_default_instance_ && fishs_ != NULL;
}
inline void SceneFishs::clear_fishs() {
  if (GetArenaNoVirtual() == NULL && fishs_ != NULL) delete fishs_;
  fishs_ = NULL;
}
inline const ::gt_msg::EstablishFish& SceneFishs::fishs() const {
  // @@protoc_insertion_point(field_get:gt_msg.SceneFishs.fishs)
  return fishs_ != NULL ? *fishs_ : *default_instance_->fishs_;
}
inline ::gt_msg::EstablishFish* SceneFishs::mutable_fishs() {
  
  if (fishs_ == NULL) {
    fishs_ = new ::gt_msg::EstablishFish;
  }
  // @@protoc_insertion_point(field_mutable:gt_msg.SceneFishs.fishs)
  return fishs_;
}
inline ::gt_msg::EstablishFish* SceneFishs::release_fishs() {
  // @@protoc_insertion_point(field_release:gt_msg.SceneFishs.fishs)
  
  ::gt_msg::EstablishFish* temp = fishs_;
  fishs_ = NULL;
  return temp;
}
inline void SceneFishs::set_allocated_fishs(::gt_msg::EstablishFish* fishs) {
  delete fishs_;
  fishs_ = fishs;
  if (fishs) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gt_msg.SceneFishs.fishs)
}

// repeated .gt_msg.FreezeData freeze = 2;
inline int SceneFishs::freeze_size() const {
  return freeze_.size();
}
inline void SceneFishs::clear_freeze() {
  freeze_.Clear();
}
inline const ::gt_msg::FreezeData& SceneFishs::freeze(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.SceneFishs.freeze)
  return freeze_.Get(index);
}
inline ::gt_msg::FreezeData* SceneFishs::mutable_freeze(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.SceneFishs.freeze)
  return freeze_.Mutable(index);
}
inline ::gt_msg::FreezeData* SceneFishs::add_freeze() {
  // @@protoc_insertion_point(field_add:gt_msg.SceneFishs.freeze)
  return freeze_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gt_msg::FreezeData >*
SceneFishs::mutable_freeze() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.SceneFishs.freeze)
  return &freeze_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gt_msg::FreezeData >&
SceneFishs::freeze() const {
  // @@protoc_insertion_point(field_list:gt_msg.SceneFishs.freeze)
  return freeze_;
}

// repeated .gt_msg.FastData fasts = 3;
inline int SceneFishs::fasts_size() const {
  return fasts_.size();
}
inline void SceneFishs::clear_fasts() {
  fasts_.Clear();
}
inline const ::gt_msg::FastData& SceneFishs::fasts(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.SceneFishs.fasts)
  return fasts_.Get(index);
}
inline ::gt_msg::FastData* SceneFishs::mutable_fasts(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.SceneFishs.fasts)
  return fasts_.Mutable(index);
}
inline ::gt_msg::FastData* SceneFishs::add_fasts() {
  // @@protoc_insertion_point(field_add:gt_msg.SceneFishs.fasts)
  return fasts_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gt_msg::FastData >*
SceneFishs::mutable_fasts() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.SceneFishs.fasts)
  return &fasts_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gt_msg::FastData >&
SceneFishs::fasts() const {
  // @@protoc_insertion_point(field_list:gt_msg.SceneFishs.fasts)
  return fasts_;
}

// -------------------------------------------------------------------

// EstablishFishExternal

// optional .gt_msg.EstablishFish fish = 1;
inline bool EstablishFishExternal::has_fish() const {
  return !_is_default_instance_ && fish_ != NULL;
}
inline void EstablishFishExternal::clear_fish() {
  if (GetArenaNoVirtual() == NULL && fish_ != NULL) delete fish_;
  fish_ = NULL;
}
inline const ::gt_msg::EstablishFish& EstablishFishExternal::fish() const {
  // @@protoc_insertion_point(field_get:gt_msg.EstablishFishExternal.fish)
  return fish_ != NULL ? *fish_ : *default_instance_->fish_;
}
inline ::gt_msg::EstablishFish* EstablishFishExternal::mutable_fish() {
  
  if (fish_ == NULL) {
    fish_ = new ::gt_msg::EstablishFish;
  }
  // @@protoc_insertion_point(field_mutable:gt_msg.EstablishFishExternal.fish)
  return fish_;
}
inline ::gt_msg::EstablishFish* EstablishFishExternal::release_fish() {
  // @@protoc_insertion_point(field_release:gt_msg.EstablishFishExternal.fish)
  
  ::gt_msg::EstablishFish* temp = fish_;
  fish_ = NULL;
  return temp;
}
inline void EstablishFishExternal::set_allocated_fish(::gt_msg::EstablishFish* fish) {
  delete fish_;
  fish_ = fish;
  if (fish) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gt_msg.EstablishFishExternal.fish)
}

// optional bool OnlyOne = 2;
inline void EstablishFishExternal::clear_onlyone() {
  onlyone_ = false;
}
inline bool EstablishFishExternal::onlyone() const {
  // @@protoc_insertion_point(field_get:gt_msg.EstablishFishExternal.OnlyOne)
  return onlyone_;
}
inline void EstablishFishExternal::set_onlyone(bool value) {
  
  onlyone_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.EstablishFishExternal.OnlyOne)
}

// optional bool WaitUntilStart = 3;
inline void EstablishFishExternal::clear_waituntilstart() {
  waituntilstart_ = false;
}
inline bool EstablishFishExternal::waituntilstart() const {
  // @@protoc_insertion_point(field_get:gt_msg.EstablishFishExternal.WaitUntilStart)
  return waituntilstart_;
}
inline void EstablishFishExternal::set_waituntilstart(bool value) {
  
  waituntilstart_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.EstablishFishExternal.WaitUntilStart)
}

// optional bool WaitUntilDone = 4;
inline void EstablishFishExternal::clear_waituntildone() {
  waituntildone_ = false;
}
inline bool EstablishFishExternal::waituntildone() const {
  // @@protoc_insertion_point(field_get:gt_msg.EstablishFishExternal.WaitUntilDone)
  return waituntildone_;
}
inline void EstablishFishExternal::set_waituntildone(bool value) {
  
  waituntildone_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.EstablishFishExternal.WaitUntilDone)
}

// optional string RootMessage = 5;
inline void EstablishFishExternal::clear_rootmessage() {
  rootmessage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EstablishFishExternal::rootmessage() const {
  // @@protoc_insertion_point(field_get:gt_msg.EstablishFishExternal.RootMessage)
  return rootmessage_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EstablishFishExternal::set_rootmessage(const ::std::string& value) {
  
  rootmessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.EstablishFishExternal.RootMessage)
}
inline void EstablishFishExternal::set_rootmessage(const char* value) {
  
  rootmessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.EstablishFishExternal.RootMessage)
}
inline void EstablishFishExternal::set_rootmessage(const char* value, size_t size) {
  
  rootmessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.EstablishFishExternal.RootMessage)
}
inline ::std::string* EstablishFishExternal::mutable_rootmessage() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.EstablishFishExternal.RootMessage)
  return rootmessage_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EstablishFishExternal::release_rootmessage() {
  // @@protoc_insertion_point(field_release:gt_msg.EstablishFishExternal.RootMessage)
  
  return rootmessage_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EstablishFishExternal::set_allocated_rootmessage(::std::string* rootmessage) {
  if (rootmessage != NULL) {
    
  } else {
    
  }
  rootmessage_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rootmessage);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.EstablishFishExternal.RootMessage)
}

// optional int32 RedBagScore = 6;
inline void EstablishFishExternal::clear_redbagscore() {
  redbagscore_ = 0;
}
inline ::google::protobuf::int32 EstablishFishExternal::redbagscore() const {
  // @@protoc_insertion_point(field_get:gt_msg.EstablishFishExternal.RedBagScore)
  return redbagscore_;
}
inline void EstablishFishExternal::set_redbagscore(::google::protobuf::int32 value) {
  
  redbagscore_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.EstablishFishExternal.RedBagScore)
}

// optional int32 RedBagType = 7;
inline void EstablishFishExternal::clear_redbagtype() {
  redbagtype_ = 0;
}
inline ::google::protobuf::int32 EstablishFishExternal::redbagtype() const {
  // @@protoc_insertion_point(field_get:gt_msg.EstablishFishExternal.RedBagType)
  return redbagtype_;
}
inline void EstablishFishExternal::set_redbagtype(::google::protobuf::int32 value) {
  
  redbagtype_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.EstablishFishExternal.RedBagType)
}

// -------------------------------------------------------------------

// EstablishFish

// optional int32 fishId = 1;
inline void EstablishFish::clear_fishid() {
  fishid_ = 0;
}
inline ::google::protobuf::int32 EstablishFish::fishid() const {
  // @@protoc_insertion_point(field_get:gt_msg.EstablishFish.fishId)
  return fishid_;
}
inline void EstablishFish::set_fishid(::google::protobuf::int32 value) {
  
  fishid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.EstablishFish.fishId)
}

// optional int32 fishType = 2;
inline void EstablishFish::clear_fishtype() {
  fishtype_ = 0;
}
inline ::google::protobuf::int32 EstablishFish::fishtype() const {
  // @@protoc_insertion_point(field_get:gt_msg.EstablishFish.fishType)
  return fishtype_;
}
inline void EstablishFish::set_fishtype(::google::protobuf::int32 value) {
  
  fishtype_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.EstablishFish.fishType)
}

// repeated string pathName = 3;
inline int EstablishFish::pathname_size() const {
  return pathname_.size();
}
inline void EstablishFish::clear_pathname() {
  pathname_.Clear();
}
inline const ::std::string& EstablishFish::pathname(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.EstablishFish.pathName)
  return pathname_.Get(index);
}
inline ::std::string* EstablishFish::mutable_pathname(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.EstablishFish.pathName)
  return pathname_.Mutable(index);
}
inline void EstablishFish::set_pathname(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:gt_msg.EstablishFish.pathName)
  pathname_.Mutable(index)->assign(value);
}
inline void EstablishFish::set_pathname(int index, const char* value) {
  pathname_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:gt_msg.EstablishFish.pathName)
}
inline void EstablishFish::set_pathname(int index, const char* value, size_t size) {
  pathname_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:gt_msg.EstablishFish.pathName)
}
inline ::std::string* EstablishFish::add_pathname() {
  // @@protoc_insertion_point(field_add_mutable:gt_msg.EstablishFish.pathName)
  return pathname_.Add();
}
inline void EstablishFish::add_pathname(const ::std::string& value) {
  pathname_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:gt_msg.EstablishFish.pathName)
}
inline void EstablishFish::add_pathname(const char* value) {
  pathname_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:gt_msg.EstablishFish.pathName)
}
inline void EstablishFish::add_pathname(const char* value, size_t size) {
  pathname_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:gt_msg.EstablishFish.pathName)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
EstablishFish::pathname() const {
  // @@protoc_insertion_point(field_list:gt_msg.EstablishFish.pathName)
  return pathname_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
EstablishFish::mutable_pathname() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.EstablishFish.pathName)
  return &pathname_;
}

// optional int32 frame = 4;
inline void EstablishFish::clear_frame() {
  frame_ = 0;
}
inline ::google::protobuf::int32 EstablishFish::frame() const {
  // @@protoc_insertion_point(field_get:gt_msg.EstablishFish.frame)
  return frame_;
}
inline void EstablishFish::set_frame(::google::protobuf::int32 value) {
  
  frame_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.EstablishFish.frame)
}

// optional int32 deep = 5;
inline void EstablishFish::clear_deep() {
  deep_ = 0;
}
inline ::google::protobuf::int32 EstablishFish::deep() const {
  // @@protoc_insertion_point(field_get:gt_msg.EstablishFish.deep)
  return deep_;
}
inline void EstablishFish::set_deep(::google::protobuf::int32 value) {
  
  deep_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.EstablishFish.deep)
}

// optional int32 skillType = 6;
inline void EstablishFish::clear_skilltype() {
  skilltype_ = 0;
}
inline ::google::protobuf::int32 EstablishFish::skilltype() const {
  // @@protoc_insertion_point(field_get:gt_msg.EstablishFish.skillType)
  return skilltype_;
}
inline void EstablishFish::set_skilltype(::google::protobuf::int32 value) {
  
  skilltype_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.EstablishFish.skillType)
}

// optional int32 randomNum = 7;
inline void EstablishFish::clear_randomnum() {
  randomnum_ = 0;
}
inline ::google::protobuf::int32 EstablishFish::randomnum() const {
  // @@protoc_insertion_point(field_get:gt_msg.EstablishFish.randomNum)
  return randomnum_;
}
inline void EstablishFish::set_randomnum(::google::protobuf::int32 value) {
  
  randomnum_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.EstablishFish.randomNum)
}

// optional bool FastenOldFish = 8;
inline void EstablishFish::clear_fastenoldfish() {
  fastenoldfish_ = false;
}
inline bool EstablishFish::fastenoldfish() const {
  // @@protoc_insertion_point(field_get:gt_msg.EstablishFish.FastenOldFish)
  return fastenoldfish_;
}
inline void EstablishFish::set_fastenoldfish(bool value) {
  
  fastenoldfish_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.EstablishFish.FastenOldFish)
}

// optional bool fastenIn = 9;
inline void EstablishFish::clear_fastenin() {
  fastenin_ = false;
}
inline bool EstablishFish::fastenin() const {
  // @@protoc_insertion_point(field_get:gt_msg.EstablishFish.fastenIn)
  return fastenin_;
}
inline void EstablishFish::set_fastenin(bool value) {
  
  fastenin_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.EstablishFish.fastenIn)
}

// optional int32 toward = 10;
inline void EstablishFish::clear_toward() {
  toward_ = 0;
}
inline ::google::protobuf::int32 EstablishFish::toward() const {
  // @@protoc_insertion_point(field_get:gt_msg.EstablishFish.toward)
  return toward_;
}
inline void EstablishFish::set_toward(::google::protobuf::int32 value) {
  
  toward_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.EstablishFish.toward)
}

// optional .gt_msg.Vec3 offset = 11;
inline bool EstablishFish::has_offset() const {
  return !_is_default_instance_ && offset_ != NULL;
}
inline void EstablishFish::clear_offset() {
  if (GetArenaNoVirtual() == NULL && offset_ != NULL) delete offset_;
  offset_ = NULL;
}
inline const ::gt_msg::Vec3& EstablishFish::offset() const {
  // @@protoc_insertion_point(field_get:gt_msg.EstablishFish.offset)
  return offset_ != NULL ? *offset_ : *default_instance_->offset_;
}
inline ::gt_msg::Vec3* EstablishFish::mutable_offset() {
  
  if (offset_ == NULL) {
    offset_ = new ::gt_msg::Vec3;
  }
  // @@protoc_insertion_point(field_mutable:gt_msg.EstablishFish.offset)
  return offset_;
}
inline ::gt_msg::Vec3* EstablishFish::release_offset() {
  // @@protoc_insertion_point(field_release:gt_msg.EstablishFish.offset)
  
  ::gt_msg::Vec3* temp = offset_;
  offset_ = NULL;
  return temp;
}
inline void EstablishFish::set_allocated_offset(::gt_msg::Vec3* offset) {
  delete offset_;
  offset_ = offset;
  if (offset) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gt_msg.EstablishFish.offset)
}

// optional bool foldX = 12;
inline void EstablishFish::clear_foldx() {
  foldx_ = false;
}
inline bool EstablishFish::foldx() const {
  // @@protoc_insertion_point(field_get:gt_msg.EstablishFish.foldX)
  return foldx_;
}
inline void EstablishFish::set_foldx(bool value) {
  
  foldx_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.EstablishFish.foldX)
}

// optional bool foldY = 13;
inline void EstablishFish::clear_foldy() {
  foldy_ = false;
}
inline bool EstablishFish::foldy() const {
  // @@protoc_insertion_point(field_get:gt_msg.EstablishFish.foldY)
  return foldy_;
}
inline void EstablishFish::set_foldy(bool value) {
  
  foldy_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.EstablishFish.foldY)
}

// optional bool foldZ = 14;
inline void EstablishFish::clear_foldz() {
  foldz_ = false;
}
inline bool EstablishFish::foldz() const {
  // @@protoc_insertion_point(field_get:gt_msg.EstablishFish.foldZ)
  return foldz_;
}
inline void EstablishFish::set_foldz(bool value) {
  
  foldz_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.EstablishFish.foldZ)
}

// optional float speedScale = 15;
inline void EstablishFish::clear_speedscale() {
  speedscale_ = 0;
}
inline float EstablishFish::speedscale() const {
  // @@protoc_insertion_point(field_get:gt_msg.EstablishFish.speedScale)
  return speedscale_;
}
inline void EstablishFish::set_speedscale(float value) {
  
  speedscale_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.EstablishFish.speedScale)
}

// optional string EnterMessage = 16;
inline void EstablishFish::clear_entermessage() {
  entermessage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EstablishFish::entermessage() const {
  // @@protoc_insertion_point(field_get:gt_msg.EstablishFish.EnterMessage)
  return entermessage_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EstablishFish::set_entermessage(const ::std::string& value) {
  
  entermessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.EstablishFish.EnterMessage)
}
inline void EstablishFish::set_entermessage(const char* value) {
  
  entermessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.EstablishFish.EnterMessage)
}
inline void EstablishFish::set_entermessage(const char* value, size_t size) {
  
  entermessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.EstablishFish.EnterMessage)
}
inline ::std::string* EstablishFish::mutable_entermessage() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.EstablishFish.EnterMessage)
  return entermessage_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EstablishFish::release_entermessage() {
  // @@protoc_insertion_point(field_release:gt_msg.EstablishFish.EnterMessage)
  
  return entermessage_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EstablishFish::set_allocated_entermessage(::std::string* entermessage) {
  if (entermessage != NULL) {
    
  } else {
    
  }
  entermessage_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), entermessage);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.EstablishFish.EnterMessage)
}

// optional string LeaveMessage = 17;
inline void EstablishFish::clear_leavemessage() {
  leavemessage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EstablishFish::leavemessage() const {
  // @@protoc_insertion_point(field_get:gt_msg.EstablishFish.LeaveMessage)
  return leavemessage_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EstablishFish::set_leavemessage(const ::std::string& value) {
  
  leavemessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.EstablishFish.LeaveMessage)
}
inline void EstablishFish::set_leavemessage(const char* value) {
  
  leavemessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.EstablishFish.LeaveMessage)
}
inline void EstablishFish::set_leavemessage(const char* value, size_t size) {
  
  leavemessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.EstablishFish.LeaveMessage)
}
inline ::std::string* EstablishFish::mutable_leavemessage() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.EstablishFish.LeaveMessage)
  return leavemessage_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EstablishFish::release_leavemessage() {
  // @@protoc_insertion_point(field_release:gt_msg.EstablishFish.LeaveMessage)
  
  return leavemessage_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EstablishFish::set_allocated_leavemessage(::std::string* leavemessage) {
  if (leavemessage != NULL) {
    
  } else {
    
  }
  leavemessage_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), leavemessage);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.EstablishFish.LeaveMessage)
}

// repeated .gt_msg.MessageTimer messageList = 18;
inline int EstablishFish::messagelist_size() const {
  return messagelist_.size();
}
inline void EstablishFish::clear_messagelist() {
  messagelist_.Clear();
}
inline const ::gt_msg::MessageTimer& EstablishFish::messagelist(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.EstablishFish.messageList)
  return messagelist_.Get(index);
}
inline ::gt_msg::MessageTimer* EstablishFish::mutable_messagelist(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.EstablishFish.messageList)
  return messagelist_.Mutable(index);
}
inline ::gt_msg::MessageTimer* EstablishFish::add_messagelist() {
  // @@protoc_insertion_point(field_add:gt_msg.EstablishFish.messageList)
  return messagelist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gt_msg::MessageTimer >*
EstablishFish::mutable_messagelist() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.EstablishFish.messageList)
  return &messagelist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gt_msg::MessageTimer >&
EstablishFish::messagelist() const {
  // @@protoc_insertion_point(field_list:gt_msg.EstablishFish.messageList)
  return messagelist_;
}

// -------------------------------------------------------------------

// CatchFish

// optional int32 seatId = 1;
inline void CatchFish::clear_seatid() {
  seatid_ = 0;
}
inline ::google::protobuf::int32 CatchFish::seatid() const {
  // @@protoc_insertion_point(field_get:gt_msg.CatchFish.seatId)
  return seatid_;
}
inline void CatchFish::set_seatid(::google::protobuf::int32 value) {
  
  seatid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.CatchFish.seatId)
}

// optional int32 fishId = 2;
inline void CatchFish::clear_fishid() {
  fishid_ = 0;
}
inline ::google::protobuf::int32 CatchFish::fishid() const {
  // @@protoc_insertion_point(field_get:gt_msg.CatchFish.fishId)
  return fishid_;
}
inline void CatchFish::set_fishid(::google::protobuf::int32 value) {
  
  fishid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.CatchFish.fishId)
}

// optional int32 frame = 3;
inline void CatchFish::clear_frame() {
  frame_ = 0;
}
inline ::google::protobuf::int32 CatchFish::frame() const {
  // @@protoc_insertion_point(field_get:gt_msg.CatchFish.frame)
  return frame_;
}
inline void CatchFish::set_frame(::google::protobuf::int32 value) {
  
  frame_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.CatchFish.frame)
}

// optional int64 fish_score = 4;
inline void CatchFish::clear_fish_score() {
  fish_score_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CatchFish::fish_score() const {
  // @@protoc_insertion_point(field_get:gt_msg.CatchFish.fish_score)
  return fish_score_;
}
inline void CatchFish::set_fish_score(::google::protobuf::int64 value) {
  
  fish_score_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.CatchFish.fish_score)
}

// optional int32 link_fish_id = 5;
inline void CatchFish::clear_link_fish_id() {
  link_fish_id_ = 0;
}
inline ::google::protobuf::int32 CatchFish::link_fish_id() const {
  // @@protoc_insertion_point(field_get:gt_msg.CatchFish.link_fish_id)
  return link_fish_id_;
}
inline void CatchFish::set_link_fish_id(::google::protobuf::int32 value) {
  
  link_fish_id_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.CatchFish.link_fish_id)
}

// optional int64 scoreNow = 6;
inline void CatchFish::clear_scorenow() {
  scorenow_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CatchFish::scorenow() const {
  // @@protoc_insertion_point(field_get:gt_msg.CatchFish.scoreNow)
  return scorenow_;
}
inline void CatchFish::set_scorenow(::google::protobuf::int64 value) {
  
  scorenow_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.CatchFish.scoreNow)
}

// optional int32 dieType = 7;
inline void CatchFish::clear_dietype() {
  dietype_ = 0;
}
inline ::google::protobuf::int32 CatchFish::dietype() const {
  // @@protoc_insertion_point(field_get:gt_msg.CatchFish.dieType)
  return dietype_;
}
inline void CatchFish::set_dietype(::google::protobuf::int32 value) {
  
  dietype_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.CatchFish.dieType)
}

// optional int32 redBagScore = 8;
inline void CatchFish::clear_redbagscore() {
  redbagscore_ = 0;
}
inline ::google::protobuf::int32 CatchFish::redbagscore() const {
  // @@protoc_insertion_point(field_get:gt_msg.CatchFish.redBagScore)
  return redbagscore_;
}
inline void CatchFish::set_redbagscore(::google::protobuf::int32 value) {
  
  redbagscore_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.CatchFish.redBagScore)
}

// optional int32 redBagScoreAll = 9;
inline void CatchFish::clear_redbagscoreall() {
  redbagscoreall_ = 0;
}
inline ::google::protobuf::int32 CatchFish::redbagscoreall() const {
  // @@protoc_insertion_point(field_get:gt_msg.CatchFish.redBagScoreAll)
  return redbagscoreall_;
}
inline void CatchFish::set_redbagscoreall(::google::protobuf::int32 value) {
  
  redbagscoreall_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.CatchFish.redBagScoreAll)
}

// optional int32 redBagresultCode = 10;
inline void CatchFish::clear_redbagresultcode() {
  redbagresultcode_ = 0;
}
inline ::google::protobuf::int32 CatchFish::redbagresultcode() const {
  // @@protoc_insertion_point(field_get:gt_msg.CatchFish.redBagresultCode)
  return redbagresultcode_;
}
inline void CatchFish::set_redbagresultcode(::google::protobuf::int32 value) {
  
  redbagresultcode_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.CatchFish.redBagresultCode)
}

// optional string redBagresultMessage = 11;
inline void CatchFish::clear_redbagresultmessage() {
  redbagresultmessage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CatchFish::redbagresultmessage() const {
  // @@protoc_insertion_point(field_get:gt_msg.CatchFish.redBagresultMessage)
  return redbagresultmessage_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CatchFish::set_redbagresultmessage(const ::std::string& value) {
  
  redbagresultmessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.CatchFish.redBagresultMessage)
}
inline void CatchFish::set_redbagresultmessage(const char* value) {
  
  redbagresultmessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.CatchFish.redBagresultMessage)
}
inline void CatchFish::set_redbagresultmessage(const char* value, size_t size) {
  
  redbagresultmessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.CatchFish.redBagresultMessage)
}
inline ::std::string* CatchFish::mutable_redbagresultmessage() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.CatchFish.redBagresultMessage)
  return redbagresultmessage_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CatchFish::release_redbagresultmessage() {
  // @@protoc_insertion_point(field_release:gt_msg.CatchFish.redBagresultMessage)
  
  return redbagresultmessage_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CatchFish::set_allocated_redbagresultmessage(::std::string* redbagresultmessage) {
  if (redbagresultmessage != NULL) {
    
  } else {
    
  }
  redbagresultmessage_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), redbagresultmessage);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.CatchFish.redBagresultMessage)
}

// -------------------------------------------------------------------

// EstablishBulletRequest

// optional int32 frame = 1;
inline void EstablishBulletRequest::clear_frame() {
  frame_ = 0;
}
inline ::google::protobuf::int32 EstablishBulletRequest::frame() const {
  // @@protoc_insertion_point(field_get:gt_msg.EstablishBulletRequest.frame)
  return frame_;
}
inline void EstablishBulletRequest::set_frame(::google::protobuf::int32 value) {
  
  frame_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.EstablishBulletRequest.frame)
}

// optional int32 lockFishId = 2;
inline void EstablishBulletRequest::clear_lockfishid() {
  lockfishid_ = 0;
}
inline ::google::protobuf::int32 EstablishBulletRequest::lockfishid() const {
  // @@protoc_insertion_point(field_get:gt_msg.EstablishBulletRequest.lockFishId)
  return lockfishid_;
}
inline void EstablishBulletRequest::set_lockfishid(::google::protobuf::int32 value) {
  
  lockfishid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.EstablishBulletRequest.lockFishId)
}

// optional .gt_msg.Vec2 terminal = 3;
inline bool EstablishBulletRequest::has_terminal() const {
  return !_is_default_instance_ && terminal_ != NULL;
}
inline void EstablishBulletRequest::clear_terminal() {
  if (GetArenaNoVirtual() == NULL && terminal_ != NULL) delete terminal_;
  terminal_ = NULL;
}
inline const ::gt_msg::Vec2& EstablishBulletRequest::terminal() const {
  // @@protoc_insertion_point(field_get:gt_msg.EstablishBulletRequest.terminal)
  return terminal_ != NULL ? *terminal_ : *default_instance_->terminal_;
}
inline ::gt_msg::Vec2* EstablishBulletRequest::mutable_terminal() {
  
  if (terminal_ == NULL) {
    terminal_ = new ::gt_msg::Vec2;
  }
  // @@protoc_insertion_point(field_mutable:gt_msg.EstablishBulletRequest.terminal)
  return terminal_;
}
inline ::gt_msg::Vec2* EstablishBulletRequest::release_terminal() {
  // @@protoc_insertion_point(field_release:gt_msg.EstablishBulletRequest.terminal)
  
  ::gt_msg::Vec2* temp = terminal_;
  terminal_ = NULL;
  return temp;
}
inline void EstablishBulletRequest::set_allocated_terminal(::gt_msg::Vec2* terminal) {
  delete terminal_;
  terminal_ = terminal;
  if (terminal) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gt_msg.EstablishBulletRequest.terminal)
}

// optional int32 bulletType = 4;
inline void EstablishBulletRequest::clear_bullettype() {
  bullettype_ = 0;
}
inline ::google::protobuf::int32 EstablishBulletRequest::bullettype() const {
  // @@protoc_insertion_point(field_get:gt_msg.EstablishBulletRequest.bulletType)
  return bullettype_;
}
inline void EstablishBulletRequest::set_bullettype(::google::protobuf::int32 value) {
  
  bullettype_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.EstablishBulletRequest.bulletType)
}

// optional int32 bulletTurretID = 5;
inline void EstablishBulletRequest::clear_bulletturretid() {
  bulletturretid_ = 0;
}
inline ::google::protobuf::int32 EstablishBulletRequest::bulletturretid() const {
  // @@protoc_insertion_point(field_get:gt_msg.EstablishBulletRequest.bulletTurretID)
  return bulletturretid_;
}
inline void EstablishBulletRequest::set_bulletturretid(::google::protobuf::int32 value) {
  
  bulletturretid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.EstablishBulletRequest.bulletTurretID)
}

// optional int32 bulletConfigID = 6;
inline void EstablishBulletRequest::clear_bulletconfigid() {
  bulletconfigid_ = 0;
}
inline ::google::protobuf::int32 EstablishBulletRequest::bulletconfigid() const {
  // @@protoc_insertion_point(field_get:gt_msg.EstablishBulletRequest.bulletConfigID)
  return bulletconfigid_;
}
inline void EstablishBulletRequest::set_bulletconfigid(::google::protobuf::int32 value) {
  
  bulletconfigid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.EstablishBulletRequest.bulletConfigID)
}

// -------------------------------------------------------------------

// CreateBullet

// optional int32 seatId = 1;
inline void CreateBullet::clear_seatid() {
  seatid_ = 0;
}
inline ::google::protobuf::int32 CreateBullet::seatid() const {
  // @@protoc_insertion_point(field_get:gt_msg.CreateBullet.seatId)
  return seatid_;
}
inline void CreateBullet::set_seatid(::google::protobuf::int32 value) {
  
  seatid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.CreateBullet.seatId)
}

// optional int32 speed = 2;
inline void CreateBullet::clear_speed() {
  speed_ = 0;
}
inline ::google::protobuf::int32 CreateBullet::speed() const {
  // @@protoc_insertion_point(field_get:gt_msg.CreateBullet.speed)
  return speed_;
}
inline void CreateBullet::set_speed(::google::protobuf::int32 value) {
  
  speed_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.CreateBullet.speed)
}

// optional int32 frame = 3;
inline void CreateBullet::clear_frame() {
  frame_ = 0;
}
inline ::google::protobuf::int32 CreateBullet::frame() const {
  // @@protoc_insertion_point(field_get:gt_msg.CreateBullet.frame)
  return frame_;
}
inline void CreateBullet::set_frame(::google::protobuf::int32 value) {
  
  frame_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.CreateBullet.frame)
}

// optional .gt_msg.Vec2 terminal = 4;
inline bool CreateBullet::has_terminal() const {
  return !_is_default_instance_ && terminal_ != NULL;
}
inline void CreateBullet::clear_terminal() {
  if (GetArenaNoVirtual() == NULL && terminal_ != NULL) delete terminal_;
  terminal_ = NULL;
}
inline const ::gt_msg::Vec2& CreateBullet::terminal() const {
  // @@protoc_insertion_point(field_get:gt_msg.CreateBullet.terminal)
  return terminal_ != NULL ? *terminal_ : *default_instance_->terminal_;
}
inline ::gt_msg::Vec2* CreateBullet::mutable_terminal() {
  
  if (terminal_ == NULL) {
    terminal_ = new ::gt_msg::Vec2;
  }
  // @@protoc_insertion_point(field_mutable:gt_msg.CreateBullet.terminal)
  return terminal_;
}
inline ::gt_msg::Vec2* CreateBullet::release_terminal() {
  // @@protoc_insertion_point(field_release:gt_msg.CreateBullet.terminal)
  
  ::gt_msg::Vec2* temp = terminal_;
  terminal_ = NULL;
  return temp;
}
inline void CreateBullet::set_allocated_terminal(::gt_msg::Vec2* terminal) {
  delete terminal_;
  terminal_ = terminal;
  if (terminal) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gt_msg.CreateBullet.terminal)
}

// optional int32 lockFishId = 5;
inline void CreateBullet::clear_lockfishid() {
  lockfishid_ = 0;
}
inline ::google::protobuf::int32 CreateBullet::lockfishid() const {
  // @@protoc_insertion_point(field_get:gt_msg.CreateBullet.lockFishId)
  return lockfishid_;
}
inline void CreateBullet::set_lockfishid(::google::protobuf::int32 value) {
  
  lockfishid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.CreateBullet.lockFishId)
}

// optional int32 bulletType = 6;
inline void CreateBullet::clear_bullettype() {
  bullettype_ = 0;
}
inline ::google::protobuf::int32 CreateBullet::bullettype() const {
  // @@protoc_insertion_point(field_get:gt_msg.CreateBullet.bulletType)
  return bullettype_;
}
inline void CreateBullet::set_bullettype(::google::protobuf::int32 value) {
  
  bullettype_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.CreateBullet.bulletType)
}

// optional int64 scoreNow = 7;
inline void CreateBullet::clear_scorenow() {
  scorenow_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CreateBullet::scorenow() const {
  // @@protoc_insertion_point(field_get:gt_msg.CreateBullet.scoreNow)
  return scorenow_;
}
inline void CreateBullet::set_scorenow(::google::protobuf::int64 value) {
  
  scorenow_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.CreateBullet.scoreNow)
}

// optional int32 bulletTurretID = 8;
inline void CreateBullet::clear_bulletturretid() {
  bulletturretid_ = 0;
}
inline ::google::protobuf::int32 CreateBullet::bulletturretid() const {
  // @@protoc_insertion_point(field_get:gt_msg.CreateBullet.bulletTurretID)
  return bulletturretid_;
}
inline void CreateBullet::set_bulletturretid(::google::protobuf::int32 value) {
  
  bulletturretid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.CreateBullet.bulletTurretID)
}

// optional int32 bulletConfigID = 9;
inline void CreateBullet::clear_bulletconfigid() {
  bulletconfigid_ = 0;
}
inline ::google::protobuf::int32 CreateBullet::bulletconfigid() const {
  // @@protoc_insertion_point(field_get:gt_msg.CreateBullet.bulletConfigID)
  return bulletconfigid_;
}
inline void CreateBullet::set_bulletconfigid(::google::protobuf::int32 value) {
  
  bulletconfigid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.CreateBullet.bulletConfigID)
}

// optional int32 UserID = 10;
inline void CreateBullet::clear_userid() {
  userid_ = 0;
}
inline ::google::protobuf::int32 CreateBullet::userid() const {
  // @@protoc_insertion_point(field_get:gt_msg.CreateBullet.UserID)
  return userid_;
}
inline void CreateBullet::set_userid(::google::protobuf::int32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.CreateBullet.UserID)
}

// optional int32 BulletRemain = 11;
inline void CreateBullet::clear_bulletremain() {
  bulletremain_ = 0;
}
inline ::google::protobuf::int32 CreateBullet::bulletremain() const {
  // @@protoc_insertion_point(field_get:gt_msg.CreateBullet.BulletRemain)
  return bulletremain_;
}
inline void CreateBullet::set_bulletremain(::google::protobuf::int32 value) {
  
  bulletremain_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.CreateBullet.BulletRemain)
}

// -------------------------------------------------------------------

// FreezeFish

// optional int32 frame = 1;
inline void FreezeFish::clear_frame() {
  frame_ = 0;
}
inline ::google::protobuf::int32 FreezeFish::frame() const {
  // @@protoc_insertion_point(field_get:gt_msg.FreezeFish.frame)
  return frame_;
}
inline void FreezeFish::set_frame(::google::protobuf::int32 value) {
  
  frame_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.FreezeFish.frame)
}

// optional int32 duration = 2;
inline void FreezeFish::clear_duration() {
  duration_ = 0;
}
inline ::google::protobuf::int32 FreezeFish::duration() const {
  // @@protoc_insertion_point(field_get:gt_msg.FreezeFish.duration)
  return duration_;
}
inline void FreezeFish::set_duration(::google::protobuf::int32 value) {
  
  duration_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.FreezeFish.duration)
}

// repeated int32 fishList = 3;
inline int FreezeFish::fishlist_size() const {
  return fishlist_.size();
}
inline void FreezeFish::clear_fishlist() {
  fishlist_.Clear();
}
inline ::google::protobuf::int32 FreezeFish::fishlist(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.FreezeFish.fishList)
  return fishlist_.Get(index);
}
inline void FreezeFish::set_fishlist(int index, ::google::protobuf::int32 value) {
  fishlist_.Set(index, value);
  // @@protoc_insertion_point(field_set:gt_msg.FreezeFish.fishList)
}
inline void FreezeFish::add_fishlist(::google::protobuf::int32 value) {
  fishlist_.Add(value);
  // @@protoc_insertion_point(field_add:gt_msg.FreezeFish.fishList)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
FreezeFish::fishlist() const {
  // @@protoc_insertion_point(field_list:gt_msg.FreezeFish.fishList)
  return fishlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
FreezeFish::mutable_fishlist() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.FreezeFish.fishList)
  return &fishlist_;
}

// optional bool showEffect = 4;
inline void FreezeFish::clear_showeffect() {
  showeffect_ = false;
}
inline bool FreezeFish::showeffect() const {
  // @@protoc_insertion_point(field_get:gt_msg.FreezeFish.showEffect)
  return showeffect_;
}
inline void FreezeFish::set_showeffect(bool value) {
  
  showeffect_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.FreezeFish.showEffect)
}

// -------------------------------------------------------------------

// FastEscape

// optional int32 frame = 1;
inline void FastEscape::clear_frame() {
  frame_ = 0;
}
inline ::google::protobuf::int32 FastEscape::frame() const {
  // @@protoc_insertion_point(field_get:gt_msg.FastEscape.frame)
  return frame_;
}
inline void FastEscape::set_frame(::google::protobuf::int32 value) {
  
  frame_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.FastEscape.frame)
}

// optional float speed = 2;
inline void FastEscape::clear_speed() {
  speed_ = 0;
}
inline float FastEscape::speed() const {
  // @@protoc_insertion_point(field_get:gt_msg.FastEscape.speed)
  return speed_;
}
inline void FastEscape::set_speed(float value) {
  
  speed_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.FastEscape.speed)
}

// optional int32 duration = 3;
inline void FastEscape::clear_duration() {
  duration_ = 0;
}
inline ::google::protobuf::int32 FastEscape::duration() const {
  // @@protoc_insertion_point(field_get:gt_msg.FastEscape.duration)
  return duration_;
}
inline void FastEscape::set_duration(::google::protobuf::int32 value) {
  
  duration_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.FastEscape.duration)
}

// repeated int32 fishList = 4;
inline int FastEscape::fishlist_size() const {
  return fishlist_.size();
}
inline void FastEscape::clear_fishlist() {
  fishlist_.Clear();
}
inline ::google::protobuf::int32 FastEscape::fishlist(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.FastEscape.fishList)
  return fishlist_.Get(index);
}
inline void FastEscape::set_fishlist(int index, ::google::protobuf::int32 value) {
  fishlist_.Set(index, value);
  // @@protoc_insertion_point(field_set:gt_msg.FastEscape.fishList)
}
inline void FastEscape::add_fishlist(::google::protobuf::int32 value) {
  fishlist_.Add(value);
  // @@protoc_insertion_point(field_add:gt_msg.FastEscape.fishList)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
FastEscape::fishlist() const {
  // @@protoc_insertion_point(field_list:gt_msg.FastEscape.fishList)
  return fishlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
FastEscape::mutable_fishlist() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.FastEscape.fishList)
  return &fishlist_;
}

// optional bool showEffect = 5;
inline void FastEscape::clear_showeffect() {
  showeffect_ = false;
}
inline bool FastEscape::showeffect() const {
  // @@protoc_insertion_point(field_get:gt_msg.FastEscape.showEffect)
  return showeffect_;
}
inline void FastEscape::set_showeffect(bool value) {
  
  showeffect_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.FastEscape.showEffect)
}

// -------------------------------------------------------------------

// FishAppearNotify

// optional string name = 1;
inline void FishAppearNotify::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FishAppearNotify::name() const {
  // @@protoc_insertion_point(field_get:gt_msg.FishAppearNotify.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FishAppearNotify::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.FishAppearNotify.name)
}
inline void FishAppearNotify::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.FishAppearNotify.name)
}
inline void FishAppearNotify::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.FishAppearNotify.name)
}
inline ::std::string* FishAppearNotify::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.FishAppearNotify.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FishAppearNotify::release_name() {
  // @@protoc_insertion_point(field_release:gt_msg.FishAppearNotify.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FishAppearNotify::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.FishAppearNotify.name)
}

// -------------------------------------------------------------------

// CastSkillResponse

// optional int32 skillConfigID = 1;
inline void CastSkillResponse::clear_skillconfigid() {
  skillconfigid_ = 0;
}
inline ::google::protobuf::int32 CastSkillResponse::skillconfigid() const {
  // @@protoc_insertion_point(field_get:gt_msg.CastSkillResponse.skillConfigID)
  return skillconfigid_;
}
inline void CastSkillResponse::set_skillconfigid(::google::protobuf::int32 value) {
  
  skillconfigid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.CastSkillResponse.skillConfigID)
}

// optional int32 seatId = 2;
inline void CastSkillResponse::clear_seatid() {
  seatid_ = 0;
}
inline ::google::protobuf::int32 CastSkillResponse::seatid() const {
  // @@protoc_insertion_point(field_get:gt_msg.CastSkillResponse.seatId)
  return seatid_;
}
inline void CastSkillResponse::set_seatid(::google::protobuf::int32 value) {
  
  seatid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.CastSkillResponse.seatId)
}

// optional int32 resultCode = 3;
inline void CastSkillResponse::clear_resultcode() {
  resultcode_ = 0;
}
inline ::google::protobuf::int32 CastSkillResponse::resultcode() const {
  // @@protoc_insertion_point(field_get:gt_msg.CastSkillResponse.resultCode)
  return resultcode_;
}
inline void CastSkillResponse::set_resultcode(::google::protobuf::int32 value) {
  
  resultcode_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.CastSkillResponse.resultCode)
}

// -------------------------------------------------------------------

// UsePropResponse

// optional int32 propConfigID = 1;
inline void UsePropResponse::clear_propconfigid() {
  propconfigid_ = 0;
}
inline ::google::protobuf::int32 UsePropResponse::propconfigid() const {
  // @@protoc_insertion_point(field_get:gt_msg.UsePropResponse.propConfigID)
  return propconfigid_;
}
inline void UsePropResponse::set_propconfigid(::google::protobuf::int32 value) {
  
  propconfigid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.UsePropResponse.propConfigID)
}

// optional int32 seatId = 2;
inline void UsePropResponse::clear_seatid() {
  seatid_ = 0;
}
inline ::google::protobuf::int32 UsePropResponse::seatid() const {
  // @@protoc_insertion_point(field_get:gt_msg.UsePropResponse.seatId)
  return seatid_;
}
inline void UsePropResponse::set_seatid(::google::protobuf::int32 value) {
  
  seatid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.UsePropResponse.seatId)
}

// optional int32 resultCode = 3;
inline void UsePropResponse::clear_resultcode() {
  resultcode_ = 0;
}
inline ::google::protobuf::int32 UsePropResponse::resultcode() const {
  // @@protoc_insertion_point(field_get:gt_msg.UsePropResponse.resultCode)
  return resultcode_;
}
inline void UsePropResponse::set_resultcode(::google::protobuf::int32 value) {
  
  resultcode_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.UsePropResponse.resultCode)
}

// optional string discribe = 4;
inline void UsePropResponse::clear_discribe() {
  discribe_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UsePropResponse::discribe() const {
  // @@protoc_insertion_point(field_get:gt_msg.UsePropResponse.discribe)
  return discribe_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UsePropResponse::set_discribe(const ::std::string& value) {
  
  discribe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.UsePropResponse.discribe)
}
inline void UsePropResponse::set_discribe(const char* value) {
  
  discribe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.UsePropResponse.discribe)
}
inline void UsePropResponse::set_discribe(const char* value, size_t size) {
  
  discribe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.UsePropResponse.discribe)
}
inline ::std::string* UsePropResponse::mutable_discribe() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.UsePropResponse.discribe)
  return discribe_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UsePropResponse::release_discribe() {
  // @@protoc_insertion_point(field_release:gt_msg.UsePropResponse.discribe)
  
  return discribe_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UsePropResponse::set_allocated_discribe(::std::string* discribe) {
  if (discribe != NULL) {
    
  } else {
    
  }
  discribe_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), discribe);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.UsePropResponse.discribe)
}

// -------------------------------------------------------------------

// NowAngerResponse

// optional int32 angerValue = 1;
inline void NowAngerResponse::clear_angervalue() {
  angervalue_ = 0;
}
inline ::google::protobuf::int32 NowAngerResponse::angervalue() const {
  // @@protoc_insertion_point(field_get:gt_msg.NowAngerResponse.angerValue)
  return angervalue_;
}
inline void NowAngerResponse::set_angervalue(::google::protobuf::int32 value) {
  
  angervalue_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.NowAngerResponse.angerValue)
}

// optional int32 seatId = 2;
inline void NowAngerResponse::clear_seatid() {
  seatid_ = 0;
}
inline ::google::protobuf::int32 NowAngerResponse::seatid() const {
  // @@protoc_insertion_point(field_get:gt_msg.NowAngerResponse.seatId)
  return seatid_;
}
inline void NowAngerResponse::set_seatid(::google::protobuf::int32 value) {
  
  seatid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.NowAngerResponse.seatId)
}

// -------------------------------------------------------------------

// BulletSpeedUp

// optional int32 frame = 1;
inline void BulletSpeedUp::clear_frame() {
  frame_ = 0;
}
inline ::google::protobuf::int32 BulletSpeedUp::frame() const {
  // @@protoc_insertion_point(field_get:gt_msg.BulletSpeedUp.frame)
  return frame_;
}
inline void BulletSpeedUp::set_frame(::google::protobuf::int32 value) {
  
  frame_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.BulletSpeedUp.frame)
}

// optional int32 duration = 2;
inline void BulletSpeedUp::clear_duration() {
  duration_ = 0;
}
inline ::google::protobuf::int32 BulletSpeedUp::duration() const {
  // @@protoc_insertion_point(field_get:gt_msg.BulletSpeedUp.duration)
  return duration_;
}
inline void BulletSpeedUp::set_duration(::google::protobuf::int32 value) {
  
  duration_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.BulletSpeedUp.duration)
}

// optional float scale = 3;
inline void BulletSpeedUp::clear_scale() {
  scale_ = 0;
}
inline float BulletSpeedUp::scale() const {
  // @@protoc_insertion_point(field_get:gt_msg.BulletSpeedUp.scale)
  return scale_;
}
inline void BulletSpeedUp::set_scale(float value) {
  
  scale_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.BulletSpeedUp.scale)
}

// -------------------------------------------------------------------

// ChangeBatteryByMyself

// optional int32 batteryIndex = 2;
inline void ChangeBatteryByMyself::clear_batteryindex() {
  batteryindex_ = 0;
}
inline ::google::protobuf::int32 ChangeBatteryByMyself::batteryindex() const {
  // @@protoc_insertion_point(field_get:gt_msg.ChangeBatteryByMyself.batteryIndex)
  return batteryindex_;
}
inline void ChangeBatteryByMyself::set_batteryindex(::google::protobuf::int32 value) {
  
  batteryindex_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.ChangeBatteryByMyself.batteryIndex)
}

// -------------------------------------------------------------------

// ChangeBatteryByOhter

// optional int32 seatId = 1;
inline void ChangeBatteryByOhter::clear_seatid() {
  seatid_ = 0;
}
inline ::google::protobuf::int32 ChangeBatteryByOhter::seatid() const {
  // @@protoc_insertion_point(field_get:gt_msg.ChangeBatteryByOhter.seatId)
  return seatid_;
}
inline void ChangeBatteryByOhter::set_seatid(::google::protobuf::int32 value) {
  
  seatid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.ChangeBatteryByOhter.seatId)
}

// optional int32 batteryIndex = 2;
inline void ChangeBatteryByOhter::clear_batteryindex() {
  batteryindex_ = 0;
}
inline ::google::protobuf::int32 ChangeBatteryByOhter::batteryindex() const {
  // @@protoc_insertion_point(field_get:gt_msg.ChangeBatteryByOhter.batteryIndex)
  return batteryindex_;
}
inline void ChangeBatteryByOhter::set_batteryindex(::google::protobuf::int32 value) {
  
  batteryindex_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.ChangeBatteryByOhter.batteryIndex)
}

// -------------------------------------------------------------------

// ForceExitTableRequestfish3d

// -------------------------------------------------------------------

// ForceExitTableResponsefish3d

// optional int32 resultCode = 1;
inline void ForceExitTableResponsefish3d::clear_resultcode() {
  resultcode_ = 0;
}
inline ::google::protobuf::int32 ForceExitTableResponsefish3d::resultcode() const {
  // @@protoc_insertion_point(field_get:gt_msg.ForceExitTableResponsefish3d.resultCode)
  return resultcode_;
}
inline void ForceExitTableResponsefish3d::set_resultcode(::google::protobuf::int32 value) {
  
  resultcode_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.ForceExitTableResponsefish3d.resultCode)
}

// -------------------------------------------------------------------

// NewTaskResponse

// optional int32 taskId = 1;
inline void NewTaskResponse::clear_taskid() {
  taskid_ = 0;
}
inline ::google::protobuf::int32 NewTaskResponse::taskid() const {
  // @@protoc_insertion_point(field_get:gt_msg.NewTaskResponse.taskId)
  return taskid_;
}
inline void NewTaskResponse::set_taskid(::google::protobuf::int32 value) {
  
  taskid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.NewTaskResponse.taskId)
}

// optional int32 fishType = 2;
inline void NewTaskResponse::clear_fishtype() {
  fishtype_ = 0;
}
inline ::google::protobuf::int32 NewTaskResponse::fishtype() const {
  // @@protoc_insertion_point(field_get:gt_msg.NewTaskResponse.fishType)
  return fishtype_;
}
inline void NewTaskResponse::set_fishtype(::google::protobuf::int32 value) {
  
  fishtype_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.NewTaskResponse.fishType)
}

// optional int32 fishCount = 3;
inline void NewTaskResponse::clear_fishcount() {
  fishcount_ = 0;
}
inline ::google::protobuf::int32 NewTaskResponse::fishcount() const {
  // @@protoc_insertion_point(field_get:gt_msg.NewTaskResponse.fishCount)
  return fishcount_;
}
inline void NewTaskResponse::set_fishcount(::google::protobuf::int32 value) {
  
  fishcount_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.NewTaskResponse.fishCount)
}

// -------------------------------------------------------------------

// TaskProgressResponse

// optional int32 taskId = 1;
inline void TaskProgressResponse::clear_taskid() {
  taskid_ = 0;
}
inline ::google::protobuf::int32 TaskProgressResponse::taskid() const {
  // @@protoc_insertion_point(field_get:gt_msg.TaskProgressResponse.taskId)
  return taskid_;
}
inline void TaskProgressResponse::set_taskid(::google::protobuf::int32 value) {
  
  taskid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.TaskProgressResponse.taskId)
}

// optional int32 fishCount = 2;
inline void TaskProgressResponse::clear_fishcount() {
  fishcount_ = 0;
}
inline ::google::protobuf::int32 TaskProgressResponse::fishcount() const {
  // @@protoc_insertion_point(field_get:gt_msg.TaskProgressResponse.fishCount)
  return fishcount_;
}
inline void TaskProgressResponse::set_fishcount(::google::protobuf::int32 value) {
  
  fishcount_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.TaskProgressResponse.fishCount)
}

// -------------------------------------------------------------------

// TaskFinishResponse

// optional int32 taskId = 1;
inline void TaskFinishResponse::clear_taskid() {
  taskid_ = 0;
}
inline ::google::protobuf::int32 TaskFinishResponse::taskid() const {
  // @@protoc_insertion_point(field_get:gt_msg.TaskFinishResponse.taskId)
  return taskid_;
}
inline void TaskFinishResponse::set_taskid(::google::protobuf::int32 value) {
  
  taskid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.TaskFinishResponse.taskId)
}

// optional int64 getScore = 2;
inline void TaskFinishResponse::clear_getscore() {
  getscore_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TaskFinishResponse::getscore() const {
  // @@protoc_insertion_point(field_get:gt_msg.TaskFinishResponse.getScore)
  return getscore_;
}
inline void TaskFinishResponse::set_getscore(::google::protobuf::int64 value) {
  
  getscore_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.TaskFinishResponse.getScore)
}

// -------------------------------------------------------------------

// TakeRedBagRequest

// optional int32 Score = 1;
inline void TakeRedBagRequest::clear_score() {
  score_ = 0;
}
inline ::google::protobuf::int32 TakeRedBagRequest::score() const {
  // @@protoc_insertion_point(field_get:gt_msg.TakeRedBagRequest.Score)
  return score_;
}
inline void TakeRedBagRequest::set_score(::google::protobuf::int32 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.TakeRedBagRequest.Score)
}

// -------------------------------------------------------------------

// TakeRedBagResponse

// optional int32 resultCode = 1;
inline void TakeRedBagResponse::clear_resultcode() {
  resultcode_ = 0;
}
inline ::google::protobuf::int32 TakeRedBagResponse::resultcode() const {
  // @@protoc_insertion_point(field_get:gt_msg.TakeRedBagResponse.resultCode)
  return resultcode_;
}
inline void TakeRedBagResponse::set_resultcode(::google::protobuf::int32 value) {
  
  resultcode_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.TakeRedBagResponse.resultCode)
}

// optional string resultMessage = 2;
inline void TakeRedBagResponse::clear_resultmessage() {
  resultmessage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TakeRedBagResponse::resultmessage() const {
  // @@protoc_insertion_point(field_get:gt_msg.TakeRedBagResponse.resultMessage)
  return resultmessage_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TakeRedBagResponse::set_resultmessage(const ::std::string& value) {
  
  resultmessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.TakeRedBagResponse.resultMessage)
}
inline void TakeRedBagResponse::set_resultmessage(const char* value) {
  
  resultmessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.TakeRedBagResponse.resultMessage)
}
inline void TakeRedBagResponse::set_resultmessage(const char* value, size_t size) {
  
  resultmessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.TakeRedBagResponse.resultMessage)
}
inline ::std::string* TakeRedBagResponse::mutable_resultmessage() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.TakeRedBagResponse.resultMessage)
  return resultmessage_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TakeRedBagResponse::release_resultmessage() {
  // @@protoc_insertion_point(field_release:gt_msg.TakeRedBagResponse.resultMessage)
  
  return resultmessage_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TakeRedBagResponse::set_allocated_resultmessage(::std::string* resultmessage) {
  if (resultmessage != NULL) {
    
  } else {
    
  }
  resultmessage_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), resultmessage);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.TakeRedBagResponse.resultMessage)
}

// optional int32 RedBagScore = 3;
inline void TakeRedBagResponse::clear_redbagscore() {
  redbagscore_ = 0;
}
inline ::google::protobuf::int32 TakeRedBagResponse::redbagscore() const {
  // @@protoc_insertion_point(field_get:gt_msg.TakeRedBagResponse.RedBagScore)
  return redbagscore_;
}
inline void TakeRedBagResponse::set_redbagscore(::google::protobuf::int32 value) {
  
  redbagscore_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.TakeRedBagResponse.RedBagScore)
}

// optional string Ticket = 4;
inline void TakeRedBagResponse::clear_ticket() {
  ticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TakeRedBagResponse::ticket() const {
  // @@protoc_insertion_point(field_get:gt_msg.TakeRedBagResponse.Ticket)
  return ticket_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TakeRedBagResponse::set_ticket(const ::std::string& value) {
  
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.TakeRedBagResponse.Ticket)
}
inline void TakeRedBagResponse::set_ticket(const char* value) {
  
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.TakeRedBagResponse.Ticket)
}
inline void TakeRedBagResponse::set_ticket(const char* value, size_t size) {
  
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.TakeRedBagResponse.Ticket)
}
inline ::std::string* TakeRedBagResponse::mutable_ticket() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.TakeRedBagResponse.Ticket)
  return ticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TakeRedBagResponse::release_ticket() {
  // @@protoc_insertion_point(field_release:gt_msg.TakeRedBagResponse.Ticket)
  
  return ticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TakeRedBagResponse::set_allocated_ticket(::std::string* ticket) {
  if (ticket != NULL) {
    
  } else {
    
  }
  ticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ticket);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.TakeRedBagResponse.Ticket)
}

// -------------------------------------------------------------------

// UpdateRedBag

// optional int32 RemainRedBagScore = 1;
inline void UpdateRedBag::clear_remainredbagscore() {
  remainredbagscore_ = 0;
}
inline ::google::protobuf::int32 UpdateRedBag::remainredbagscore() const {
  // @@protoc_insertion_point(field_get:gt_msg.UpdateRedBag.RemainRedBagScore)
  return remainredbagscore_;
}
inline void UpdateRedBag::set_remainredbagscore(::google::protobuf::int32 value) {
  
  remainredbagscore_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.UpdateRedBag.RemainRedBagScore)
}

// optional int32 PreviousRedBagScore = 2;
inline void UpdateRedBag::clear_previousredbagscore() {
  previousredbagscore_ = 0;
}
inline ::google::protobuf::int32 UpdateRedBag::previousredbagscore() const {
  // @@protoc_insertion_point(field_get:gt_msg.UpdateRedBag.PreviousRedBagScore)
  return previousredbagscore_;
}
inline void UpdateRedBag::set_previousredbagscore(::google::protobuf::int32 value) {
  
  previousredbagscore_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.UpdateRedBag.PreviousRedBagScore)
}

// -------------------------------------------------------------------

// UserTakeScoreRequest

// optional int64 Score = 1;
inline void UserTakeScoreRequest::clear_score() {
  score_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 UserTakeScoreRequest::score() const {
  // @@protoc_insertion_point(field_get:gt_msg.UserTakeScoreRequest.Score)
  return score_;
}
inline void UserTakeScoreRequest::set_score(::google::protobuf::int64 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.UserTakeScoreRequest.Score)
}

// optional string PassWord = 2;
inline void UserTakeScoreRequest::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserTakeScoreRequest::password() const {
  // @@protoc_insertion_point(field_get:gt_msg.UserTakeScoreRequest.PassWord)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserTakeScoreRequest::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.UserTakeScoreRequest.PassWord)
}
inline void UserTakeScoreRequest::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.UserTakeScoreRequest.PassWord)
}
inline void UserTakeScoreRequest::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.UserTakeScoreRequest.PassWord)
}
inline ::std::string* UserTakeScoreRequest::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.UserTakeScoreRequest.PassWord)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserTakeScoreRequest::release_password() {
  // @@protoc_insertion_point(field_release:gt_msg.UserTakeScoreRequest.PassWord)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserTakeScoreRequest::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.UserTakeScoreRequest.PassWord)
}

// -------------------------------------------------------------------

// UserTakeScoreRespone

// optional int32 resultCode = 1;
inline void UserTakeScoreRespone::clear_resultcode() {
  resultcode_ = 0;
}
inline ::google::protobuf::int32 UserTakeScoreRespone::resultcode() const {
  // @@protoc_insertion_point(field_get:gt_msg.UserTakeScoreRespone.resultCode)
  return resultcode_;
}
inline void UserTakeScoreRespone::set_resultcode(::google::protobuf::int32 value) {
  
  resultcode_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.UserTakeScoreRespone.resultCode)
}

// -------------------------------------------------------------------

// TakeBountyRequest

// -------------------------------------------------------------------

// TakeBountyResponse

// optional int32 resultCode = 1;
inline void TakeBountyResponse::clear_resultcode() {
  resultcode_ = 0;
}
inline ::google::protobuf::int32 TakeBountyResponse::resultcode() const {
  // @@protoc_insertion_point(field_get:gt_msg.TakeBountyResponse.resultCode)
  return resultcode_;
}
inline void TakeBountyResponse::set_resultcode(::google::protobuf::int32 value) {
  
  resultcode_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.TakeBountyResponse.resultCode)
}

// optional string resultMessage = 2;
inline void TakeBountyResponse::clear_resultmessage() {
  resultmessage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TakeBountyResponse::resultmessage() const {
  // @@protoc_insertion_point(field_get:gt_msg.TakeBountyResponse.resultMessage)
  return resultmessage_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TakeBountyResponse::set_resultmessage(const ::std::string& value) {
  
  resultmessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.TakeBountyResponse.resultMessage)
}
inline void TakeBountyResponse::set_resultmessage(const char* value) {
  
  resultmessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.TakeBountyResponse.resultMessage)
}
inline void TakeBountyResponse::set_resultmessage(const char* value, size_t size) {
  
  resultmessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.TakeBountyResponse.resultMessage)
}
inline ::std::string* TakeBountyResponse::mutable_resultmessage() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.TakeBountyResponse.resultMessage)
  return resultmessage_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TakeBountyResponse::release_resultmessage() {
  // @@protoc_insertion_point(field_release:gt_msg.TakeBountyResponse.resultMessage)
  
  return resultmessage_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TakeBountyResponse::set_allocated_resultmessage(::std::string* resultmessage) {
  if (resultmessage != NULL) {
    
  } else {
    
  }
  resultmessage_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), resultmessage);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.TakeBountyResponse.resultMessage)
}

// optional int64 Score = 3;
inline void TakeBountyResponse::clear_score() {
  score_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TakeBountyResponse::score() const {
  // @@protoc_insertion_point(field_get:gt_msg.TakeBountyResponse.Score)
  return score_;
}
inline void TakeBountyResponse::set_score(::google::protobuf::int64 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.TakeBountyResponse.Score)
}

// optional int32 RemainTime = 4;
inline void TakeBountyResponse::clear_remaintime() {
  remaintime_ = 0;
}
inline ::google::protobuf::int32 TakeBountyResponse::remaintime() const {
  // @@protoc_insertion_point(field_get:gt_msg.TakeBountyResponse.RemainTime)
  return remaintime_;
}
inline void TakeBountyResponse::set_remaintime(::google::protobuf::int32 value) {
  
  remaintime_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.TakeBountyResponse.RemainTime)
}

// -------------------------------------------------------------------

// SetBounty

// optional int32 BountyIndex = 1;
inline void SetBounty::clear_bountyindex() {
  bountyindex_ = 0;
}
inline ::google::protobuf::int32 SetBounty::bountyindex() const {
  // @@protoc_insertion_point(field_get:gt_msg.SetBounty.BountyIndex)
  return bountyindex_;
}
inline void SetBounty::set_bountyindex(::google::protobuf::int32 value) {
  
  bountyindex_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.SetBounty.BountyIndex)
}

// optional int32 BountyTimeLeft = 2;
inline void SetBounty::clear_bountytimeleft() {
  bountytimeleft_ = 0;
}
inline ::google::protobuf::int32 SetBounty::bountytimeleft() const {
  // @@protoc_insertion_point(field_get:gt_msg.SetBounty.BountyTimeLeft)
  return bountytimeleft_;
}
inline void SetBounty::set_bountytimeleft(::google::protobuf::int32 value) {
  
  bountytimeleft_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.SetBounty.BountyTimeLeft)
}

// -------------------------------------------------------------------

// BaoFenNotify

// optional int64 Score = 1;
inline void BaoFenNotify::clear_score() {
  score_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 BaoFenNotify::score() const {
  // @@protoc_insertion_point(field_get:gt_msg.BaoFenNotify.Score)
  return score_;
}
inline void BaoFenNotify::set_score(::google::protobuf::int64 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.BaoFenNotify.Score)
}

// optional int32 Multiple = 2;
inline void BaoFenNotify::clear_multiple() {
  multiple_ = 0;
}
inline ::google::protobuf::int32 BaoFenNotify::multiple() const {
  // @@protoc_insertion_point(field_get:gt_msg.BaoFenNotify.Multiple)
  return multiple_;
}
inline void BaoFenNotify::set_multiple(::google::protobuf::int32 value) {
  
  multiple_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.BaoFenNotify.Multiple)
}

// optional string FisnName = 3;
inline void BaoFenNotify::clear_fisnname() {
  fisnname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BaoFenNotify::fisnname() const {
  // @@protoc_insertion_point(field_get:gt_msg.BaoFenNotify.FisnName)
  return fisnname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BaoFenNotify::set_fisnname(const ::std::string& value) {
  
  fisnname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.BaoFenNotify.FisnName)
}
inline void BaoFenNotify::set_fisnname(const char* value) {
  
  fisnname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.BaoFenNotify.FisnName)
}
inline void BaoFenNotify::set_fisnname(const char* value, size_t size) {
  
  fisnname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.BaoFenNotify.FisnName)
}
inline ::std::string* BaoFenNotify::mutable_fisnname() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.BaoFenNotify.FisnName)
  return fisnname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BaoFenNotify::release_fisnname() {
  // @@protoc_insertion_point(field_release:gt_msg.BaoFenNotify.FisnName)
  
  return fisnname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BaoFenNotify::set_allocated_fisnname(::std::string* fisnname) {
  if (fisnname != NULL) {
    
  } else {
    
  }
  fisnname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fisnname);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.BaoFenNotify.FisnName)
}

// optional int32 Reword = 4;
inline void BaoFenNotify::clear_reword() {
  reword_ = 0;
}
inline ::google::protobuf::int32 BaoFenNotify::reword() const {
  // @@protoc_insertion_point(field_get:gt_msg.BaoFenNotify.Reword)
  return reword_;
}
inline void BaoFenNotify::set_reword(::google::protobuf::int32 value) {
  
  reword_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.BaoFenNotify.Reword)
}

// -------------------------------------------------------------------

// BaoFenTake

// -------------------------------------------------------------------

// BaoFenReward

// optional int64 Score = 1;
inline void BaoFenReward::clear_score() {
  score_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 BaoFenReward::score() const {
  // @@protoc_insertion_point(field_get:gt_msg.BaoFenReward.Score)
  return score_;
}
inline void BaoFenReward::set_score(::google::protobuf::int64 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.BaoFenReward.Score)
}

// -------------------------------------------------------------------

// FishInformationToAI

// optional int32 Frame = 1;
inline void FishInformationToAI::clear_frame() {
  frame_ = 0;
}
inline ::google::protobuf::int32 FishInformationToAI::frame() const {
  // @@protoc_insertion_point(field_get:gt_msg.FishInformationToAI.Frame)
  return frame_;
}
inline void FishInformationToAI::set_frame(::google::protobuf::int32 value) {
  
  frame_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.FishInformationToAI.Frame)
}

// repeated int32 AreasScore = 2;
inline int FishInformationToAI::areasscore_size() const {
  return areasscore_.size();
}
inline void FishInformationToAI::clear_areasscore() {
  areasscore_.Clear();
}
inline ::google::protobuf::int32 FishInformationToAI::areasscore(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.FishInformationToAI.AreasScore)
  return areasscore_.Get(index);
}
inline void FishInformationToAI::set_areasscore(int index, ::google::protobuf::int32 value) {
  areasscore_.Set(index, value);
  // @@protoc_insertion_point(field_set:gt_msg.FishInformationToAI.AreasScore)
}
inline void FishInformationToAI::add_areasscore(::google::protobuf::int32 value) {
  areasscore_.Add(value);
  // @@protoc_insertion_point(field_add:gt_msg.FishInformationToAI.AreasScore)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
FishInformationToAI::areasscore() const {
  // @@protoc_insertion_point(field_list:gt_msg.FishInformationToAI.AreasScore)
  return areasscore_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
FishInformationToAI::mutable_areasscore() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.FishInformationToAI.AreasScore)
  return &areasscore_;
}

// -------------------------------------------------------------------

// RedFishAppear

// optional int32 fishId = 1;
inline void RedFishAppear::clear_fishid() {
  fishid_ = 0;
}
inline ::google::protobuf::int32 RedFishAppear::fishid() const {
  // @@protoc_insertion_point(field_get:gt_msg.RedFishAppear.fishId)
  return fishid_;
}
inline void RedFishAppear::set_fishid(::google::protobuf::int32 value) {
  
  fishid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.RedFishAppear.fishId)
}

// -------------------------------------------------------------------

// RedFishDisappear

// optional int32 fishId = 1;
inline void RedFishDisappear::clear_fishid() {
  fishid_ = 0;
}
inline ::google::protobuf::int32 RedFishDisappear::fishid() const {
  // @@protoc_insertion_point(field_get:gt_msg.RedFishDisappear.fishId)
  return fishid_;
}
inline void RedFishDisappear::set_fishid(::google::protobuf::int32 value) {
  
  fishid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.RedFishDisappear.fishId)
}

// -------------------------------------------------------------------

// BigFishAppear

// optional int32 fishId = 1;
inline void BigFishAppear::clear_fishid() {
  fishid_ = 0;
}
inline ::google::protobuf::int32 BigFishAppear::fishid() const {
  // @@protoc_insertion_point(field_get:gt_msg.BigFishAppear.fishId)
  return fishid_;
}
inline void BigFishAppear::set_fishid(::google::protobuf::int32 value) {
  
  fishid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.BigFishAppear.fishId)
}

// optional int32 fishType = 2;
inline void BigFishAppear::clear_fishtype() {
  fishtype_ = 0;
}
inline ::google::protobuf::int32 BigFishAppear::fishtype() const {
  // @@protoc_insertion_point(field_get:gt_msg.BigFishAppear.fishType)
  return fishtype_;
}
inline void BigFishAppear::set_fishtype(::google::protobuf::int32 value) {
  
  fishtype_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.BigFishAppear.fishType)
}

// -------------------------------------------------------------------

// BigFishDisappear

// optional int32 fishId = 1;
inline void BigFishDisappear::clear_fishid() {
  fishid_ = 0;
}
inline ::google::protobuf::int32 BigFishDisappear::fishid() const {
  // @@protoc_insertion_point(field_get:gt_msg.BigFishDisappear.fishId)
  return fishid_;
}
inline void BigFishDisappear::set_fishid(::google::protobuf::int32 value) {
  
  fishid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.BigFishDisappear.fishId)
}

// -------------------------------------------------------------------

// AIHeartBeat

// -------------------------------------------------------------------

// FishTest

// optional int32 fishId = 1;
inline void FishTest::clear_fishid() {
  fishid_ = 0;
}
inline ::google::protobuf::int32 FishTest::fishid() const {
  // @@protoc_insertion_point(field_get:gt_msg.FishTest.fishId)
  return fishid_;
}
inline void FishTest::set_fishid(::google::protobuf::int32 value) {
  
  fishid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.FishTest.fishId)
}

// optional int32 fishType = 2;
inline void FishTest::clear_fishtype() {
  fishtype_ = 0;
}
inline ::google::protobuf::int32 FishTest::fishtype() const {
  // @@protoc_insertion_point(field_get:gt_msg.FishTest.fishType)
  return fishtype_;
}
inline void FishTest::set_fishtype(::google::protobuf::int32 value) {
  
  fishtype_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.FishTest.fishType)
}

// optional .gt_msg.Vec2 position = 3;
inline bool FishTest::has_position() const {
  return !_is_default_instance_ && position_ != NULL;
}
inline void FishTest::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) delete position_;
  position_ = NULL;
}
inline const ::gt_msg::Vec2& FishTest::position() const {
  // @@protoc_insertion_point(field_get:gt_msg.FishTest.position)
  return position_ != NULL ? *position_ : *default_instance_->position_;
}
inline ::gt_msg::Vec2* FishTest::mutable_position() {
  
  if (position_ == NULL) {
    position_ = new ::gt_msg::Vec2;
  }
  // @@protoc_insertion_point(field_mutable:gt_msg.FishTest.position)
  return position_;
}
inline ::gt_msg::Vec2* FishTest::release_position() {
  // @@protoc_insertion_point(field_release:gt_msg.FishTest.position)
  
  ::gt_msg::Vec2* temp = position_;
  position_ = NULL;
  return temp;
}
inline void FishTest::set_allocated_position(::gt_msg::Vec2* position) {
  delete position_;
  position_ = position;
  if (position) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gt_msg.FishTest.position)
}

// -------------------------------------------------------------------

// FishGroupTest

// optional int32 frameNow = 1;
inline void FishGroupTest::clear_framenow() {
  framenow_ = 0;
}
inline ::google::protobuf::int32 FishGroupTest::framenow() const {
  // @@protoc_insertion_point(field_get:gt_msg.FishGroupTest.frameNow)
  return framenow_;
}
inline void FishGroupTest::set_framenow(::google::protobuf::int32 value) {
  
  framenow_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.FishGroupTest.frameNow)
}

// repeated .gt_msg.FishTest group = 2;
inline int FishGroupTest::group_size() const {
  return group_.size();
}
inline void FishGroupTest::clear_group() {
  group_.Clear();
}
inline const ::gt_msg::FishTest& FishGroupTest::group(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.FishGroupTest.group)
  return group_.Get(index);
}
inline ::gt_msg::FishTest* FishGroupTest::mutable_group(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.FishGroupTest.group)
  return group_.Mutable(index);
}
inline ::gt_msg::FishTest* FishGroupTest::add_group() {
  // @@protoc_insertion_point(field_add:gt_msg.FishGroupTest.group)
  return group_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gt_msg::FishTest >*
FishGroupTest::mutable_group() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.FishGroupTest.group)
  return &group_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gt_msg::FishTest >&
FishGroupTest::group() const {
  // @@protoc_insertion_point(field_list:gt_msg.FishGroupTest.group)
  return group_;
}

// -------------------------------------------------------------------

// RedPackRequest

// -------------------------------------------------------------------

// RedPackFromServer

// optional int32 jsonType = 1;
inline void RedPackFromServer::clear_jsontype() {
  jsontype_ = 0;
}
inline ::google::protobuf::int32 RedPackFromServer::jsontype() const {
  // @@protoc_insertion_point(field_get:gt_msg.RedPackFromServer.jsonType)
  return jsontype_;
}
inline void RedPackFromServer::set_jsontype(::google::protobuf::int32 value) {
  
  jsontype_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.RedPackFromServer.jsonType)
}

// optional string jsonData = 2;
inline void RedPackFromServer::clear_jsondata() {
  jsondata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RedPackFromServer::jsondata() const {
  // @@protoc_insertion_point(field_get:gt_msg.RedPackFromServer.jsonData)
  return jsondata_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RedPackFromServer::set_jsondata(const ::std::string& value) {
  
  jsondata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.RedPackFromServer.jsonData)
}
inline void RedPackFromServer::set_jsondata(const char* value) {
  
  jsondata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.RedPackFromServer.jsonData)
}
inline void RedPackFromServer::set_jsondata(const char* value, size_t size) {
  
  jsondata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.RedPackFromServer.jsonData)
}
inline ::std::string* RedPackFromServer::mutable_jsondata() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.RedPackFromServer.jsonData)
  return jsondata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RedPackFromServer::release_jsondata() {
  // @@protoc_insertion_point(field_release:gt_msg.RedPackFromServer.jsonData)
  
  return jsondata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RedPackFromServer::set_allocated_jsondata(::std::string* jsondata) {
  if (jsondata != NULL) {
    
  } else {
    
  }
  jsondata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), jsondata);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.RedPackFromServer.jsonData)
}

// -------------------------------------------------------------------

// RedPackFromClient

// optional string jsonData = 1;
inline void RedPackFromClient::clear_jsondata() {
  jsondata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RedPackFromClient::jsondata() const {
  // @@protoc_insertion_point(field_get:gt_msg.RedPackFromClient.jsonData)
  return jsondata_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RedPackFromClient::set_jsondata(const ::std::string& value) {
  
  jsondata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.RedPackFromClient.jsonData)
}
inline void RedPackFromClient::set_jsondata(const char* value) {
  
  jsondata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.RedPackFromClient.jsonData)
}
inline void RedPackFromClient::set_jsondata(const char* value, size_t size) {
  
  jsondata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.RedPackFromClient.jsonData)
}
inline ::std::string* RedPackFromClient::mutable_jsondata() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.RedPackFromClient.jsonData)
  return jsondata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RedPackFromClient::release_jsondata() {
  // @@protoc_insertion_point(field_release:gt_msg.RedPackFromClient.jsonData)
  
  return jsondata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RedPackFromClient::set_allocated_jsondata(::std::string* jsondata) {
  if (jsondata != NULL) {
    
  } else {
    
  }
  jsondata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), jsondata);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.RedPackFromClient.jsonData)
}

// -------------------------------------------------------------------

// ServerEditOperateRusult

// optional int32 resultCode = 1;
inline void ServerEditOperateRusult::clear_resultcode() {
  resultcode_ = 0;
}
inline ::google::protobuf::int32 ServerEditOperateRusult::resultcode() const {
  // @@protoc_insertion_point(field_get:gt_msg.ServerEditOperateRusult.resultCode)
  return resultcode_;
}
inline void ServerEditOperateRusult::set_resultcode(::google::protobuf::int32 value) {
  
  resultcode_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.ServerEditOperateRusult.resultCode)
}

// optional string resultMessge = 2;
inline void ServerEditOperateRusult::clear_resultmessge() {
  resultmessge_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ServerEditOperateRusult::resultmessge() const {
  // @@protoc_insertion_point(field_get:gt_msg.ServerEditOperateRusult.resultMessge)
  return resultmessge_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ServerEditOperateRusult::set_resultmessge(const ::std::string& value) {
  
  resultmessge_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.ServerEditOperateRusult.resultMessge)
}
inline void ServerEditOperateRusult::set_resultmessge(const char* value) {
  
  resultmessge_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.ServerEditOperateRusult.resultMessge)
}
inline void ServerEditOperateRusult::set_resultmessge(const char* value, size_t size) {
  
  resultmessge_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.ServerEditOperateRusult.resultMessge)
}
inline ::std::string* ServerEditOperateRusult::mutable_resultmessge() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.ServerEditOperateRusult.resultMessge)
  return resultmessge_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ServerEditOperateRusult::release_resultmessge() {
  // @@protoc_insertion_point(field_release:gt_msg.ServerEditOperateRusult.resultMessge)
  
  return resultmessge_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ServerEditOperateRusult::set_allocated_resultmessge(::std::string* resultmessge) {
  if (resultmessge != NULL) {
    
  } else {
    
  }
  resultmessge_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), resultmessge);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.ServerEditOperateRusult.resultMessge)
}

// -------------------------------------------------------------------

// CompetitionRusult

// optional int32 resultCode = 1;
inline void CompetitionRusult::clear_resultcode() {
  resultcode_ = 0;
}
inline ::google::protobuf::int32 CompetitionRusult::resultcode() const {
  // @@protoc_insertion_point(field_get:gt_msg.CompetitionRusult.resultCode)
  return resultcode_;
}
inline void CompetitionRusult::set_resultcode(::google::protobuf::int32 value) {
  
  resultcode_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.CompetitionRusult.resultCode)
}

// optional string resultMessage = 2;
inline void CompetitionRusult::clear_resultmessage() {
  resultmessage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CompetitionRusult::resultmessage() const {
  // @@protoc_insertion_point(field_get:gt_msg.CompetitionRusult.resultMessage)
  return resultmessage_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CompetitionRusult::set_resultmessage(const ::std::string& value) {
  
  resultmessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.CompetitionRusult.resultMessage)
}
inline void CompetitionRusult::set_resultmessage(const char* value) {
  
  resultmessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.CompetitionRusult.resultMessage)
}
inline void CompetitionRusult::set_resultmessage(const char* value, size_t size) {
  
  resultmessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.CompetitionRusult.resultMessage)
}
inline ::std::string* CompetitionRusult::mutable_resultmessage() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.CompetitionRusult.resultMessage)
  return resultmessage_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CompetitionRusult::release_resultmessage() {
  // @@protoc_insertion_point(field_release:gt_msg.CompetitionRusult.resultMessage)
  
  return resultmessage_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CompetitionRusult::set_allocated_resultmessage(::std::string* resultmessage) {
  if (resultmessage != NULL) {
    
  } else {
    
  }
  resultmessage_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), resultmessage);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.CompetitionRusult.resultMessage)
}

// optional int32 Winner = 3;
inline void CompetitionRusult::clear_winner() {
  winner_ = 0;
}
inline ::google::protobuf::int32 CompetitionRusult::winner() const {
  // @@protoc_insertion_point(field_get:gt_msg.CompetitionRusult.Winner)
  return winner_;
}
inline void CompetitionRusult::set_winner(::google::protobuf::int32 value) {
  
  winner_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.CompetitionRusult.Winner)
}

// optional int64 WinScore = 4;
inline void CompetitionRusult::clear_winscore() {
  winscore_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CompetitionRusult::winscore() const {
  // @@protoc_insertion_point(field_get:gt_msg.CompetitionRusult.WinScore)
  return winscore_;
}
inline void CompetitionRusult::set_winscore(::google::protobuf::int64 value) {
  
  winscore_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.CompetitionRusult.WinScore)
}

// optional int32 RedpackSum = 5;
inline void CompetitionRusult::clear_redpacksum() {
  redpacksum_ = 0;
}
inline ::google::protobuf::int32 CompetitionRusult::redpacksum() const {
  // @@protoc_insertion_point(field_get:gt_msg.CompetitionRusult.RedpackSum)
  return redpacksum_;
}
inline void CompetitionRusult::set_redpacksum(::google::protobuf::int32 value) {
  
  redpacksum_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.CompetitionRusult.RedpackSum)
}

// -------------------------------------------------------------------

// AddFishStoreScore

// optional int64 score = 1;
inline void AddFishStoreScore::clear_score() {
  score_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AddFishStoreScore::score() const {
  // @@protoc_insertion_point(field_get:gt_msg.AddFishStoreScore.score)
  return score_;
}
inline void AddFishStoreScore::set_score(::google::protobuf::int64 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.AddFishStoreScore.score)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace gt_msg

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_gt_5fbuyu_2eproto__INCLUDED
